import{_ as e,c as n,o as a,d as t}from"./app-BSlfXnWa.js";const s={},l=t(`<h1 id="c" tabindex="-1"><a class="header-anchor" href="#c"><span>C</span></a></h1><h3 id="core-profile-grouptoken" tabindex="-1"><a class="header-anchor" href="#core-profile-grouptoken"><span><code>Core::Profile::GroupToken</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const Core::Profile::ProfileGroup *</code></td><td>mGroup</td></tr><tr><td>8</td><td>(80) <code>std::mutex</code></td><td>mTokenCreationMutex</td></tr><tr><td>88</td><td>(16) <code>Core::Profile::CPUProfileTokenMicroProfile</code></td><td>mToken</td></tr><tr><td>104</td><td>(8) <code>const char *</code></td><td>mLabel</td></tr><tr><td>112</td><td>(4) <code>unsigned int</code></td><td>mCustomColor</td></tr></tbody></table><h3 id="core-profile-cpuprofiletokenmicroprofile" tabindex="-1"><a class="header-anchor" href="#core-profile-cpuprofiletokenmicroprofile"><span><code>Core::Profile::CPUProfileTokenMicroProfile</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>mColor</td></tr><tr><td>8</td><td>(8) <code>std::atomic&lt;unsigned __int64&gt;</code></td><td>mMicroProfileToken</td></tr></tbody></table><h3 id="clientblockpipeline-smoothlightbakingstep-computelightbrightness-l2-lambda-44f4050c3c928648c37d299e6a06abad" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-smoothlightbakingstep-computelightbrightness-l2-lambda-44f4050c3c928648c37d299e6a06abad"><span><code>ClientBlockPipeline::SmoothLightBakingStep::_computeLightBrightness::__l2::&lt;lambda_44f4050c3c928648c37d299e6a06abad&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="core-pathbuffer-std-basic-string-char-std-char-traits-char-std-allocator-char" tabindex="-1"><a class="header-anchor" href="#core-pathbuffer-std-basic-string-char-std-char-traits-char-std-allocator-char"><span><code>Core::PathBuffer&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mContainer</td></tr></tbody></table><h3 id="core-path" tabindex="-1"><a class="header-anchor" href="#core-path"><span><code>Core::Path</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>Core::PathPart</code></td><td>mPathPart</td></tr></tbody></table><h3 id="core-pathpart" tabindex="-1"><a class="header-anchor" href="#core-pathpart"><span><code>Core::PathPart</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mUtf8StdString</td></tr></tbody></table><h3 id="contentidentity" tabindex="-1"><a class="header-anchor" href="#contentidentity"><span><code>ContentIdentity</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>mce::UUID</code></td><td>mUUID</td></tr><tr><td>16</td><td>(1) <code>bool</code></td><td>mValid</td></tr></tbody></table><h3 id="clientblobcache-cache-trimifneeded-l5-lambda-cfc6481d33223e5533d33a80b1ed8b6a" tabindex="-1"><a class="header-anchor" href="#clientblobcache-cache-trimifneeded-l5-lambda-cfc6481d33223e5533d33a80b1ed8b6a"><span><code>ClientBlobCache::Cache::_trimIfNeeded::__l5::&lt;lambda_cfc6481d33223e5533d33a80b1ed8b6a&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="chunkpos" tabindex="-1"><a class="header-anchor" href="#chunkpos"><span><code>ChunkPos</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>$9E42F9C9F7B1A17B3F4FC42C25BE33AF</code></td><td>___u0</td></tr></tbody></table><h3 id="core-pathbuffer-core-stackstring-char-1024" tabindex="-1"><a class="header-anchor" href="#core-pathbuffer-core-stackstring-char-1024"><span><code>Core::PathBuffer&lt;Core::StackString&lt;char,1024&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1040) <code>Core::StackString&lt;char,1024&gt;</code></td><td>mContainer</td></tr></tbody></table><h3 id="core-stackstring-char-1024" tabindex="-1"><a class="header-anchor" href="#core-stackstring-char-1024"><span><code>Core::StackString&lt;char,1024&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const unsigned __int64</code></td><td>MAX_LENGTH</td></tr><tr><td>8</td><td>(1024) <code>std::array&lt;char,1024&gt;</code></td><td>mBuf</td></tr><tr><td>1032</td><td>(8) <code>unsigned __int64</code></td><td>mLength</td></tr></tbody></table><h3 id="contentacquisition-sortcontenttrackersbypriority-l2-lambda-9747ad26564c82a94e7199d71afa4537" tabindex="-1"><a class="header-anchor" href="#contentacquisition-sortcontenttrackersbypriority-l2-lambda-9747ad26564c82a94e7199d71afa4537"><span><code>ContentAcquisition::_sortContentTrackersByPriority::__l2::&lt;lambda_9747ad26564c82a94e7199d71afa4537&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="commondocument" tabindex="-1"><a class="header-anchor" href="#commondocument"><span><code>CommonDocument</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mProductId</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>mContentType</td></tr><tr><td>64</td><td>(32) <code>std::string</code></td><td>mCreatorId</td></tr><tr><td>96</td><td>(32) <code>std::string</code></td><td>mStartDate</td></tr><tr><td>128</td><td>(32) <code>std::string</code></td><td>mCreationDate</td></tr><tr><td>160</td><td>(32) <code>std::string</code></td><td>mLastModifiedDate</td></tr><tr><td>192</td><td>(64) <code>CommonLocTextPair</code></td><td>mTitle</td></tr><tr><td>256</td><td>(64) <code>CommonLocTextPair</code></td><td>mDescription</td></tr><tr><td>320</td><td>(64) <code>std::unordered_map&lt;std::string,std::string&gt;</code></td><td>mTitleDictionary</td></tr><tr><td>384</td><td>(64) <code>std::unordered_map&lt;std::string,std::string&gt;</code></td><td>mDescriptionDictionary</td></tr><tr><td>448</td><td>(28) <code>RatingData</code></td><td>mRatingData</td></tr><tr><td>476</td><td>(1) <code>bool</code></td><td>mIsSemVersionValid</td></tr><tr><td>477</td><td>(1) <code>bool</code></td><td>mIsTitleLocked</td></tr><tr><td>480</td><td>(32) <code>std::string</code></td><td>mThumbnailUrl</td></tr><tr><td>512</td><td>(24) <code>std::vector&lt;std::string&gt;</code></td><td>mTags</td></tr><tr><td>536</td><td>(24) <code>std::vector&lt;CommonContent&gt;</code></td><td>mContents</td></tr><tr><td>560</td><td>(24) <code>std::vector&lt;CommonImage&gt;</code></td><td>mImages</td></tr></tbody></table><h3 id="commonloctextpair" tabindex="-1"><a class="header-anchor" href="#commonloctextpair"><span><code>CommonLocTextPair</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>langCode</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>locText</td></tr></tbody></table><h3 id="contenttiermanager-validatorregistry-validatorregisterer" tabindex="-1"><a class="header-anchor" href="#contenttiermanager-validatorregistry-validatorregisterer"><span><code>ContentTierManager::ValidatorRegistry::ValidatorRegisterer</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="contenttiermanager-validatorregistry" tabindex="-1"><a class="header-anchor" href="#contenttiermanager-validatorregistry"><span><code>ContentTierManager::ValidatorRegistry</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>Bedrock::EnableNonOwnerReferences</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(64) <code>std::unordered_map&lt;std::string,ContentTierManager::ValidatorRegistry::ValidatorRegistryValidators&gt;</code></td><td>mValidatorList</td></tr></tbody></table><h3 id="commandflag" tabindex="-1"><a class="header-anchor" href="#commandflag"><span><code>CommandFlag</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>unsigned __int8</code></td><td>flag</td></tr></tbody></table><h3 id="commandorigin" tabindex="-1"><a class="header-anchor" href="#commandorigin"><span><code>CommandOrigin</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>CommandOrigin_vtbl *</code></td><td>__vftable</td></tr><tr><td>8</td><td>(16) <code>mce::UUID</code></td><td>mUUID</td></tr></tbody></table><h3 id="core-random" tabindex="-1"><a class="header-anchor" href="#core-random"><span><code>Core::Random</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>mSeed</td></tr><tr><td>4</td><td>(2496) <code>unsigned int[624]</code></td><td>_mt</td></tr><tr><td>2500</td><td>(4) <code>int</code></td><td>_mti</td></tr><tr><td>2504</td><td>(1) <code>bool</code></td><td>mHaveNextNextGaussian</td></tr><tr><td>2508</td><td>(4) <code>float</code></td><td>mNextNextGaussian</td></tr><tr><td>2512</td><td>(4) <code>int</code></td><td>mInitedIdx</td></tr></tbody></table><h3 id="componentdescription" tabindex="-1"><a class="header-anchor" href="#componentdescription"><span><code>ComponentDescription</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Description</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="compoundtag" tabindex="-1"><a class="header-anchor" href="#compoundtag"><span><code>CompoundTag</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Tag</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(16) <code>std::map&lt;std::string,CompoundTagVariant&gt;</code></td><td>mTags</td></tr></tbody></table><h3 id="craftablecompounds-getcompoundid-l2-lambda-cb3f8bb483eddc0a11d03ac37babd3ba" tabindex="-1"><a class="header-anchor" href="#craftablecompounds-getcompoundid-l2-lambda-cb3f8bb483eddc0a11d03ac37babd3ba"><span><code>CraftableCompounds::_getCompoundId::__l2::&lt;lambda_cb3f8bb483eddc0a11d03ac37babd3ba&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="containerpopulationdata" tabindex="-1"><a class="header-anchor" href="#containerpopulationdata"><span><code>ContainerPopulationData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>ContainerEnumName</code></td><td>containerName</td></tr><tr><td>4</td><td>(4) <code>CreativeItemCategory</code></td><td>itemCategory</td></tr></tbody></table><h3 id="containerscreencontext" tabindex="-1"><a class="header-anchor" href="#containerscreencontext"><span><code>ContainerScreenContext</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Player *</code></td><td>mPlayer</td></tr><tr><td>8</td><td>(1) <code>ContainerType</code></td><td>mScreenContainerType</td></tr><tr><td>16</td><td>(24) <code>std::variant&lt;std::monostate,ActorUniqueID,BlockPos&gt;</code></td><td>mOwner</td></tr></tbody></table><h3 id="chemicalheatblock-getrelativeoffsets-l5-lambda-b0dd78f1bda910ef2822257e4eb6eb5b" tabindex="-1"><a class="header-anchor" href="#chemicalheatblock-getrelativeoffsets-l5-lambda-b0dd78f1bda910ef2822257e4eb6eb5b"><span><code>ChemicalHeatBlock::_getRelativeOffsets::__l5::&lt;lambda_b0dd78f1bda910ef2822257e4eb6eb5b&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="chunklocalheight" tabindex="-1"><a class="header-anchor" href="#chunklocalheight"><span><code>ChunkLocalHeight</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>__int16</code></td><td>mVal</td></tr></tbody></table><h3 id="chunksource-spawnchunkgenerationtasks-l3-lambda-7e0f765fe899e3b8d51a4ee6497a8231" tabindex="-1"><a class="header-anchor" href="#chunksource-spawnchunkgenerationtasks-l3-lambda-7e0f765fe899e3b8d51a4ee6497a8231"><span><code>ChunkSource::_spawnChunkGenerationTasks::__l3::&lt;lambda_7e0f765fe899e3b8d51a4ee6497a8231&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cst-diphone-entry-struct" tabindex="-1"><a class="header-anchor" href="#cst-diphone-entry-struct"><span><code>cst_diphone_entry_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const char *</code></td><td>name</td></tr><tr><td>8</td><td>(2) <code>unsigned __int16</code></td><td>start_pm</td></tr><tr><td>10</td><td>(1) <code>unsigned __int8</code></td><td>pb_pm</td></tr><tr><td>11</td><td>(1) <code>unsigned __int8</code></td><td>end_pm</td></tr></tbody></table><h3 id="cst-dur-stats-struct" tabindex="-1"><a class="header-anchor" href="#cst-dur-stats-struct"><span><code>cst_dur_stats_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>char *</code></td><td>phone</td></tr><tr><td>8</td><td>(4) <code>float</code></td><td>mean</td></tr><tr><td>12</td><td>(4) <code>float</code></td><td>stddev</td></tr></tbody></table><h3 id="cst-val-struct" tabindex="-1"><a class="header-anchor" href="#cst-val-struct"><span><code>cst_val_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>union {cst_val_cons_struct cc;cst_val_atom_struct a;}</code></td><td>c</td></tr></tbody></table><h3 id="cst-val-cons-struct" tabindex="-1"><a class="header-anchor" href="#cst-val-cons-struct"><span><code>cst_val_cons_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>cst_val_struct *</code></td><td>car</td></tr><tr><td>8</td><td>(8) <code>cst_val_struct *</code></td><td>cdr</td></tr></tbody></table><h3 id="cst-val-atom-struct" tabindex="-1"><a class="header-anchor" href="#cst-val-atom-struct"><span><code>cst_val_atom_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>type</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>ref_count</td></tr><tr><td>8</td><td>(8) <code>cst_val_atom_struct::&lt;unnamed_type_v&gt;</code></td><td>v</td></tr></tbody></table><h3 id="cst-val-atom-struct-unnamed-type-v" tabindex="-1"><a class="header-anchor" href="#cst-val-atom-struct-unnamed-type-v"><span><code>cst_val_atom_struct::&lt;unnamed_type_v&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>long double</code></td><td>fval</td></tr><tr><td>1</td><td>(8) <code>__int64</code></td><td>ival</td></tr><tr><td>2</td><td>(8) <code>void *</code></td><td>vval</td></tr></tbody></table><h3 id="cst-cart-node-struct" tabindex="-1"><a class="header-anchor" href="#cst-cart-node-struct"><span><code>cst_cart_node_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>unsigned __int8</code></td><td>feat</td></tr><tr><td>1</td><td>(1) <code>unsigned __int8</code></td><td>op</td></tr><tr><td>2</td><td>(2) <code>unsigned __int16</code></td><td>no_node</td></tr><tr><td>8</td><td>(8) <code>const cst_val_struct *</code></td><td>val</td></tr></tbody></table><h3 id="cst-regex-struct" tabindex="-1"><a class="header-anchor" href="#cst-regex-struct"><span><code>cst_regex_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>char</code></td><td>regstart</td></tr><tr><td>1</td><td>(1) <code>char</code></td><td>reganch</td></tr><tr><td>8</td><td>(8) <code>char *</code></td><td>regmust</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>regmlen</td></tr><tr><td>20</td><td>(4) <code>int</code></td><td>regsize</td></tr><tr><td>24</td><td>(8) <code>char *</code></td><td>program</td></tr></tbody></table><h3 id="cst-synth-module-struct" tabindex="-1"><a class="header-anchor" href="#cst-synth-module-struct"><span><code>cst_synth_module_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const char *</code></td><td>hookname</td></tr><tr><td>8</td><td>(8) <code>cst_utterance_struct *(__fastcall *)(cst_utterance_struct *)</code></td><td>defhook</td></tr></tbody></table><h3 id="config-s" tabindex="-1"><a class="header-anchor" href="#config-s"><span><code>config_s</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>unsigned __int16</code></td><td>good_length</td></tr><tr><td>2</td><td>(2) <code>unsigned __int16</code></td><td>max_lazy</td></tr><tr><td>4</td><td>(2) <code>unsigned __int16</code></td><td>nice_length</td></tr><tr><td>6</td><td>(2) <code>unsigned __int16</code></td><td>max_chain</td></tr><tr><td>8</td><td>(8) <code>block_state (__fastcall *)(internal_state *, int)</code></td><td>func</td></tr></tbody></table><h3 id="code" tabindex="-1"><a class="header-anchor" href="#code"><span><code>code</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>unsigned __int8</code></td><td>op</td></tr><tr><td>1</td><td>(1) <code>unsigned __int8</code></td><td>bits</td></tr><tr><td>2</td><td>(2) <code>unsigned __int16</code></td><td>val</td></tr></tbody></table><h3 id="ct-data-s" tabindex="-1"><a class="header-anchor" href="#ct-data-s"><span><code>ct_data_s</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>union {unsigned __int16 freq;unsigned __int16 code;}</code></td><td>fc</td></tr><tr><td>2</td><td>(2) <code>union {unsigned __int16 dad;unsigned __int16 len;}</code></td><td>_dl</td></tr></tbody></table><h3 id="core-fileopenmode" tabindex="-1"><a class="header-anchor" href="#core-fileopenmode"><span><code>Core::FileOpenMode</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>__int8</code></td><td>_bf_0</td></tr></tbody></table><h3 id="comparescheduledcallback" tabindex="-1"><a class="header-anchor" href="#comparescheduledcallback"><span><code>CompareScheduledCallback</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cff-field-handler" tabindex="-1"><a class="header-anchor" href="#cff-field-handler"><span><code>CFF_Field_Handler_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>kind</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>code</td></tr><tr><td>8</td><td>(4) <code>unsigned int</code></td><td>offset</td></tr><tr><td>12</td><td>(1) <code>unsigned __int8</code></td><td>size</td></tr><tr><td>16</td><td>(8) <code>int (__fastcall *)(CFF_ParserRec_ *)</code></td><td>reader</td></tr><tr><td>24</td><td>(4) <code>unsigned int</code></td><td>array_max</td></tr><tr><td>28</td><td>(4) <code>unsigned int</code></td><td>count_offset</td></tr></tbody></table><h3 id="core-profile-profilegroupmanager" tabindex="-1"><a class="header-anchor" href="#core-profile-profilegroupmanager"><span><code>Core::Profile::ProfileGroupManager</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_ptr&lt;Core::Profile::ProfileGroupManager::Impl&gt;</code></td><td>mImpl</td></tr></tbody></table><h3 id="core-profile-countertokenmicroprofile" tabindex="-1"><a class="header-anchor" href="#core-profile-countertokenmicroprofile"><span><code>Core::Profile::CounterTokenMicroProfile</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned __int64</code></td><td>mMicroProfileToken</td></tr></tbody></table><h3 id="colorchannel" tabindex="-1"><a class="header-anchor" href="#colorchannel"><span><code>ColorChannel</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>float</code></td><td>mValue</td></tr></tbody></table><h3 id="catalogpropertybag" tabindex="-1"><a class="header-anchor" href="#catalogpropertybag"><span><code>CatalogPropertyBag</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>PropertyBag</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="compassspritecalculator" tabindex="-1"><a class="header-anchor" href="#compassspritecalculator"><span><code>CompassSpriteCalculator</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mFrame</td></tr><tr><td>4</td><td>(4) <code>float</code></td><td>mRot</td></tr><tr><td>8</td><td>(4) <code>float</code></td><td>mRotA</td></tr></tbody></table><h3 id="cst-lang-struct" tabindex="-1"><a class="header-anchor" href="#cst-lang-struct"><span><code>cst_lang_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const char *</code></td><td>lang</td></tr><tr><td>8</td><td>(8) <code>void (__fastcall *)(cst_voice_struct *)</code></td><td>lang_init</td></tr><tr><td>16</td><td>(8) <code>lexicon_struct *(*)(...)</code></td><td>lex_init</td></tr></tbody></table><h3 id="crashdumpformatentryimpl" tabindex="-1"><a class="header-anchor" href="#crashdumpformatentryimpl"><span><code>CrashDumpFormatEntryImpl</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>CrashDumpLogFieldFormat</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="crashdumplogfieldformat" tabindex="-1"><a class="header-anchor" href="#crashdumplogfieldformat"><span><code>CrashDumpLogFieldFormat</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>char[24]</code></td><td>mMemberName</td></tr><tr><td>24</td><td>(4) <code>unsigned int</code></td><td>mMemberSize</td></tr><tr><td>28</td><td>(4) <code>_BYTE[4]</code></td><td>mMemberFormatCode</td></tr></tbody></table><h3 id="cst-cart-struct" tabindex="-1"><a class="header-anchor" href="#cst-cart-struct"><span><code>cst_cart_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const cst_cart_node_struct *</code></td><td>rule_table</td></tr><tr><td>8</td><td>(8) <code>const char *const *</code></td><td>feat_table</td></tr></tbody></table><h3 id="core-subject-i18nobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-subject-i18nobserver-core-singlethreadedlock"><span><code>Core::Subject&lt;I18nObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>8</td><td>(24) <code>std::vector&lt;gsl::not_null&lt;I18nObserver *&gt;&gt;</code></td><td>mObservers</td></tr></tbody></table><h3 id="core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-singlethreadedlock"><span><code>Core::SingleThreadedLock</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="core-storageareastree" tabindex="-1"><a class="header-anchor" href="#core-storageareastree"><span><code>Core::StorageAreasTree</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>Core::StorageAreasTree::TreeNode</code></td><td>mRoot</td></tr><tr><td>32</td><td>(24) <code>std::vector&lt;Core::FileStorageArea *&gt;</code></td><td>mStorageAreas</td></tr></tbody></table><h3 id="core-storageareastree-treenode" tabindex="-1"><a class="header-anchor" href="#core-storageareastree-treenode"><span><code>Core::StorageAreasTree::TreeNode</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;Core::StorageAreasTree::TreeChild&gt;</code></td><td>mChildren</td></tr><tr><td>24</td><td>(8) <code>Core::FileStorageArea *</code></td><td>mStorageArea</td></tr></tbody></table><h3 id="cst-lts-rules-struct" tabindex="-1"><a class="header-anchor" href="#cst-lts-rules-struct"><span><code>cst_lts_rules_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>char *</code></td><td>name</td></tr><tr><td>8</td><td>(8) <code>const unsigned __int16 *</code></td><td>letter_index</td></tr><tr><td>16</td><td>(8) <code>const unsigned __int8 *</code></td><td>models</td></tr><tr><td>24</td><td>(8) <code>const char *const *</code></td><td>phone_table</td></tr><tr><td>32</td><td>(4) <code>int</code></td><td>context_window_size</td></tr><tr><td>36</td><td>(4) <code>int</code></td><td>context_extra_feats</td></tr><tr><td>40</td><td>(8) <code>const char *const *</code></td><td>letter_table</td></tr></tbody></table><h3 id="core-outputfilestream" tabindex="-1"><a class="header-anchor" href="#core-outputfilestream"><span><code>Core::OutputFileStream</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(296) <code>Core::FileStream</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="core-filestream" tabindex="-1"><a class="header-anchor" href="#core-filestream"><span><code>Core::FileStream</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(128) <code>std::iostream</code></td><td>baseclass_0</td></tr><tr><td>128</td><td>(56) <code>_BYTE[56]</code></td><td>mStreamBuffer</td></tr><tr><td>184</td><td>(1) <code>bool</code></td><td>mLoggingEnabled</td></tr><tr><td>185</td><td>(111) <code>_BYTE[111]</code></td><td>gapB9</td></tr></tbody></table><h3 id="commandregistry-symbol" tabindex="-1"><a class="header-anchor" href="#commandregistry-symbol"><span><code>CommandRegistry::Symbol</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mValue</td></tr></tbody></table><h3 id="cff-decoder-funcsrec" tabindex="-1"><a class="header-anchor" href="#cff-decoder-funcsrec"><span><code>CFF_Decoder_FuncsRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>void (__fastcall *)(CFF_Decoder_ *, TT_FaceRec_ *, CFF_SizeRec_ *, CFF_GlyphSlotRec_ *, unsigned __int8, FT_Render_Mode_, int (__fastcall *)(TT_FaceRec_ *, unsigned int, unsigned __int8 **, unsigned int *), void (__fastcall *)(TT_FaceRec_ *, unsigned __int8 **, unsigned int))</code></td><td>init</td></tr><tr><td>8</td><td>(8) <code>int (__fastcall *)(CFF_Decoder_ *, CFF_SizeRec_ *, unsigned int)</code></td><td>prepare</td></tr><tr><td>16</td><td>(8) <code>int (__fastcall *)(PS_Decoder_ *, unsigned __int8 *, unsigned int)</code></td><td>parse_charstrings</td></tr></tbody></table><h3 id="core-filestats" tabindex="-1"><a class="header-anchor" href="#core-filestats"><span><code>Core::FileStats</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::atomic&lt;unsigned __int64&gt;</code></td><td>mNumSuccessfulWriteOperations</td></tr><tr><td>8</td><td>(8) <code>std::atomic&lt;unsigned __int64&gt;</code></td><td>mNumBytesWritten</td></tr><tr><td>16</td><td>(8) <code>std::atomic&lt;unsigned __int64&gt;</code></td><td>mNumFailedWriteOperations</td></tr><tr><td>24</td><td>(8) <code>std::atomic&lt;unsigned __int64&gt;</code></td><td>mNumSuccessfulReadOperations</td></tr><tr><td>32</td><td>(8) <code>std::atomic&lt;unsigned __int64&gt;</code></td><td>mNumBytesRead</td></tr><tr><td>40</td><td>(8) <code>std::atomic&lt;unsigned __int64&gt;</code></td><td>mNumFailedReadOperations</td></tr><tr><td>48</td><td>(8) <code>std::atomic&lt;unsigned __int64&gt;</code></td><td>mFileSystemSize</td></tr><tr><td>56</td><td>(8) <code>std::atomic&lt;unsigned __int64&gt;</code></td><td>mFileSystemAllocatedSize</td></tr></tbody></table><h3 id="cst-sts-list-struct" tabindex="-1"><a class="header-anchor" href="#cst-sts-list-struct"><span><code>cst_sts_list_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const cst_sts_struct *</code></td><td>sts</td></tr><tr><td>8</td><td>(8) <code>const cst_sts_paged_struct *</code></td><td>sts_paged</td></tr><tr><td>16</td><td>(8) <code>const unsigned __int16 *</code></td><td>frames</td></tr><tr><td>24</td><td>(8) <code>const unsigned __int8 *</code></td><td>residuals</td></tr><tr><td>32</td><td>(8) <code>const unsigned int *</code></td><td>resoffs</td></tr><tr><td>40</td><td>(8) <code>const unsigned __int8 *</code></td><td>ressizes</td></tr><tr><td>48</td><td>(4) <code>int</code></td><td>num_sts</td></tr><tr><td>52</td><td>(4) <code>int</code></td><td>num_channels</td></tr><tr><td>56</td><td>(4) <code>int</code></td><td>sample_rate</td></tr><tr><td>60</td><td>(4) <code>float</code></td><td>coeff_min</td></tr><tr><td>64</td><td>(4) <code>float</code></td><td>coeff_range</td></tr><tr><td>72</td><td>(8) <code>const char *</code></td><td>codec</td></tr></tbody></table><h3 id="cst-phoneset-struct" tabindex="-1"><a class="header-anchor" href="#cst-phoneset-struct"><span><code>cst_phoneset_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const char *</code></td><td>name</td></tr><tr><td>8</td><td>(8) <code>const char *const *</code></td><td>featnames</td></tr><tr><td>16</td><td>(8) <code>const cst_val_struct *const *</code></td><td>featvals</td></tr><tr><td>24</td><td>(8) <code>const char *const *</code></td><td>phonenames</td></tr><tr><td>32</td><td>(8) <code>const char *</code></td><td>silence</td></tr><tr><td>40</td><td>(4) <code>const int</code></td><td>num_phones</td></tr><tr><td>48</td><td>(8) <code>const int *const *</code></td><td>fvtable</td></tr><tr><td>56</td><td>(4) <code>int</code></td><td>freeable</td></tr></tbody></table><h3 id="cff-builder-funcsrec" tabindex="-1"><a class="header-anchor" href="#cff-builder-funcsrec"><span><code>CFF_Builder_FuncsRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>void (__fastcall *)(CFF_Builder_ *, TT_FaceRec_ *, CFF_SizeRec_ *, CFF_GlyphSlotRec_ *, unsigned __int8)</code></td><td>init</td></tr><tr><td>8</td><td>(8) <code>void (__fastcall *)(CFF_Builder_ *)</code></td><td>done</td></tr><tr><td>16</td><td>(8) <code>int (__fastcall *)(CFF_Builder_ *, int)</code></td><td>check_points</td></tr><tr><td>24</td><td>(8) <code>void (__fastcall *)(CFF_Builder_ *, int, int, unsigned __int8)</code></td><td>add_point</td></tr><tr><td>32</td><td>(8) <code>int (__fastcall *)(CFF_Builder_ *, int, int)</code></td><td>add_point1</td></tr><tr><td>40</td><td>(8) <code>int (__fastcall *)(CFF_Builder_ *)</code></td><td>add_contour</td></tr><tr><td>48</td><td>(8) <code>int (__fastcall *)(CFF_Builder_ *, int, int)</code></td><td>start_point</td></tr><tr><td>56</td><td>(8) <code>void (__fastcall *)(CFF_Builder_ *)</code></td><td>close_contour</td></tr></tbody></table><h3 id="cst-val-def-struct" tabindex="-1"><a class="header-anchor" href="#cst-val-def-struct"><span><code>cst_val_def_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const char *</code></td><td>name</td></tr><tr><td>8</td><td>(8) <code>void (__fastcall *)(void *)</code></td><td>delete_function</td></tr></tbody></table><h3 id="cg-texturedescription" tabindex="-1"><a class="header-anchor" href="#cg-texturedescription"><span><code>cg::TextureDescription</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>cg::ImageDescription</code></td><td>baseclass_0</td></tr><tr><td>64</td><td>(4) <code>unsigned int</code></td><td>mMipCount</td></tr></tbody></table><h3 id="cg-imagedescription" tabindex="-1"><a class="header-anchor" href="#cg-imagedescription"><span><code>cg::ImageDescription</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>mWidth</td></tr><tr><td>4</td><td>(4) <code>unsigned int</code></td><td>mHeight</td></tr><tr><td>8</td><td>(4) <code>mce::TextureFormat</code></td><td>mTextureFormat</td></tr><tr><td>12</td><td>(1) <code>cg::ColorSpace</code></td><td>mColorSpace</td></tr><tr><td>13</td><td>(1) <code>bool</code></td><td>mIsCubemap</td></tr><tr><td>16</td><td>(40) <code>KTX::KTXInfo</code></td><td>mKTXInfo</td></tr><tr><td>56</td><td>(4) <code>unsigned int</code></td><td>mArraySize</td></tr></tbody></table><h3 id="cg-texturesetimagedescription" tabindex="-1"><a class="header-anchor" href="#cg-texturesetimagedescription"><span><code>cg::TextureSetImageDescription</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;cg::TextureSetImageDescription::LayerInfoVar&gt;</code></td><td>mLayerInfo</td></tr></tbody></table><h3 id="cst-diphone-db-struct" tabindex="-1"><a class="header-anchor" href="#cst-diphone-db-struct"><span><code>cst_diphone_db_struct</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const char *</code></td><td>name</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>num_entries</td></tr><tr><td>16</td><td>(8) <code>const cst_diphone_entry_struct *</code></td><td>diphones</td></tr><tr><td>24</td><td>(8) <code>const cst_sts_list_struct *</code></td><td>sts</td></tr></tbody></table><h3 id="contenttierincompatiblereason" tabindex="-1"><a class="header-anchor" href="#contenttierincompatiblereason"><span><code>ContentTierIncompatibleReason</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>mError</td></tr></tbody></table><h3 id="c-scope-table" tabindex="-1"><a class="header-anchor" href="#c-scope-table"><span><code>C_SCOPE_TABLE</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) \`\`</td><td>Begin</td></tr><tr><td>4</td><td>(4) \`\`</td><td>End</td></tr><tr><td>8</td><td>(4) \`\`</td><td>Handler</td></tr><tr><td>12</td><td>(4) \`\`</td><td>Target</td></tr></tbody></table><h3 id="core-filestdstreambuf" tabindex="-1"><a class="header-anchor" href="#core-filestdstreambuf"><span><code>Core::FileStdStreamBuf</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(104) <code>std::streambuf</code></td><td>baseclass_0</td></tr><tr><td>104</td><td>(16) <code>Core::File</code></td><td>mFile</td></tr><tr><td>120</td><td>(1) <code>Core::FileOpenMode</code></td><td>mFileOpenMode</td></tr><tr><td>128</td><td>(24) <code>std::vector&lt;char&gt;</code></td><td>mBuffer</td></tr><tr><td>152</td><td>(8) <code>unsigned __int64</code></td><td>mBufferSize</td></tr></tbody></table><h3 id="core-file" tabindex="-1"><a class="header-anchor" href="#core-file"><span><code>Core::File</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_ptr&lt;Core::FileImpl&gt;</code></td><td>muptFile</td></tr><tr><td>8</td><td>(8) <code>std::unique_ptr&lt;Core::FileSystemImpl&gt;</code></td><td>muptTransaction</td></tr></tbody></table><h3 id="cg-typeflagpair" tabindex="-1"><a class="header-anchor" href="#cg-typeflagpair"><span><code>cg::TypeFlagPair</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>cg::TextureSetLayerType</code></td><td>type</td></tr><tr><td>8</td><td>(8) <code>const char *</code></td><td>desc</td></tr></tbody></table><h3 id="camerashakecomponent" tabindex="-1"><a class="header-anchor" href="#camerashakecomponent"><span><code>CameraShakeComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;CameraShakeEvent&gt;</code></td><td>mShakeEvents</td></tr><tr><td>24</td><td>(8) <code>std::unique_ptr&lt;SimplexNoise&gt;</code></td><td>xAxisNoise</td></tr><tr><td>32</td><td>(8) <code>std::unique_ptr&lt;SimplexNoise&gt;</code></td><td>yAxisNoise</td></tr><tr><td>40</td><td>(8) <code>std::unique_ptr&lt;SimplexNoise&gt;</code></td><td>zAxisNoise</td></tr><tr><td>48</td><td>(8) <code>long double</code></td><td>mLastUpdatedTime</td></tr><tr><td>56</td><td>(4) <code>float</code></td><td>mNoiseTime</td></tr><tr><td>60</td><td>(4) <code>float</code></td><td>mShakeIntensity</td></tr><tr><td>64</td><td>(4) <code>float</code></td><td>mDecayRate</td></tr><tr><td>68</td><td>(1) <code>CameraShakeType</code></td><td>mShakeType</td></tr><tr><td>69</td><td>(1) <code>bool</code></td><td>mWasShaking</td></tr></tbody></table><h3 id="complexinventorytransaction" tabindex="-1"><a class="header-anchor" href="#complexinventorytransaction"><span><code>ComplexInventoryTransaction</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ComplexInventoryTransaction_vtbl *</code></td><td>__vftable</td></tr><tr><td>8</td><td>(4) <code>ComplexInventoryTransaction::Type</code></td><td>mType</td></tr><tr><td>16</td><td>(88) <code>InventoryTransaction</code></td><td>mTransaction</td></tr></tbody></table><h3 id="clientblockpipeline-inputs" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-inputs"><span><code>ClientBlockPipeline::Inputs</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;std::any&gt;</code></td><td>mInputs</td></tr></tbody></table><h3 id="core-profile-profilesectiongroup" tabindex="-1"><a class="header-anchor" href="#core-profile-profilesectiongroup"><span><code>Core::Profile::ProfileSectionGroup</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::Profile::GroupToken *</code></td><td>mToken</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>mEntered</td></tr></tbody></table><h3 id="core-profile-profilegroup" tabindex="-1"><a class="header-anchor" href="#core-profile-profilegroup"><span><code>Core::Profile::ProfileGroup</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mName</td></tr><tr><td>32</td><td>(4) <code>unsigned int</code></td><td>mColor</td></tr><tr><td>36</td><td>(4) <code>int</code></td><td>mGroupIndex</td></tr><tr><td>40</td><td>(1) <code>bool</code></td><td>mEnabled</td></tr></tbody></table><h3 id="clientblockpipeline-volumeviewof-brightnesspair-const" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeviewof-brightnesspair-const"><span><code>ClientBlockPipeline::VolumeViewOf&lt;BrightnessPair const &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>Pos</code></td><td>mMin</td></tr><tr><td>12</td><td>(12) <code>Pos</code></td><td>mMax</td></tr><tr><td>24</td><td>(16) <code>buffer_span_mut&lt;BrightnessPair const &gt;</code></td><td>mView</td></tr></tbody></table><h3 id="clientblockpipeline-uvtransform" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-uvtransform"><span><code>ClientBlockPipeline::UvTransform</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Vec2</code></td><td>mStart</td></tr><tr><td>8</td><td>(8) <code>Vec2</code></td><td>mSize</td></tr></tbody></table><h3 id="clientblockpipeline-volumeviewof-clientblockpipeline-blockschematiccell-const" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeviewof-clientblockpipeline-blockschematiccell-const"><span><code>ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockSchematicCell const &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>Pos</code></td><td>mMin</td></tr><tr><td>12</td><td>(12) <code>Pos</code></td><td>mMax</td></tr><tr><td>24</td><td>(16) <code>buffer_span_mut&lt;ClientBlockPipeline::BlockSchematicCell const &gt;</code></td><td>mView</td></tr></tbody></table><h3 id="clientblockpipeline-boxschematicinstance" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-boxschematicinstance"><span><code>ClientBlockPipeline::BoxSchematicInstance</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>std::bitset&lt;6&gt;</code></td><td>mFaceMask</td></tr><tr><td>4</td><td>(64) <code>Matrix</code></td><td>mLocalToGridTransform</td></tr></tbody></table><h3 id="clientblockpipeline-schematicsjoiningstep-staticstepdata" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-schematicsjoiningstep-staticstepdata"><span><code>ClientBlockPipeline::SchematicsJoiningStep::StaticStepData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>gsl::not_null&lt;ClientBlockPipeline::OwnedBlockVolume const *&gt;</code></td><td>mBlockVolume</td></tr><tr><td>8</td><td>(8) <code>gsl::not_null&lt;ClientBlockPipeline::BlockSchematicVolume const *&gt;</code></td><td>mInputSchematicVolume</td></tr><tr><td>16</td><td>(8) <code>gsl::not_null&lt;ClientBlockPipeline::BoxSchematicAttributes const *&gt;</code></td><td>mInputBoxes</td></tr><tr><td>24</td><td>(8) <code>gsl::not_null&lt;ClientBlockPipeline::FaceSchematicAttributes const *&gt;</code></td><td>mInputFaces</td></tr><tr><td>32</td><td>(8) <code>gsl::not_null&lt;ClientBlockPipeline::SolidOpaqueBlockVolume const *&gt;</code></td><td>mSolidOpaqueBlockVolume</td></tr><tr><td>40</td><td>(8) <code>gsl::not_null&lt;ClientBlockPipeline::BlockSchematicVolume *&gt;</code></td><td>mOutputSchematicVolume</td></tr><tr><td>48</td><td>(8) <code>gsl::not_null&lt;ClientBlockPipeline::BoxSchematicAttributes *&gt;</code></td><td>mOutputBoxes</td></tr><tr><td>56</td><td>(8) <code>gsl::not_null&lt;ClientBlockPipeline::FaceSchematicAttributes *&gt;</code></td><td>mOutputFaces</td></tr></tbody></table><h3 id="clientblockpipeline-volumeviewof-clientblockpipeline-blockcell-const" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeviewof-clientblockpipeline-blockcell-const"><span><code>ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockCell const &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>Pos</code></td><td>mMin</td></tr><tr><td>12</td><td>(12) <code>Pos</code></td><td>mMax</td></tr><tr><td>24</td><td>(16) <code>buffer_span_mut&lt;ClientBlockPipeline::BlockCell const &gt;</code></td><td>mView</td></tr></tbody></table><h3 id="clientblockpipeline-schematicsjoiningstep-blockcellstepdata" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-schematicsjoiningstep-blockcellstepdata"><span><code>ClientBlockPipeline::SchematicsJoiningStep::BlockCellStepData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>Pos</code></td><td>mBlockPos</td></tr><tr><td>16</td><td>(8) <code>unsigned __int64</code></td><td>mBlockIndex</td></tr><tr><td>24</td><td>(8) <code>unsigned __int64</code></td><td>mLayer</td></tr><tr><td>32</td><td>(8) <code>gsl::not_null&lt;Block const *&gt;</code></td><td>mInputBlock</td></tr><tr><td>40</td><td>(8) <code>gsl::not_null&lt;ClientBlockPipeline::BlockSchematicInstance const *&gt;</code></td><td>mInputSchematic</td></tr><tr><td>48</td><td>(8) <code>gsl::not_null&lt;ClientBlockPipeline::BlockSchematicInstance *&gt;</code></td><td>mOutputSchematic</td></tr></tbody></table><h3 id="clientblockpipeline-volumeviewof-clientblockpipeline-blockopacitydata-const" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeviewof-clientblockpipeline-blockopacitydata-const"><span><code>ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockOpacityData const &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>Pos</code></td><td>mMin</td></tr><tr><td>12</td><td>(12) <code>Pos</code></td><td>mMax</td></tr><tr><td>24</td><td>(16) <code>buffer_span_mut&lt;ClientBlockPipeline::BlockOpacityData const &gt;</code></td><td>mView</td></tr></tbody></table><h3 id="clientblockpipeline-boxfaceschematic" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-boxfaceschematic"><span><code>ClientBlockPipeline::BoxFaceSchematic</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>mExists</td></tr><tr><td>4</td><td>(16) <code>ClientBlockPipeline::UvTransform</code></td><td>mUvTransform</td></tr><tr><td>20</td><td>(4) <code>int</code></td><td>mMaterialInstanceId</td></tr></tbody></table><h3 id="clientblockpipeline-boxschematic" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-boxschematic"><span><code>ClientBlockPipeline::BoxSchematic</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>Matrix</code></td><td>mLocalToModelTransform</td></tr><tr><td>64</td><td>(144) <code>std::array&lt;ClientBlockPipeline::BoxFaceSchematic,6&gt;</code></td><td>mFaces</td></tr></tbody></table><h3 id="clientblockpipeline-smoothlightbakingstep-sampledlightvalues" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-smoothlightbakingstep-sampledlightvalues"><span><code>ClientBlockPipeline::SmoothLightBakingStep::SampledLightValues</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Vec2</code></td><td>mLightUvs</td></tr><tr><td>8</td><td>(4) <code>float</code></td><td>mAoValue</td></tr></tbody></table><h3 id="clientblockpipeline-volumeviewof-float-const" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeviewof-float-const"><span><code>ClientBlockPipeline::VolumeViewOf&lt;float const &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>Pos</code></td><td>mMin</td></tr><tr><td>12</td><td>(12) <code>Pos</code></td><td>mMax</td></tr><tr><td>24</td><td>(16) <code>buffer_span_mut&lt;float const &gt;</code></td><td>mView</td></tr></tbody></table><h3 id="clientblockpipeline-bakedmaterialmap" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-bakedmaterialmap"><span><code>ClientBlockPipeline::BakedMaterialMap</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;std::shared_ptr&lt;ClientBlockPipeline::Material const &gt;&gt;</code></td><td>mResolvedMaterials</td></tr><tr><td>24</td><td>(1) <code>bool</code></td><td>mIsOpaqueForOccluding</td></tr></tbody></table><h3 id="clientblockpipeline-dimensiondimmingscalars" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-dimensiondimmingscalars"><span><code>ClientBlockPipeline::DimensionDimmingScalars</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::array&lt;float,6&gt;</code></td><td>mScalars</td></tr></tbody></table><h3 id="clientblockpipeline-description-bakedstep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-description-bakedstep"><span><code>ClientBlockPipeline::Description::BakedStep</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned __int64</code></td><td>mStepId</td></tr><tr><td>8</td><td>(24) <code>std::vector&lt;unsigned __int64&gt;</code></td><td>mDependencies</td></tr><tr><td>32</td><td>(24) <code>std::vector&lt;unsigned __int64&gt;</code></td><td>mDependants</td></tr></tbody></table><h3 id="clientblockpipeline-blockcell" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-blockcell"><span><code>ClientBlockPipeline::BlockCell</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::array&lt;Block const *,2&gt;</code></td><td>mBlocks</td></tr></tbody></table><h3 id="contentsource" tabindex="-1"><a class="header-anchor" href="#contentsource"><span><code>ContentSource</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContentSource_vtbl *</code></td><td>__vftable</td></tr><tr><td>8</td><td>(24) <code>std::vector&lt;ContentItem *&gt;</code></td><td>mLoadedItems</td></tr><tr><td>32</td><td>(4) <code>_BYTE[4]</code></td><td>mType</td></tr><tr><td>40</td><td>(8) <code>ContentManager *</code></td><td>mContentManager</td></tr></tbody></table><h3 id="core-result" tabindex="-1"><a class="header-anchor" href="#core-result"><span><code>Core::Result</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::function&lt;char const * __cdecl(std::string *)&gt;</code></td><td>mMessageResolver</td></tr><tr><td>64</td><td>(1) <code>__int8</code></td><td>_bf_40</td></tr></tbody></table><h3 id="cg-imagebuffer" tabindex="-1"><a class="header-anchor" href="#cg-imagebuffer"><span><code>cg::ImageBuffer</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>mce::Blob</code></td><td>mStorage</td></tr><tr><td>24</td><td>(64) <code>cg::ImageDescription</code></td><td>mImageDescription</td></tr></tbody></table><h3 id="core-splitpatht-1024-64" tabindex="-1"><a class="header-anchor" href="#core-splitpatht-1024-64"><span><code>Core::SplitPathT&lt;1024,64&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2048) <code>std::array&lt;Core::Path,64&gt;</code></td><td>mParts</td></tr><tr><td>2048</td><td>(8) <code>unsigned __int64</code></td><td>mNumParts</td></tr></tbody></table><h3 id="camerablendsettings" tabindex="-1"><a class="header-anchor" href="#camerablendsettings"><span><code>CameraBlendSettings</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::function&lt;float __cdecl(float,float,float)&gt;</code></td><td>mEaseFunction</td></tr><tr><td>64</td><td>(4) <code>float</code></td><td>mBlendTime</td></tr><tr><td>68</td><td>(1) <code>bool</code></td><td>mCameraFromAcceptsInput</td></tr><tr><td>69</td><td>(1) <code>bool</code></td><td>mCameraToAcceptsInput</td></tr></tbody></table><h3 id="cameradirector" tabindex="-1"><a class="header-anchor" href="#cameradirector"><span><code>CameraDirector</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(312) <code>Camera</code></td><td>mCamera</td></tr><tr><td>312</td><td>(24) <code>std::vector&lt;std::unique_ptr&lt;ICameraBehavior&gt;&gt;</code></td><td>mBehaviors</td></tr><tr><td>336</td><td>(8) <code>std::unique_ptr&lt;ActivationRule&gt;</code></td><td>mActivationRule</td></tr></tbody></table><h3 id="camera" tabindex="-1"><a class="header-anchor" href="#camera"><span><code>Camera</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(48) <code>HashedString</code></td><td>mId</td></tr><tr><td>48</td><td>(4) <code>int</code></td><td>mPriority</td></tr><tr><td>56</td><td>(72) <code>CameraBlendSettings</code></td><td>mBlendInDefault</td></tr><tr><td>128</td><td>(1) <code>bool</code></td><td>mRenderPlayerModel</td></tr><tr><td>129</td><td>(1) <code>bool</code></td><td>mShouldRenderFirstPersonObjects</td></tr><tr><td>136</td><td>(8) <code>ActorUniqueID</code></td><td>mLookTarget</td></tr><tr><td>144</td><td>(8) <code>ActorUniqueID</code></td><td>mFollowTarget</td></tr><tr><td>152</td><td>(4) <code>float</code></td><td>mAspectRatio</td></tr><tr><td>156</td><td>(4) <code>float</code></td><td>mFieldOfView</td></tr><tr><td>160</td><td>(4) <code>float</code></td><td>mNearPlane</td></tr><tr><td>164</td><td>(4) <code>float</code></td><td>mFarPlane</td></tr><tr><td>168</td><td>(16) <code>glm::tquat&lt;float,0&gt;</code></td><td>mOrientation</td></tr><tr><td>184</td><td>(12) <code>glm::tvec3&lt;float,0&gt;</code></td><td>mPosition</td></tr><tr><td>196</td><td>(12) <code>glm::tvec3&lt;float,0&gt;</code></td><td>mScale</td></tr><tr><td>208</td><td>(64) <code>Matrix</code></td><td>mPostViewTransform</td></tr><tr><td>272</td><td>(1) <code>bool</code></td><td>mFacesPlayerFront</td></tr><tr><td>273</td><td>(1) <code>bool</code></td><td>mPlayerRotateWithCamera</td></tr><tr><td>276</td><td>(8) <code>glm::tvec2&lt;float,0&gt;</code></td><td>mPlayerRotationOffset</td></tr><tr><td>284</td><td>(12) <code>glm::tvec3&lt;float,0&gt;</code></td><td>mLiquidOffset</td></tr><tr><td>296</td><td>(4) <code>float</code></td><td>mRideRotationOffset</td></tr><tr><td>300</td><td>(4) <code>float</code></td><td>mPlayerSneakOffset</td></tr><tr><td>304</td><td>(4) <code>float</code></td><td>mPlayerGlideOffset</td></tr></tbody></table><h3 id="commandversion" tabindex="-1"><a class="header-anchor" href="#commandversion"><span><code>CommandVersion</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mFrom</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mTo</td></tr></tbody></table><h3 id="contextmessagelogger" tabindex="-1"><a class="header-anchor" href="#contextmessagelogger"><span><code>ContextMessageLogger</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContextMessageLogger_vtbl *</code></td><td>__vftable</td></tr><tr><td>8</td><td>(24) <code>std::vector&lt;ContextMessage&gt;</code></td><td>mMessageBufferArray</td></tr><tr><td>32</td><td>(5) <code>bool[5]</code></td><td>mReceivedMessages</td></tr><tr><td>37</td><td>(14) <code>ContextMessageLoggerOptions</code></td><td>mOptions</td></tr></tbody></table><h3 id="contextmessageloggeroptions" tabindex="-1"><a class="header-anchor" href="#contextmessageloggeroptions"><span><code>ContextMessageLoggerOptions</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>bool[4]</code></td><td>mStoreMessages</td></tr><tr><td>4</td><td>(4) <code>bool[4]</code></td><td>mAssertIfMessageTypeWasReceived</td></tr><tr><td>8</td><td>(4) <code>bool[4]</code></td><td>mAssertInDestructorIfMessageTypeWasReceived</td></tr><tr><td>12</td><td>(1) <code>bool</code></td><td>mAllowMessagesToPostToParentMessageLoggers</td></tr><tr><td>13</td><td>(1) <code>bool</code></td><td>mOutputAllMessagesOnDestruction</td></tr></tbody></table><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span><code>Config</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mWidth</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mHeight</td></tr><tr><td>8</td><td>(4) <code>float</code></td><td>mGuiScale</td></tr><tr><td>12</td><td>(4) <code>float</code></td><td>mInvGuiScale</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>mGuiWidth</td></tr><tr><td>20</td><td>(4) <code>int</code></td><td>mGuiHeight</td></tr><tr><td>24</td><td>(8) <code>PixelCalc</code></td><td>mDpadScale</td></tr><tr><td>32</td><td>(8) <code>IMinecraftGame *</code></td><td>mMinecraft</td></tr><tr><td>40</td><td>(16) <code>std::shared_ptr&lt;Options&gt;</code></td><td>mOptions</td></tr><tr><td>56</td><td>(4) <code>InputMode</code></td><td>mCurrentInputMode</td></tr></tbody></table><h3 id="crashdumpgameplaydata" tabindex="-1"><a class="header-anchor" href="#crashdumpgameplaydata"><span><code>CrashDumpGameplayData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>_BYTE[2]</code></td><td>mFunc</td></tr><tr><td>2</td><td>(2) <code>_BYTE[2]</code></td><td>mTag</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mClientId</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mBuildActionIntention</td></tr></tbody></table><h3 id="clientinstance-leavegameonunrecoverableerror-l11-lambda-9e193ddaee367b7b7b07833f6136df6c" tabindex="-1"><a class="header-anchor" href="#clientinstance-leavegameonunrecoverableerror-l11-lambda-9e193ddaee367b7b7b07833f6136df6c"><span><code>ClientInstance::_leaveGameOnUnrecoverableError::__l11::&lt;lambda_9e193ddaee367b7b7b07833f6136df6c&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;ClientInstance&gt;</code></td><td>weakThis</td></tr><tr><td>16</td><td>(32) <code>const std::string</code></td><td>titleMessage</td></tr><tr><td>48</td><td>(32) <code>const std::string</code></td><td>displayMessage</td></tr></tbody></table><h3 id="clientframeupdatecontext" tabindex="-1"><a class="header-anchor" href="#clientframeupdatecontext"><span><code>ClientFrameUpdateContext</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>FrameUpdateContext</code></td><td>baseclass_0</td></tr><tr><td>32</td><td>(4) <code>float</code></td><td>a</td></tr><tr><td>36</td><td>(1) <code>bool</code></td><td>stereoRendering</td></tr></tbody></table><h3 id="clientinstance-update-l42-lambda-2eadb951cae52f74e068bad3dd7fa7f4" tabindex="-1"><a class="header-anchor" href="#clientinstance-update-l42-lambda-2eadb951cae52f74e068bad3dd7fa7f4"><span><code>ClientInstance::update::__l42::&lt;lambda_2eadb951cae52f74e068bad3dd7fa7f4&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;ClientInstance&gt;</code></td><td>weakPtr</td></tr></tbody></table><h3 id="clientinstance-setupclientgame-l8-lambda-f8252ab8124c045f24524d1760b419d8" tabindex="-1"><a class="header-anchor" href="#clientinstance-setupclientgame-l8-lambda-f8252ab8124c045f24524d1760b419d8"><span><code>ClientInstance::setupClientGame::__l8::&lt;lambda_f8252ab8124c045f24524d1760b419d8&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;ClientInstance&gt;</code></td><td>weakThis</td></tr><tr><td>16</td><td>(64) <code>std::function&lt;void __cdecl(enum ClientGameSetupResult)&gt;</code></td><td>callback</td></tr><tr><td>80</td><td>(1) <code>bool</code></td><td>joiningLocalServer</td></tr></tbody></table><h3 id="clientinstance-startexternalnetworkworld-l2-lambda-2f4e89c11809877f171d784f43a2bb0a" tabindex="-1"><a class="header-anchor" href="#clientinstance-startexternalnetworkworld-l2-lambda-2f4e89c11809877f171d784f43a2bb0a"><span><code>ClientInstance::_startExternalNetworkWorld::__l2::&lt;lambda_2f4e89c11809877f171d784f43a2bb0a&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ClientInstance *const</code></td><td>__this</td></tr><tr><td>8</td><td>(256) <code>Social::GameConnectionInfo</code></td><td>connection</td></tr><tr><td>264</td><td>(32) <code>const std::string</code></td><td>serverName</td></tr></tbody></table><h3 id="clientinstance-startexternalnetworkworld-l2-lambda-2f4e89c11809877f171d784f43a2bb0a-l25-lambda-89f9ae71cef463ef90f3d3d6d3c5a294" tabindex="-1"><a class="header-anchor" href="#clientinstance-startexternalnetworkworld-l2-lambda-2f4e89c11809877f171d784f43a2bb0a-l25-lambda-89f9ae71cef463ef90f3d3d6d3c5a294"><span><code>ClientInstance::_startExternalNetworkWorld::__l2::&lt;lambda_2f4e89c11809877f171d784f43a2bb0a&gt;::()::__l25::&lt;lambda_89f9ae71cef463ef90f3d3d6d3c5a294&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ClientInstance *const</code></td><td>__this</td></tr><tr><td>8</td><td>(256) <code>Social::GameConnectionInfo</code></td><td>connectionInfo</td></tr></tbody></table><h3 id="constcompositescenestackview" tabindex="-1"><a class="header-anchor" href="#constcompositescenestackview"><span><code>ConstCompositeSceneStackView</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const SceneStack *</code></td><td>mMainStack</td></tr><tr><td>8</td><td>(8) <code>const SceneStack *</code></td><td>mClientInstanceStack</td></tr></tbody></table><h3 id="clientinstance-isshowingscreen-l2-lambda-851bb6c3689e76182cb941d3bd1036a4" tabindex="-1"><a class="header-anchor" href="#clientinstance-isshowingscreen-l2-lambda-851bb6c3689e76182cb941d3bd1036a4"><span><code>ClientInstance::_isShowingScreen::__l2::&lt;lambda_851bb6c3689e76182cb941d3bd1036a4&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>bool *</code></td><td>showingScreen</td></tr><tr><td>8</td><td>(32) <code>const std::string</code></td><td>screenName</td></tr></tbody></table><h3 id="clientinstance-navigatetocoinpurchasescreen-l2-lambda-e1cf1260acbd6347c10ba2122d74ca7a" tabindex="-1"><a class="header-anchor" href="#clientinstance-navigatetocoinpurchasescreen-l2-lambda-e1cf1260acbd6347c10ba2122d74ca7a"><span><code>ClientInstance::navigateToCoinPurchaseScreen::__l2::&lt;lambda_e1cf1260acbd6347c10ba2122d74ca7a&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;ClientInstance&gt;</code></td><td>weakPtr</td></tr><tr><td>16</td><td>(16) <code>std::shared_ptr&lt;OfferRepository::ProductQueryAttemptResult&gt;</code></td><td>queryAttemptFinished</td></tr><tr><td>32</td><td>(16) <code>std::shared_ptr&lt;AsyncTracker&gt;</code></td><td>tracker</td></tr><tr><td>48</td><td>(4) <code>int</code></td><td>neededCoins</td></tr><tr><td>56</td><td>(64) <code>std::function&lt;void __cdecl(bool)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="clientinstance-navigatetostoreseeallbycreatorscreen-l2-lambda-15d8531333f726aeede88a06a28b4fd0" tabindex="-1"><a class="header-anchor" href="#clientinstance-navigatetostoreseeallbycreatorscreen-l2-lambda-15d8531333f726aeede88a06a28b4fd0"><span><code>ClientInstance::navigateToStoreSeeAllByCreatorScreen::__l2::&lt;lambda_15d8531333f726aeede88a06a28b4fd0&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;ClientInstance&gt;</code></td><td>weakThis</td></tr><tr><td>16</td><td>(32) <code>const std::string</code></td><td>creatorId</td></tr><tr><td>48</td><td>(1) <code>const bool</code></td><td>calledFromHyperlink</td></tr></tbody></table><h3 id="clientinstance-clientdestroyblockstate" tabindex="-1"><a class="header-anchor" href="#clientinstance-clientdestroyblockstate"><span><code>ClientInstance::ClientDestroyBlockState</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Player *</code></td><td>mPlayer</td></tr><tr><td>8</td><td>(8) <code>GameMode *</code></td><td>mGameMode</td></tr><tr><td>16</td><td>(1) <code>bool</code></td><td>mDestroyButtonDown</td></tr><tr><td>24</td><td>(8) <code>const HitResult *</code></td><td>mHit</td></tr><tr><td>32</td><td>(64) <code>std::function&lt;void __cdecl(void)&gt;</code></td><td>mClearInProgressBAI</td></tr><tr><td>96</td><td>(64) <code>std::function&lt;void __cdecl(void)&gt;</code></td><td>mStopDestroying</td></tr><tr><td>160</td><td>(64) <code>std::function&lt;void __cdecl(void)&gt;</code></td><td>mVibrate</td></tr></tbody></table><h3 id="clientskin" tabindex="-1"><a class="header-anchor" href="#clientskin"><span><code>ClientSkin</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>mInitialized</td></tr><tr><td>1</td><td>(1) <code>bool</code></td><td>mIsLoadingGeometry</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mReferenceCount</td></tr><tr><td>8</td><td>(24) <code>OwnerPtrT&lt;EntityRefTraits&gt;</code></td><td>mEntity</td></tr><tr><td>32</td><td>(776) <code>ClientSkinInfoData</code></td><td>mSkinInfoData</td></tr><tr><td>808</td><td>(8) <code>std::unique_ptr&lt;GeometryGroup&gt;</code></td><td>mClientSkinGeometryGroup</td></tr></tbody></table><h3 id="clientskininfodata" tabindex="-1"><a class="header-anchor" href="#clientskininfodata"><span><code>ClientSkinInfoData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(688) <code>SkinInfoData</code></td><td>baseclass_0</td></tr><tr><td>688</td><td>(1) <code>unsigned __int8</code></td><td>mSubClientId</td></tr><tr><td>696</td><td>(16) <code>BedrockTexture</code></td><td>mBloomTexture</td></tr><tr><td>712</td><td>(16) <code>BedrockTexture</code></td><td>mSkinTexture</td></tr><tr><td>728</td><td>(24) <code>std::vector&lt;BedrockTexture&gt;</code></td><td>mSkinAnimatedTextures</td></tr><tr><td>752</td><td>(16) <code>BedrockTexture</code></td><td>mCapeTexture</td></tr><tr><td>768</td><td>(1) <code>bool</code></td><td>mValid</td></tr></tbody></table><h3 id="clientparticletrackingcomponent" tabindex="-1"><a class="header-anchor" href="#clientparticletrackingcomponent"><span><code>ClientParticleTrackingComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::unordered_map&lt;HashedString,std::vector&lt;unsigned int&gt;&gt;</code></td><td>mParticleEmitterLists</td></tr></tbody></table><h3 id="cataloginfo" tabindex="-1"><a class="header-anchor" href="#cataloginfo"><span><code>CatalogInfo</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;DateManager&gt;</code></td><td>mDateManager</td></tr><tr><td>16</td><td>(20) <code>RetryDelay</code></td><td>mSaveDelay</td></tr><tr><td>36</td><td>(4) <code>int</code></td><td>mPropertyChangeVersion</td></tr></tbody></table><h3 id="callbacktoken" tabindex="-1"><a class="header-anchor" href="#callbacktoken"><span><code>CallbackToken</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;CallbackTokenCancelState&gt;</code></td><td>mCancelState</td></tr></tbody></table><h3 id="cg-math-rect-float" tabindex="-1"><a class="header-anchor" href="#cg-math-rect-float"><span><code>cg::math::Rect&lt;float&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>float</code></td><td>mX</td></tr><tr><td>4</td><td>(4) <code>float</code></td><td>mY</td></tr><tr><td>8</td><td>(4) <code>float</code></td><td>mWidth</td></tr><tr><td>12</td><td>(4) <code>float</code></td><td>mHeight</td></tr></tbody></table><h3 id="crashdumpkeyvaluedata" tabindex="-1"><a class="header-anchor" href="#crashdumpkeyvaluedata"><span><code>CrashDumpKeyValueData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>_BYTE[2]</code></td><td>mTag0</td></tr><tr><td>2</td><td>(2) <code>_BYTE[2]</code></td><td>mTag1</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mValue0</td></tr><tr><td>8</td><td>(8) <code>unsigned __int64</code></td><td>mValue1</td></tr></tbody></table><h3 id="contentlog-contentlogendpointdata" tabindex="-1"><a class="header-anchor" href="#contentlog-contentlogendpointdata"><span><code>ContentLog::ContentLogEndPointData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>gsl::not_null&lt;ContentLogEndPoint *&gt;</code></td><td>mContentLogEndPoint</td></tr></tbody></table><h3 id="controllerdirectioneventdata" tabindex="-1"><a class="header-anchor" href="#controllerdirectioneventdata"><span><code>ControllerDirectionEventData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>DirectionId</code></td><td>directionId</td></tr><tr><td>4</td><td>(8) <code>float[2]</code></td><td>deltaPosition</td></tr></tbody></table><h3 id="clippedcollectioneventdata" tabindex="-1"><a class="header-anchor" href="#clippedcollectioneventdata"><span><code>ClippedCollectionEventData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>collectionNameHash</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>startIndex</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>endIndex</td></tr><tr><td>16</td><td>(8) <code>UIPropertyBag *</code></td><td>propertyBag</td></tr></tbody></table><h3 id="clipstatechangeeventdata" tabindex="-1"><a class="header-anchor" href="#clipstatechangeeventdata"><span><code>ClipStateChangeEventData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>id</td></tr><tr><td>8</td><td>(8) <code>UIPropertyBag *</code></td><td>propertyBag</td></tr><tr><td>16</td><td>(1) <code>bool</code></td><td>isClipped</td></tr></tbody></table><h3 id="customrenderereventdata" tabindex="-1"><a class="header-anchor" href="#customrenderereventdata"><span><code>CustomRendererEventData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>id</td></tr></tbody></table><h3 id="collisiongrid-15" tabindex="-1"><a class="header-anchor" href="#collisiongrid-15"><span><code>CollisionGrid&lt;15&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>float</code></td><td>mWidth</td></tr><tr><td>4</td><td>(4) <code>float</code></td><td>mHeight</td></tr><tr><td>8</td><td>(32) <code>std::bitset&lt;225&gt;</code></td><td>mGrid</td></tr></tbody></table><h3 id="clientblockpipeline-tessellatorcontext" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-tessellatorcontext"><span><code>ClientBlockPipeline::TessellatorContext</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;ClientBlockPipeline::SchematicsRepository&gt;</code></td><td>mSchematicsRepo</td></tr></tbody></table><h3 id="commandlisttaskcontext" tabindex="-1"><a class="header-anchor" href="#commandlisttaskcontext"><span><code>CommandListTaskContext</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>mce::CommandList</code></td><td>mCommandList</td></tr><tr><td>64</td><td>(8) <code>mce::RingBuffer *</code></td><td>mCbUploadRingBuffer</td></tr><tr><td>72</td><td>(8) <code>mce::PerFrameConstants *</code></td><td>mThreadedPerFrameConstants</td></tr><tr><td>80</td><td>(8) <code>mce::ShaderConstants *</code></td><td>mThreadedShaderConstants</td></tr><tr><td>88</td><td>(8) <code>mce::RenderChunkConstants *</code></td><td>mRenderChunkConstantBuffer</td></tr><tr><td>96</td><td>(8) <code>mce::WorldConstants *</code></td><td>mThreadedWorldConstantBuffer</td></tr><tr><td>104</td><td>(8) \`\`</td><td>gap68</td></tr></tbody></table><h3 id="chunklayerrenderobject" tabindex="-1"><a class="header-anchor" href="#chunklayerrenderobject"><span><code>ChunkLayerRenderObject</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned __int64</code></td><td>mChunkIdx</td></tr><tr><td>8</td><td>(8) <code>const mce::MaterialPtr *</code></td><td>mMaterial</td></tr><tr><td>16</td><td>(4) <code>unsigned int</code></td><td>mIndicesStart</td></tr><tr><td>20</td><td>(4) <code>unsigned int</code></td><td>mIndicesCount</td></tr><tr><td>24</td><td>(4) <code>unsigned int</code></td><td>mUnsortedIndicesStart</td></tr><tr><td>28</td><td>(4) <code>unsigned int</code></td><td>mUnsortedIndicesCount</td></tr><tr><td>32</td><td>(1) <code>bool</code></td><td>mShouldFallBackToUnsorted</td></tr></tbody></table><h3 id="contentlog-contentlogscope" tabindex="-1"><a class="header-anchor" href="#contentlog-contentlogscope"><span><code>ContentLog::ContentLogScope</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>mPopScope</td></tr><tr><td>8</td><td>(16) <code>std::weak_ptr&lt;ContentLog::ScopeHandler&gt;</code></td><td>mScopeHandler</td></tr></tbody></table><h3 id="clientinstancescreenmodel" tabindex="-1"><a class="header-anchor" href="#clientinstancescreenmodel"><span><code>ClientInstanceScreenModel</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(216) <code>MinecraftScreenModel</code></td><td>baseclass_0</td></tr><tr><td>216</td><td>(64) <code>std::unordered_map&lt;ActorUniqueID,BossInfo&gt;</code></td><td>mBossInfo</td></tr></tbody></table><h3 id="containerscreencontroller-registerstatemachine-l2-lambda-22ba86bea9db98d4be3d24a41addfd59" tabindex="-1"><a class="header-anchor" href="#containerscreencontroller-registerstatemachine-l2-lambda-22ba86bea9db98d4be3d24a41addfd59"><span><code>ContainerScreenController::_registerStateMachine::__l2::&lt;lambda_22ba86bea9db98d4be3d24a41addfd59&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContainerScreenController *const</code></td><td>__this</td></tr></tbody></table><h3 id="controlssettingsscreencontroller-registercontrollercallbacks-l2-lambda-7847dc19740a716fdd766d12d5c86f1d-l2-lambda-e1ed6117cdc1faf979ad9c55cf15bfe3" tabindex="-1"><a class="header-anchor" href="#controlssettingsscreencontroller-registercontrollercallbacks-l2-lambda-7847dc19740a716fdd766d12d5c86f1d-l2-lambda-e1ed6117cdc1faf979ad9c55cf15bfe3"><span><code>ControlsSettingsScreenController::_registerControllerCallbacks::__l2::&lt;lambda_7847dc19740a716fdd766d12d5c86f1d&gt;::()::__l2::&lt;lambda_e1ed6117cdc1faf979ad9c55cf15bfe3&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Option *</code></td><td>option</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;void __cdecl(void)&gt;</code></td><td>onToggle</td></tr></tbody></table><h3 id="controlssettingsscreencontroller-keyboardlayoutinfo" tabindex="-1"><a class="header-anchor" href="#controlssettingsscreencontroller-keyboardlayoutinfo"><span><code>ControlsSettingsScreenController::KeyboardLayoutInfo</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>const KeyboardType</code></td><td>mType</td></tr><tr><td>8</td><td>(8) <code>KeyboardRemappingLayout *</code></td><td>mLayout</td></tr><tr><td>16</td><td>(24) <code>std::vector&lt;ControlsSettingsScreenController::BindingInfo&gt;</code></td><td>mBindings</td></tr><tr><td>40</td><td>(32) <code>const std::string</code></td><td>mGridDimensionName</td></tr><tr><td>72</td><td>(32) <code>const std::string</code></td><td>mCollectionName</td></tr></tbody></table><h3 id="coursescreencontroller-setleavegameoverride-l2-lambda-b1807e78fd2d1443f9792a801376796c" tabindex="-1"><a class="header-anchor" href="#coursescreencontroller-setleavegameoverride-l2-lambda-b1807e78fd2d1443f9792a801376796c"><span><code>CourseScreenController::_setLeaveGameOverride::__l2::&lt;lambda_b1807e78fd2d1443f9792a801376796c&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;TutorialCollection&gt;</code></td><td>tutorialCollection</td></tr><tr><td>16</td><td>(16) <code>std::shared_ptr&lt;LibraryCollection&gt;</code></td><td>libraryCollection</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>courseTitle</td></tr><tr><td>64</td><td>(32) <code>std::string</code></td><td>courseId</td></tr><tr><td>96</td><td>(4) <code>int</code></td><td>activeItemIndex</td></tr></tbody></table><h3 id="craftingscreencontrollerproxycallbacks" tabindex="-1"><a class="header-anchor" href="#craftingscreencontrollerproxycallbacks"><span><code>CraftingScreenControllerProxyCallbacks</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::function&lt;ContainerController * __cdecl(std::string const &amp;)&gt;</code></td><td>mGetContainerController</td></tr><tr><td>64</td><td>(64) <code>std::function&lt;void __cdecl(std::string const &amp;,int,enum ItemCraftType)&gt;</code></td><td>mRecipeAutoCraft</td></tr><tr><td>128</td><td>(64) <code>std::function&lt;void __cdecl(std::string const &amp;,int)&gt;</code></td><td>mHandleRecipeSelect</td></tr><tr><td>192</td><td>(64) <code>std::function&lt;void __cdecl(Recipe const *)&gt;</code></td><td>mHandleRecipePlaceInputs</td></tr><tr><td>256</td><td>(64) <code>std::function&lt;void __cdecl(std::string const &amp;,int)&gt;</code></td><td>mHandleAutoPlace</td></tr><tr><td>320</td><td>(64) <code>std::function&lt;void __cdecl(void)&gt;</code></td><td>mLeaveScreen</td></tr></tbody></table><h3 id="craftablecountingdata" tabindex="-1"><a class="header-anchor" href="#craftablecountingdata"><span><code>CraftableCountingData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mTotalResultItems</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mAmountOfTimesRecipeIsCrafted</td></tr></tbody></table><h3 id="craftingscreencontroller-registerstatemachine-l2-lambda-be0bf6bd90e4b29638d1008293b3501b" tabindex="-1"><a class="header-anchor" href="#craftingscreencontroller-registerstatemachine-l2-lambda-be0bf6bd90e4b29638d1008293b3501b"><span><code>CraftingScreenController::_registerStateMachine::__l2::&lt;lambda_be0bf6bd90e4b29638d1008293b3501b&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>clearHotbarButtonOrDropId</td></tr></tbody></table><h3 id="craftingscreencontroller-recipeautocraft-l2-lambda-6aa2f103e2c2f5d7d0fafc45ee252653" tabindex="-1"><a class="header-anchor" href="#craftingscreencontroller-recipeautocraft-l2-lambda-6aa2f103e2c2f5d7d0fafc45ee252653"><span><code>CraftingScreenController::_recipeAutoCraft::__l2::&lt;lambda_6aa2f103e2c2f5d7d0fafc45ee252653&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>CraftingScreenController *const</code></td><td>__this</td></tr><tr><td>8</td><td>(32) <code>const std::string</code></td><td>collectionName</td></tr><tr><td>40</td><td>(4) <code>int</code></td><td>collectionIndex</td></tr></tbody></table><h3 id="craftingtablecomponent" tabindex="-1"><a class="header-anchor" href="#craftingtablecomponent"><span><code>CraftingTableComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mGridSize</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>mCustomDescription</td></tr><tr><td>40</td><td>(24) <code>std::vector&lt;std::string&gt;</code></td><td>mCraftingTags</td></tr></tbody></table><h3 id="customtemplatesscreencontroller-registerevents-l2-lambda-faa911ab3abefbbffed8c9d57cca4fc8-l8-lambda-855dc3b3dd5168adfa3023a3c097783b" tabindex="-1"><a class="header-anchor" href="#customtemplatesscreencontroller-registerevents-l2-lambda-faa911ab3abefbbffed8c9d57cca4fc8-l8-lambda-855dc3b3dd5168adfa3023a3c097783b"><span><code>CustomTemplatesScreenController::_registerEvents::__l2::&lt;lambda_faa911ab3abefbbffed8c9d57cca4fc8&gt;::()::__l8::&lt;lambda_855dc3b3dd5168adfa3023a3c097783b&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;CustomTemplatesScreenController&gt;</code></td><td>weakThis</td></tr><tr><td>16</td><td>(264) <code>const WorldTemplateInfo</code></td><td>level</td></tr></tbody></table><h3 id="customtemplatesscreencontroller-handleworldtemplateclicked-l2-lambda-0fd1354ad3496433dfc1a1fe4fe2b8a7" tabindex="-1"><a class="header-anchor" href="#customtemplatesscreencontroller-handleworldtemplateclicked-l2-lambda-0fd1354ad3496433dfc1a1fe4fe2b8a7"><span><code>CustomTemplatesScreenController::_handleWorldTemplateClicked::__l2::&lt;lambda_0fd1354ad3496433dfc1a1fe4fe2b8a7&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>CustomTemplatesScreenController *const</code></td><td>__this</td></tr><tr><td>8</td><td>(136) <code>PackIdVersion</code></td><td>packId</td></tr></tbody></table><h3 id="customtemplatesscreencontroller-createworldtemplate-l5-lambda-bc20e33a775adc61e26b6412226bb3d7" tabindex="-1"><a class="header-anchor" href="#customtemplatesscreencontroller-createworldtemplate-l5-lambda-bc20e33a775adc61e26b6412226bb3d7"><span><code>CustomTemplatesScreenController::_createWorldTemplate::__l5::&lt;lambda_bc20e33a775adc61e26b6412226bb3d7&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>CustomTemplatesScreenController *const</code></td><td>__this</td></tr><tr><td>8</td><td>(8) <code>const WorldTemplateInfo *</code></td><td>level</td></tr><tr><td>16</td><td>(64) <code>std::function&lt;void __cdecl(void)&gt;</code></td><td>failureCallback</td></tr></tbody></table><h3 id="customtemplatesscreencontroller-createworldtemplate-l5-lambda-bc20e33a775adc61e26b6412226bb3d7-l5-lambda-1e628f6eed268bb442e37bdf2a00b8a2" tabindex="-1"><a class="header-anchor" href="#customtemplatesscreencontroller-createworldtemplate-l5-lambda-bc20e33a775adc61e26b6412226bb3d7-l5-lambda-1e628f6eed268bb442e37bdf2a00b8a2"><span><code>CustomTemplatesScreenController::_createWorldTemplate::__l5::&lt;lambda_bc20e33a775adc61e26b6412226bb3d7&gt;::()::__l5::&lt;lambda_1e628f6eed268bb442e37bdf2a00b8a2&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::function&lt;void __cdecl(void)&gt;</code></td><td>failureCallback</td></tr></tbody></table><h3 id="clientinstancescreencontroller" tabindex="-1"><a class="header-anchor" href="#clientinstancescreencontroller"><span><code>ClientInstanceScreenController</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2648) <code>MinecraftScreenController</code></td><td>baseclass_0</td></tr><tr><td>2648</td><td>(16) <code>std::shared_ptr&lt;ClientInstanceScreenModel&gt;</code></td><td>mClientInstanceScreenModel</td></tr><tr><td>2664</td><td>(8) <code>std::unique_ptr&lt;PlatformMultiplayerRestrictions&gt;</code></td><td>mPlatformMultiplayerRestrictions</td></tr></tbody></table><h3 id="contenttierinfo" tabindex="-1"><a class="header-anchor" href="#contenttierinfo"><span><code>ContentTierInfo</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mMemoryTier</td></tr><tr><td>4</td><td>(1) <code>bool</code></td><td>mIsRayTracingCapable</td></tr></tbody></table><h3 id="clubs-clubmodel" tabindex="-1"><a class="header-anchor" href="#clubs-clubmodel"><span><code>Clubs::ClubModel</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mClubID</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>mClubDescription</td></tr><tr><td>64</td><td>(32) <code>std::string</code></td><td>mClubIcon</td></tr><tr><td>96</td><td>(32) <code>std::string</code></td><td>mClubName</td></tr></tbody></table><h3 id="controlscreenaction" tabindex="-1"><a class="header-anchor" href="#controlscreenaction"><span><code>ControlScreenAction</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ControlScreenAction_vtbl *</code></td><td>__vftable</td></tr></tbody></table><h3 id="commandsyntaxinformation" tabindex="-1"><a class="header-anchor" href="#commandsyntaxinformation"><span><code>CommandSyntaxInformation</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>isValid</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>description</td></tr><tr><td>40</td><td>(24) <code>std::vector&lt;OverloadSyntaxInformation&gt;</code></td><td>possibilities</td></tr></tbody></table><h3 id="core-ziputils-zipfilerestrictions" tabindex="-1"><a class="header-anchor" href="#core-ziputils-zipfilerestrictions"><span><code>Core::ZipUtils::ZipFileRestrictions</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::set&lt;std::string&gt;</code></td><td>mForbiddenExtensions</td></tr><tr><td>16</td><td>(16) <code>std::set&lt;std::string&gt;</code></td><td>mRestrictedExtensions</td></tr><tr><td>32</td><td>(16) <code>std::set&lt;std::string&gt;</code></td><td>mForbiddenFilenames</td></tr></tbody></table><h3 id="core-ziputils-zipprogress" tabindex="-1"><a class="header-anchor" href="#core-ziputils-zipprogress"><span><code>Core::ZipUtils::ZipProgress</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>std::atomic&lt;unsigned int&gt;</code></td><td>mFilesDone</td></tr><tr><td>4</td><td>(4) <code>std::atomic&lt;unsigned int&gt;</code></td><td>mFilesSkipped</td></tr><tr><td>8</td><td>(4) <code>std::atomic&lt;unsigned int&gt;</code></td><td>mTotalFiles</td></tr></tbody></table><h3 id="commandblockcomponent" tabindex="-1"><a class="header-anchor" href="#commandblockcomponent"><span><code>CommandBlockComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(152) <code>BaseCommandBlock</code></td><td>mBaseCommandBlock</td></tr><tr><td>152</td><td>(4) <code>int</code></td><td>mCurrentTickCount</td></tr><tr><td>156</td><td>(1) <code>bool</code></td><td>mTicking</td></tr></tbody></table><h3 id="commonsearchresults" tabindex="-1"><a class="header-anchor" href="#commonsearchresults"><span><code>CommonSearchResults</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mTotalCount</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mFilteredCount</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mUnfilteredDocumentCount</td></tr></tbody></table><h3 id="clientinstancescreenmodel-navigatetoleavelevelscreen-l5-lambda-ef00954ff1e757a0ee5bf3eac0e1e9ef-l5-lambda-f55e9c9a0c9d5b1a28a0ec013240d974" tabindex="-1"><a class="header-anchor" href="#clientinstancescreenmodel-navigatetoleavelevelscreen-l5-lambda-ef00954ff1e757a0ee5bf3eac0e1e9ef-l5-lambda-f55e9c9a0c9d5b1a28a0ec013240d974"><span><code>ClientInstanceScreenModel::navigateToLeaveLevelScreen::__l5::&lt;lambda_ef00954ff1e757a0ee5bf3eac0e1e9ef&gt;::()::__l5::&lt;lambda_f55e9c9a0c9d5b1a28a0ec013240d974&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;ClientInstanceScreenModel&gt;</code></td><td>weakThis</td></tr><tr><td>16</td><td>(1) <code>bool</code></td><td>switchScreen</td></tr><tr><td>24</td><td>(384) <code>LevelSummary</code></td><td>summary</td></tr></tbody></table><h3 id="clientinstancescreenmodel-initiateglbfilesave-l5-lambda-18e2ef64fe5ed0094ca318e07172f502" tabindex="-1"><a class="header-anchor" href="#clientinstancescreenmodel-initiateglbfilesave-l5-lambda-18e2ef64fe5ed0094ca318e07172f502"><span><code>ClientInstanceScreenModel::initiateGLBFileSave::__l5::&lt;lambda_18e2ef64fe5ed0094ca318e07172f502&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>originPath</td></tr><tr><td>32</td><td>(64) <code>std::function&lt;void __cdecl(bool)&gt;</code></td><td>onComplete</td></tr></tbody></table><h3 id="crypto-hash-hash" tabindex="-1"><a class="header-anchor" href="#crypto-hash-hash"><span><code>Crypto::Hash::Hash</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Crypto::Hash::IHash</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(8) <code>std::unique_ptr&lt;Crypto::Hash::IHash&gt;</code></td><td>mHash</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>mUuidVersion</td></tr></tbody></table><h3 id="crypto-hash-ihash" tabindex="-1"><a class="header-anchor" href="#crypto-hash-ihash"><span><code>Crypto::Hash::IHash</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Crypto::Hash::IHash_vtbl *</code></td><td>__vftable</td></tr></tbody></table><h3 id="clipareas" tabindex="-1"><a class="header-anchor" href="#clipareas"><span><code>ClipAreas</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::set&lt;RectangleArea&gt;</code></td><td>mAreas</td></tr></tbody></table><h3 id="clippedcontrolmetadata" tabindex="-1"><a class="header-anchor" href="#clippedcontrolmetadata"><span><code>ClippedControlMetadata</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;RenderControlMetadata&gt;</code></td><td>controlsToUpdate</td></tr><tr><td>24</td><td>(24) <code>std::vector&lt;std::shared_ptr&lt;UIControl&gt;&gt;</code></td><td>clippedGrids</td></tr><tr><td>48</td><td>(24) <code>std::vector&lt;ScreenEvent&gt;</code></td><td>clipStateChangeEvents</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l5-lambda-f4ef36c9c2241edd05e2049a4cc37d3c" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l5-lambda-f4ef36c9c2241edd05e2049a4cc37d3c"><span><code>ClientBindingFactory::getAreaBinding::__l5::&lt;lambda_f4ef36c9c2241edd05e2049a4cc37d3c&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l9-lambda-86bc8e749623499401e3fdbcc7ae7f39" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l9-lambda-86bc8e749623499401e3fdbcc7ae7f39"><span><code>ClientBindingFactory::getAreaBinding::__l9::&lt;lambda_86bc8e749623499401e3fdbcc7ae7f39&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l13-lambda-dcb08eb3e54defb9e64370fd721b66b7" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l13-lambda-dcb08eb3e54defb9e64370fd721b66b7"><span><code>ClientBindingFactory::getAreaBinding::__l13::&lt;lambda_dcb08eb3e54defb9e64370fd721b66b7&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l17-lambda-6b703eda3e6b7618b784bcc537ad3c62" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l17-lambda-6b703eda3e6b7618b784bcc537ad3c62"><span><code>ClientBindingFactory::getAreaBinding::__l17::&lt;lambda_6b703eda3e6b7618b784bcc537ad3c62&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l21-lambda-363f1cc72b078a154ed0ead09b4d024d" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l21-lambda-363f1cc72b078a154ed0ead09b4d024d"><span><code>ClientBindingFactory::getAreaBinding::__l21::&lt;lambda_363f1cc72b078a154ed0ead09b4d024d&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l25-lambda-fa86098d63427aae10170ef55fc211e6" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l25-lambda-fa86098d63427aae10170ef55fc211e6"><span><code>ClientBindingFactory::getAreaBinding::__l25::&lt;lambda_fa86098d63427aae10170ef55fc211e6&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l29-lambda-4ad4abaf36d194589aeacc2087f8e5d8" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l29-lambda-4ad4abaf36d194589aeacc2087f8e5d8"><span><code>ClientBindingFactory::getAreaBinding::__l29::&lt;lambda_4ad4abaf36d194589aeacc2087f8e5d8&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l33-lambda-c124153a23bc74bb259e700314fabfe5" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l33-lambda-c124153a23bc74bb259e700314fabfe5"><span><code>ClientBindingFactory::getAreaBinding::__l33::&lt;lambda_c124153a23bc74bb259e700314fabfe5&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l37-lambda-ad03e7fd0cd44601e962483c0c526b9c" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l37-lambda-ad03e7fd0cd44601e962483c0c526b9c"><span><code>ClientBindingFactory::getAreaBinding::__l37::&lt;lambda_ad03e7fd0cd44601e962483c0c526b9c&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l41-lambda-15d4d27fc3fab10c113ccc141c937ae8" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l41-lambda-15d4d27fc3fab10c113ccc141c937ae8"><span><code>ClientBindingFactory::getAreaBinding::__l41::&lt;lambda_15d4d27fc3fab10c113ccc141c937ae8&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l45-lambda-8ff1de1eef774dd1106ac7f5857e2d9b" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l45-lambda-8ff1de1eef774dd1106ac7f5857e2d9b"><span><code>ClientBindingFactory::getAreaBinding::__l45::&lt;lambda_8ff1de1eef774dd1106ac7f5857e2d9b&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l49-lambda-b41f787d80d65477826583f3d77947ad" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l49-lambda-b41f787d80d65477826583f3d77947ad"><span><code>ClientBindingFactory::getAreaBinding::__l49::&lt;lambda_b41f787d80d65477826583f3d77947ad&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l53-lambda-02e65bc75bc403a0d5915dac1a58e8c2" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l53-lambda-02e65bc75bc403a0d5915dac1a58e8c2"><span><code>ClientBindingFactory::getAreaBinding::__l53::&lt;lambda_02e65bc75bc403a0d5915dac1a58e8c2&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l57-lambda-662ee5d55e561d65a044d078186e83d9" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l57-lambda-662ee5d55e561d65a044d078186e83d9"><span><code>ClientBindingFactory::getAreaBinding::__l57::&lt;lambda_662ee5d55e561d65a044d078186e83d9&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l65-lambda-11cb320c71eb9c2c133ff6d68d8de661" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l65-lambda-11cb320c71eb9c2c133ff6d68d8de661"><span><code>ClientBindingFactory::getAreaBinding::__l65::&lt;lambda_11cb320c71eb9c2c133ff6d68d8de661&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l69-lambda-9003cc46be8ff06e6019466117b648cb" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l69-lambda-9003cc46be8ff06e6019466117b648cb"><span><code>ClientBindingFactory::getAreaBinding::__l69::&lt;lambda_9003cc46be8ff06e6019466117b648cb&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l73-lambda-63d65d763c745e34cfd24e2ed9e972e9" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l73-lambda-63d65d763c745e34cfd24e2ed9e972e9"><span><code>ClientBindingFactory::getAreaBinding::__l73::&lt;lambda_63d65d763c745e34cfd24e2ed9e972e9&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l81-lambda-91076f5a9a3c55292508097fc4d6fac7" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l81-lambda-91076f5a9a3c55292508097fc4d6fac7"><span><code>ClientBindingFactory::getAreaBinding::__l81::&lt;lambda_91076f5a9a3c55292508097fc4d6fac7&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l85-lambda-feb1532674b9f50b160f3ecdb14b5bbc" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l85-lambda-feb1532674b9f50b160f3ecdb14b5bbc"><span><code>ClientBindingFactory::getAreaBinding::__l85::&lt;lambda_feb1532674b9f50b160f3ecdb14b5bbc&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l89-lambda-3045ae51b964740e158387af04a53e99" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l89-lambda-3045ae51b964740e158387af04a53e99"><span><code>ClientBindingFactory::getAreaBinding::__l89::&lt;lambda_3045ae51b964740e158387af04a53e99&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l93-lambda-98c915c68a450916aaedca71464fb20d" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l93-lambda-98c915c68a450916aaedca71464fb20d"><span><code>ClientBindingFactory::getAreaBinding::__l93::&lt;lambda_98c915c68a450916aaedca71464fb20d&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l97-lambda-30a6bbd5c8267ea08db9dc591f356dc6" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l97-lambda-30a6bbd5c8267ea08db9dc591f356dc6"><span><code>ClientBindingFactory::getAreaBinding::__l97::&lt;lambda_30a6bbd5c8267ea08db9dc591f356dc6&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l101-lambda-9dbc146f72c67fa5eb0eb81ee8beb838" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l101-lambda-9dbc146f72c67fa5eb0eb81ee8beb838"><span><code>ClientBindingFactory::getAreaBinding::__l101::&lt;lambda_9dbc146f72c67fa5eb0eb81ee8beb838&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l105-lambda-8236814038f22a3770d7eb365f42c1bb" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l105-lambda-8236814038f22a3770d7eb365f42c1bb"><span><code>ClientBindingFactory::getAreaBinding::__l105::&lt;lambda_8236814038f22a3770d7eb365f42c1bb&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory-getareabinding-l109-lambda-5be19c9e68037c701d60f79feeb8b6fc" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-getareabinding-l109-lambda-5be19c9e68037c701d60f79feeb8b6fc"><span><code>ClientBindingFactory::getAreaBinding::__l109::&lt;lambda_5be19c9e68037c701d60f79feeb8b6fc&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const ClientBindingFactory *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,bool&gt;</code></td><td>map</td></tr></tbody></table><h3 id="clientbindingfactory" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory"><span><code>ClientBindingFactory</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BindingFactory</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(8) <code>const ClientInputHandler *</code></td><td>mClientInputHandler</td></tr><tr><td>16</td><td>(8) <code>IClientInstance *</code></td><td>mClient</td></tr><tr><td>24</td><td>(16) <code>RectangleArea</code></td><td>mEmpty</td></tr><tr><td>40</td><td>(16) <code>RectangleArea</code></td><td>mTurnInteract</td></tr><tr><td>56</td><td>(16) <code>RectangleArea</code></td><td>mDPadNoTurnInteractArea</td></tr><tr><td>72</td><td>(16) <code>RectangleArea</code></td><td>mDisableJumpArea</td></tr><tr><td>88</td><td>(16) <code>RectangleArea</code></td><td>mDisableSneakArea</td></tr><tr><td>104</td><td>(16) <code>RectangleArea</code></td><td>mGuiPassthrough</td></tr><tr><td>120</td><td>(16) <code>RectangleArea</code></td><td>mChangingFlightHeight</td></tr><tr><td>136</td><td>(16) <code>RectangleArea</code></td><td>mLeft</td></tr><tr><td>152</td><td>(16) <code>RectangleArea</code></td><td>mRight</td></tr><tr><td>168</td><td>(16) <code>RectangleArea</code></td><td>mUpInvisible</td></tr><tr><td>184</td><td>(16) <code>RectangleArea</code></td><td>mUp</td></tr><tr><td>200</td><td>(16) <code>RectangleArea</code></td><td>mDown</td></tr><tr><td>216</td><td>(16) <code>RectangleArea</code></td><td>mAscend</td></tr><tr><td>232</td><td>(16) <code>RectangleArea</code></td><td>mMiddleRight</td></tr><tr><td>248</td><td>(16) <code>RectangleArea</code></td><td>mDescend</td></tr><tr><td>264</td><td>(16) <code>RectangleArea</code></td><td>mPause</td></tr><tr><td>280</td><td>(16) <code>RectangleArea</code></td><td>mEmote</td></tr><tr><td>296</td><td>(16) <code>RectangleArea</code></td><td>mChat</td></tr><tr><td>312</td><td>(16) <code>RectangleArea</code></td><td>mJump</td></tr><tr><td>328</td><td>(16) <code>RectangleArea</code></td><td>mUpLeft</td></tr><tr><td>344</td><td>(16) <code>RectangleArea</code></td><td>mUpRight</td></tr><tr><td>360</td><td>(16) <code>RectangleArea</code></td><td>mPlayerEffects</td></tr><tr><td>376</td><td>(16) <code>RectangleArea</code></td><td>mPaddleRight</td></tr><tr><td>392</td><td>(16) <code>RectangleArea</code></td><td>mPaddleLeft</td></tr><tr><td>408</td><td>(16) <code>RectangleArea</code></td><td>mSneak</td></tr><tr><td>424</td><td>(16) <code>RectangleArea</code></td><td>mMobEffects</td></tr><tr><td>440</td><td>(16) <code>RectangleArea</code></td><td>mToastArea</td></tr><tr><td>456</td><td>(16) <code>RectangleArea</code></td><td>mCodeBuilder</td></tr><tr><td>472</td><td>(16) <code>RectangleArea</code></td><td>mImmersiveReader</td></tr><tr><td>488</td><td>(16) <code>RectangleArea</code></td><td>mKeyJobArea</td></tr><tr><td>504</td><td>(16) <code>RectangleArea</code></td><td>mSneakOnJK</td></tr><tr><td>520</td><td>(16) <code>RectangleArea</code></td><td>mStoreArea</td></tr><tr><td>536</td><td>(16) <code>RectangleArea</code></td><td>mWalkStateArea</td></tr><tr><td>552</td><td>(16) <code>RectangleArea</code></td><td>mVState0</td></tr><tr><td>568</td><td>(16) <code>RectangleArea</code></td><td>mMicrophone</td></tr><tr><td>584</td><td>(16) <code>RectangleArea</code></td><td>mScreenshot</td></tr><tr><td>600</td><td>(16) <code>RectangleArea</code></td><td>mVoiceTrans</td></tr><tr><td>616</td><td>(16) <code>RectangleArea</code></td><td>mFoldMenuArea</td></tr><tr><td>632</td><td>(16) <code>RectangleArea</code></td><td>mReportCheat</td></tr><tr><td>648</td><td>(4) <code>float</code></td><td>mStoreAreaX</td></tr><tr><td>652</td><td>(4) <code>float</code></td><td>mStoreAreaY</td></tr><tr><td>656</td><td>(8) <code>glm::tvec2&lt;float,0&gt;</code></td><td>mInteractCreative</td></tr><tr><td>664</td><td>(8) <code>glm::tvec2&lt;float,0&gt;</code></td><td>mInteractSurvival</td></tr></tbody></table><h3 id="channellistquery" tabindex="-1"><a class="header-anchor" href="#channellistquery"><span><code>ChannelListQuery</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mSkip</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mCount</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>mChannelName</td></tr><tr><td>40</td><td>(1) <code>ChannelListQueryType</code></td><td>mType</td></tr></tbody></table><h3 id="cube" tabindex="-1"><a class="header-anchor" href="#cube"><span><code>Cube</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>Vec3</code></td><td>mOrigin</td></tr><tr><td>12</td><td>(12) <code>Vec3</code></td><td>mSize</td></tr><tr><td>24</td><td>(12) <code>Vec3</code></td><td>mRotation</td></tr><tr><td>36</td><td>(12) <code>Vec3</code></td><td>mCubePivot</td></tr><tr><td>48</td><td>(24) <code>std::vector&lt;PolygonQuad&gt;</code></td><td>mPolygons</td></tr><tr><td>72</td><td>(16) <code>mce::Color</code></td><td>mColor</td></tr><tr><td>88</td><td>(1) <code>bool</code></td><td>mMirrored</td></tr><tr><td>92</td><td>(144) <code>std::array&lt;Cube::FaceUVData,6&gt;</code></td><td>mFaceData</td></tr></tbody></table><h3 id="cube-faceuvdata" tabindex="-1"><a class="header-anchor" href="#cube-faceuvdata"><span><code>Cube::FaceUVData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Vec2</code></td><td>mUV</td></tr><tr><td>8</td><td>(8) <code>Vec2</code></td><td>mUVSize</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>mMaterialInstanceListIndex</td></tr><tr><td>20</td><td>(1) <code>bool</code></td><td>mFaceValid</td></tr></tbody></table><h3 id="clientnetworkhandler-handle-l2-lambda-3a932b1c4cad8a420efad8f5991d860f" tabindex="-1"><a class="header-anchor" href="#clientnetworkhandler-handle-l2-lambda-3a932b1c4cad8a420efad8f5991d860f"><span><code>ClientNetworkHandler::handle::__l2::&lt;lambda_3a932b1c4cad8a420efad8f5991d860f&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ResourcePackFileDownloaderManager *</code></td><td>downloadManager</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>resourceName</td></tr><tr><td>40</td><td>(8) <code>ClientNetworkHandler *const</code></td><td>__this</td></tr><tr><td>48</td><td>(16) <code>std::weak_ptr&lt;bool&gt;</code></td><td>weakValid</td></tr></tbody></table><h3 id="clientnetworkhandler-handle-l2-lambda-57a8c0175a82e2b1f2fddb694a815e8f" tabindex="-1"><a class="header-anchor" href="#clientnetworkhandler-handle-l2-lambda-57a8c0175a82e2b1f2fddb694a815e8f"><span><code>ClientNetworkHandler::handle::__l2::&lt;lambda_57a8c0175a82e2b1f2fddb694a815e8f&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(152) <code>const NetworkIdentifier</code></td><td>source</td></tr><tr><td>152</td><td>(32) <code>std::string</code></td><td>resourceName</td></tr><tr><td>184</td><td>(8) <code>ClientNetworkHandler *const</code></td><td>__this</td></tr><tr><td>192</td><td>(1) <code>_BYTE[1]</code></td><td>packType</td></tr><tr><td>200</td><td>(16) <code>std::weak_ptr&lt;bool&gt;</code></td><td>weakValid</td></tr></tbody></table><h3 id="clientnetworkhandler-handle-l2-lambda-f7c9cc170d1b2d687b5ef307e2dd2a5f" tabindex="-1"><a class="header-anchor" href="#clientnetworkhandler-handle-l2-lambda-f7c9cc170d1b2d687b5ef307e2dd2a5f"><span><code>ClientNetworkHandler::handle::__l2::&lt;lambda_f7c9cc170d1b2d687b5ef307e2dd2a5f&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ClientNetworkHandler *const</code></td><td>__this</td></tr><tr><td>8</td><td>(8) <code>ResourcePackFileDownloaderManager *</code></td><td>downloadManager</td></tr><tr><td>16</td><td>(8) <code>const NetworkIdentifier *</code></td><td>source</td></tr><tr><td>24</td><td>(128) <code>const ResourcePackDataInfoPacket</code></td><td>packet</td></tr><tr><td>152</td><td>(32) <code>std::string</code></td><td>resourceName</td></tr></tbody></table><h3 id="clientnetworkhandler-handle-l2-lambda-f7c9cc170d1b2d687b5ef307e2dd2a5f-l5-lambda-c1b3156103bb292e2178303c3a153411" tabindex="-1"><a class="header-anchor" href="#clientnetworkhandler-handle-l2-lambda-f7c9cc170d1b2d687b5ef307e2dd2a5f-l5-lambda-c1b3156103bb292e2178303c3a153411"><span><code>ClientNetworkHandler::handle::__l2::&lt;lambda_f7c9cc170d1b2d687b5ef307e2dd2a5f&gt;::()::__l5::&lt;lambda_c1b3156103bb292e2178303c3a153411&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ClientNetworkHandler *const</code></td><td>__this</td></tr><tr><td>8</td><td>(8) <code>ResourcePackFileDownloaderManager *</code></td><td>downloadManager</td></tr><tr><td>16</td><td>(128) <code>const ResourcePackDataInfoPacket</code></td><td>packet</td></tr><tr><td>144</td><td>(32) <code>std::string</code></td><td>resourceName</td></tr></tbody></table><h3 id="clientnetworkhandler-handle-l2-lambda-d12db79ea14521c577faa9163e217abc" tabindex="-1"><a class="header-anchor" href="#clientnetworkhandler-handle-l2-lambda-d12db79ea14521c577faa9163e217abc"><span><code>ClientNetworkHandler::handle::__l2::&lt;lambda_d12db79ea14521c577faa9163e217abc&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>const LabTablePacket</code></td><td>packet</td></tr></tbody></table><h3 id="connectionrequest" tabindex="-1"><a class="header-anchor" href="#connectionrequest"><span><code>ConnectionRequest</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_ptr&lt;UnverifiedCertificate&gt;</code></td><td>mCertificateData</td></tr><tr><td>8</td><td>(8) <code>std::unique_ptr&lt;Certificate&gt;</code></td><td>mCertificate</td></tr><tr><td>16</td><td>(8) <code>std::unique_ptr&lt;WebToken&gt;</code></td><td>mRawToken</td></tr><tr><td>24</td><td>(1) <code>unsigned __int8</code></td><td>mClientSubId</td></tr></tbody></table><h3 id="containeropenpacket" tabindex="-1"><a class="header-anchor" href="#containeropenpacket"><span><code>ContainerOpenPacket</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>Packet</code></td><td>baseclass_0</td></tr><tr><td>40</td><td>(1) <code>ContainerID</code></td><td>mContainerId</td></tr><tr><td>41</td><td>(1) <code>ContainerType</code></td><td>mType</td></tr><tr><td>44</td><td>(12) <code>NetworkBlockPosition</code></td><td>mPos</td></tr><tr><td>56</td><td>(8) <code>ActorUniqueID</code></td><td>mEntityUniqueID</td></tr></tbody></table><h3 id="containercomponent" tabindex="-1"><a class="header-anchor" href="#containercomponent"><span><code>ContainerComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContainerContentChangeListener</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(8) <code>std::unique_ptr&lt;Container&gt;</code></td><td>mContainer</td></tr><tr><td>16</td><td>(8) <code>Mob *</code></td><td>mListenerShim</td></tr><tr><td>24</td><td>(1) <code>bool</code></td><td>mCanBeSiphonedFrom</td></tr><tr><td>25</td><td>(1) <code>bool</code></td><td>mPrivate</td></tr><tr><td>26</td><td>(1) <code>bool</code></td><td>mRestrictToOwner</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>mLootTable</td></tr><tr><td>64</td><td>(4) <code>int</code></td><td>mLootTableSeed</td></tr></tbody></table><h3 id="containercontentchangelistener" tabindex="-1"><a class="header-anchor" href="#containercontentchangelistener"><span><code>ContainerContentChangeListener</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContainerContentChangeListener_vtbl *</code></td><td>__vftable</td></tr></tbody></table><h3 id="chatoptions-chatoption" tabindex="-1"><a class="header-anchor" href="#chatoptions-chatoption"><span><code>ChatOptions::ChatOption</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Option *</code></td><td>option</td></tr><tr><td>8</td><td>(1) <code>const ChatCategory</code></td><td>category</td></tr><tr><td>16</td><td>(32) <code>const std::string</code></td><td>telemetryName</td></tr></tbody></table><h3 id="constdeserializedataparams" tabindex="-1"><a class="header-anchor" href="#constdeserializedataparams"><span><code>ConstDeserializeDataParams</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const Json::Value *</code></td><td>mValue</td></tr><tr><td>8</td><td>(112) <code>const SemVersion</code></td><td>mPackVersion</td></tr></tbody></table><h3 id="core-inputfilestream" tabindex="-1"><a class="header-anchor" href="#core-inputfilestream"><span><code>Core::InputFileStream</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(296) <code>Core::FileStream</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="commonresourcedefinitionmap" tabindex="-1"><a class="header-anchor" href="#commonresourcedefinitionmap"><span><code>CommonResourceDefinitionMap</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::unordered_map&lt;HashedString,ActorSkeletalAnimationPtr&gt;</code></td><td>mActorAnimationMap</td></tr><tr><td>64</td><td>(64) <code>std::unordered_map&lt;HashedString,ActorAnimationControllerPtr&gt;</code></td><td>mActorAnimationControllerMap</td></tr><tr><td>128</td><td>(24) <code>std::vector&lt;NamedMolangScript&gt;</code></td><td>mActorAnimateScriptArray</td></tr><tr><td>152</td><td>(24) <code>std::vector&lt;MolangVariableSettings&gt;</code></td><td>mVariableSettings</td></tr><tr><td>176</td><td>(24) <code>std::vector&lt;HashedString&gt;</code></td><td>mQueryableGeometryBoneNames</td></tr></tbody></table><h3 id="clientblockpipeline-transforms" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-transforms"><span><code>ClientBlockPipeline::Transforms</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>Matrix</code></td><td>mPostTransform</td></tr></tbody></table><h3 id="chalkboardblockactor-cachedmessagedata" tabindex="-1"><a class="header-anchor" href="#chalkboardblockactor-cachedmessagedata"><span><code>ChalkboardBlockActor::CachedMessageData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(640) <code>std::array&lt;ChalkboardBlockActor::CachedLineData,16&gt;</code></td><td>lineData</td></tr><tr><td>640</td><td>(4) <code>unsigned int</code></td><td>numLines</td></tr><tr><td>648</td><td>(32) <code>std::string</code></td><td>filteredMessage</td></tr><tr><td>680</td><td>(8) <code>const void *</code></td><td>cachedFontCompare</td></tr><tr><td>688</td><td>(1) <code>bool</code></td><td>dirty</td></tr></tbody></table><h3 id="chalkboardblockactor-cachedlinedata" tabindex="-1"><a class="header-anchor" href="#chalkboardblockactor-cachedlinedata"><span><code>ChalkboardBlockActor::CachedLineData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>text</td></tr><tr><td>32</td><td>(4) <code>int</code></td><td>lineLength</td></tr></tbody></table><h3 id="chunkblockpos" tabindex="-1"><a class="header-anchor" href="#chunkblockpos"><span><code>ChunkBlockPos</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>unsigned __int8</code></td><td>x</td></tr><tr><td>1</td><td>(1) <code>unsigned __int8</code></td><td>z</td></tr><tr><td>2</td><td>(2) <code>ChunkLocalHeight</code></td><td>y</td></tr></tbody></table><h3 id="chunksource" tabindex="-1"><a class="header-anchor" href="#chunksource"><span><code>ChunkSource</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ChunkSource_vtbl *</code></td><td>__vftable</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mChunkSide</td></tr><tr><td>16</td><td>(8) <code>Level *</code></td><td>mLevel</td></tr><tr><td>24</td><td>(8) <code>Dimension *</code></td><td>mDimension</td></tr><tr><td>32</td><td>(8) <code>ChunkSource *</code></td><td>mParent</td></tr><tr><td>40</td><td>(8) <code>std::unique_ptr&lt;ChunkSource&gt;</code></td><td>mOwnedParent</td></tr><tr><td>48</td><td>(8) <code>LevelChunkBuilderData *</code></td><td>mLevelChunkBuilderData</td></tr></tbody></table><h3 id="cubemap-rendercubemap-l17-lambda-260eef0ecc0f3850dffbb1b638223cba" tabindex="-1"><a class="header-anchor" href="#cubemap-rendercubemap-l17-lambda-260eef0ecc0f3850dffbb1b638223cba"><span><code>CubeMap::renderCubeMap::__l17::&lt;lambda_260eef0ecc0f3850dffbb1b638223cba&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>const Matrix</code></td><td>cubemapWorldMatrix</td></tr></tbody></table><h3 id="clientrenderdata" tabindex="-1"><a class="header-anchor" href="#clientrenderdata"><span><code>ClientRenderData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>unsigned __int8</code></td><td>mClientSubId</td></tr></tbody></table><h3 id="cloudrenderobject" tabindex="-1"><a class="header-anchor" href="#cloudrenderobject"><span><code>CloudRenderObject</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;mce::Mesh&gt;</code></td><td>mCloudsMesh</td></tr><tr><td>16</td><td>(8) <code>const mce::MaterialPtr *</code></td><td>mCloudMaterial</td></tr><tr><td>24</td><td>(16) <code>mce::Color</code></td><td>mCloudColor</td></tr><tr><td>40</td><td>(12) <code>glm::tvec3&lt;float,0&gt;</code></td><td>mCloudDiff</td></tr><tr><td>52</td><td>(4) <code>float</code></td><td>mYTranslation</td></tr></tbody></table><h3 id="chunkrenderobjectcollection" tabindex="-1"><a class="header-anchor" href="#chunkrenderobjectcollection"><span><code>ChunkRenderObjectCollection</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;mce::ServerTexture&gt;</code></td><td>mTextures</td></tr><tr><td>24</td><td>(24) <code>std::vector&lt;ChunkRenderData&gt;</code></td><td>mChunkQueue</td></tr><tr><td>48</td><td>(1296) <code>std::vector&lt;ChunkLayerRenderObject&gt;[3][18]</code></td><td>mTerrainLayerChunkQueue</td></tr><tr><td>1344</td><td>(4) <code>unsigned int</code></td><td>mMaximumChunkVertexCount</td></tr></tbody></table><h3 id="crackrenderobjectcollection" tabindex="-1"><a class="header-anchor" href="#crackrenderobjectcollection"><span><code>CrackRenderObjectCollection</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>std::vector&lt;CrackRenderObject,LinearAllocator&lt;CrackRenderObject&gt; &gt;</code></td><td>mCracks</td></tr><tr><td>40</td><td>(72) <code>mce::TexturePtr</code></td><td>mAtlasTexture</td></tr></tbody></table><h3 id="crackrenderobject" tabindex="-1"><a class="header-anchor" href="#crackrenderobject"><span><code>CrackRenderObject</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;mce::Mesh&gt;</code></td><td>mMesh</td></tr><tr><td>16</td><td>(8) <code>const mce::MaterialPtr *</code></td><td>mCrackMat</td></tr><tr><td>24</td><td>(1) <code>bool</code></td><td>mAlphaTest</td></tr></tbody></table><h3 id="cg-bufferspan" tabindex="-1"><a class="header-anchor" href="#cg-bufferspan"><span><code>cg::BufferSpan</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>cg::BufferDescription</code></td><td>mDescription</td></tr><tr><td>8</td><td>(8) <code>const unsigned __int8 *</code></td><td>mData</td></tr></tbody></table><h3 id="cg-bufferdescription" tabindex="-1"><a class="header-anchor" href="#cg-bufferdescription"><span><code>cg::BufferDescription</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>mStride</td></tr><tr><td>4</td><td>(4) <code>unsigned int</code></td><td>mCount</td></tr></tbody></table><h3 id="cg-rendermaterialgrouploader-std-unordered-map-hashedstring-std-shared-ptr-mce-rendermaterialinfo-std-hash-hashedstring-std-equal-to-hashedstring-std-allocator-std-pair-hashedstring-const-std-shared-ptr-mce-rendermaterialinfo-mce-rendermaterial-mce-rendermaterialinfo-resourcepackmanager" tabindex="-1"><a class="header-anchor" href="#cg-rendermaterialgrouploader-std-unordered-map-hashedstring-std-shared-ptr-mce-rendermaterialinfo-std-hash-hashedstring-std-equal-to-hashedstring-std-allocator-std-pair-hashedstring-const-std-shared-ptr-mce-rendermaterialinfo-mce-rendermaterial-mce-rendermaterialinfo-resourcepackmanager"><span><code>cg::RenderMaterialGroupLoader&lt;std::unordered_map&lt;HashedString,std::shared_ptr&lt;mce::RenderMaterialInfo&gt;,std::hash&lt;HashedString&gt;,std::equal_to&lt;HashedString&gt;,std::allocator&lt;std::pair&lt;HashedString const ,std::shared_ptr&lt;mce::RenderMaterialInfo&gt; &gt; &gt; &gt;,mce::RenderMaterial,mce::RenderMaterialInfo,ResourcePackManager&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cg-renderfeaturesconfiguration" tabindex="-1"><a class="header-anchor" href="#cg-renderfeaturesconfiguration"><span><code>cg::RenderFeaturesConfiguration</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>MSAAEnabled</td></tr><tr><td>1</td><td>(1) <code>bool</code></td><td>TexelAAEnabled</td></tr><tr><td>2</td><td>(1) <code>bool</code></td><td>HolographicMode</td></tr><tr><td>3</td><td>(1) <code>bool</code></td><td>AlphaToCoverageSupported</td></tr><tr><td>4</td><td>(1) <code>bool</code></td><td>VertexFormatRGBA8Supported</td></tr><tr><td>5</td><td>(1) <code>bool</code></td><td>VertexShaderInstancingSupported</td></tr><tr><td>6</td><td>(1) <code>bool</code></td><td>LargeVertexShaderUniforms</td></tr></tbody></table><h3 id="cg-rendermaterialbase" tabindex="-1"><a class="header-anchor" href="#cg-rendermaterialbase"><span><code>cg::RenderMaterialBase</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>cg::RenderMaterialBase_vtbl *</code></td><td>__vftable</td></tr><tr><td>8</td><td>(16) <code>std::map&lt;std::string,std::shared_ptr&lt;cg::RenderMaterialBase&gt;&gt;</code></td><td>mMaterialVariations</td></tr><tr><td>24</td><td>(32) <code>cg::VariationMap</code></td><td>mVariationMap</td></tr><tr><td>56</td><td>(32) <code>std::string</code></td><td>mFullMaterialName</td></tr><tr><td>88</td><td>(32) <code>std::string</code></td><td>mVariantName</td></tr><tr><td>120</td><td>(32) <code>std::string</code></td><td>mMaterialIdentifier</td></tr><tr><td>152</td><td>(16) <code>std::set&lt;std::string&gt;</code></td><td>mDefines</td></tr><tr><td>168</td><td>(2) <code>_BYTE[2]</code></td><td>mStateMask</td></tr><tr><td>176</td><td>(32) <code>std::string</code></td><td>mShaderHeader</td></tr><tr><td>208</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mVertexShader</td></tr><tr><td>240</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mFragmentShader</td></tr><tr><td>272</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mGeometryShader</td></tr><tr><td>304</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mVRGeometryShader</td></tr><tr><td>336</td><td>(112) <code>SemVersion</code></td><td>mVersion</td></tr></tbody></table><h3 id="cg-variationmap" tabindex="-1"><a class="header-anchor" href="#cg-variationmap"><span><code>cg::VariationMap</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::map&lt;std::string,cg::VariationMap&gt;</code></td><td>mMaterialJsonVariationMap</td></tr><tr><td>16</td><td>(16) <code>Json::Value</code></td><td>mVariantJson</td></tr></tbody></table><h3 id="cg-resourcemanager-std-shared-ptr-cg-imagebuffer-resourcelocation-sharedimagebuffertracker-std-shared-ptr-cg-imagebuffer-std-map" tabindex="-1"><a class="header-anchor" href="#cg-resourcemanager-std-shared-ptr-cg-imagebuffer-resourcelocation-sharedimagebuffertracker-std-shared-ptr-cg-imagebuffer-std-map"><span><code>cg::ResourceManager&lt;std::shared_ptr&lt;cg::ImageBuffer&gt;,ResourceLocation,SharedImageBufferTracker,std::shared_ptr&lt;cg::ImageBuffer&gt;,std::map&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::map&lt;ResourceLocation,std::shared_ptr&lt;cg::ImageBuffer&gt;&gt;</code></td><td>mContainer</td></tr></tbody></table><h3 id="contentcatalogpacksource-collectallcatalogitems-l2-lambda-baa95d9a96c4efb4ae292f92f510cc21" tabindex="-1"><a class="header-anchor" href="#contentcatalogpacksource-collectallcatalogitems-l2-lambda-baa95d9a96c4efb4ae292f92f510cc21"><span><code>ContentCatalogPackSource::_collectAllCatalogItems::__l2::&lt;lambda_baa95d9a96c4efb4ae292f92f510cc21&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContentCatalogPackSource *const</code></td><td>__this</td></tr><tr><td>8</td><td>(576) <code>SearchQuery</code></td><td>query</td></tr><tr><td>584</td><td>(16) <code>std::shared_ptr&lt;unsigned __int64&gt;</code></td><td>documentsReceived</td></tr><tr><td>600</td><td>(16) <code>std::shared_ptr&lt;unsigned __int64&gt;</code></td><td>documentsRemoved</td></tr><tr><td>616</td><td>(64) <code>std::function&lt;void __cdecl(void)&gt;</code></td><td>callback</td></tr><tr><td>680</td><td>(16) <code>std::weak_ptr&lt;bool&gt;</code></td><td>weakTracker</td></tr></tbody></table><h3 id="contentcatalogpacksource-addcatalogitemsfromsearch-l9-lambda-6c2cc72359c8774f2a3e9185f6c63471" tabindex="-1"><a class="header-anchor" href="#contentcatalogpacksource-addcatalogitemsfromsearch-l9-lambda-6c2cc72359c8774f2a3e9185f6c63471"><span><code>ContentCatalogPackSource::_addCatalogItemsFromSearch::__l9::&lt;lambda_6c2cc72359c8774f2a3e9185f6c63471&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContentCatalogPackSource *const</code></td><td>__this</td></tr><tr><td>8</td><td>(576) <code>SearchQuery</code></td><td>nextQuery</td></tr><tr><td>584</td><td>(16) <code>std::shared_ptr&lt;unsigned __int64&gt;</code></td><td>documentsReceived</td></tr><tr><td>600</td><td>(16) <code>std::shared_ptr&lt;unsigned __int64&gt;</code></td><td>documentsRemoved</td></tr><tr><td>616</td><td>(64) <code>std::function&lt;void __cdecl(void)&gt;</code></td><td>callback</td></tr><tr><td>680</td><td>(16) <code>std::weak_ptr&lt;bool&gt;</code></td><td>weakTracker</td></tr></tbody></table><h3 id="core-ziputils-unzipsettings" tabindex="-1"><a class="header-anchor" href="#core-ziputils-unzipsettings"><span><code>Core::ZipUtils::UnzipSettings</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(48) <code>Core::ZipUtils::ZipFileRestrictions</code></td><td>mRestrictions</td></tr><tr><td>48</td><td>(1) <code>bool</code></td><td>mDeleteZipOnSuccess</td></tr><tr><td>49</td><td>(1) <code>bool</code></td><td>mPreventOverwrites</td></tr><tr><td>56</td><td>(8) <code>IFileAccess *</code></td><td>mFileAccess</td></tr><tr><td>64</td><td>(32) <code>std::string</code></td><td>mPassword</td></tr><tr><td>96</td><td>(24) <code>std::vector&lt;std::string&gt;</code></td><td>mSelectedPaths</td></tr></tbody></table><h3 id="contentacquisition-searchfordlcidsbypackids-l11-lambda-b5e7ac097f87844b528ff4a5d3cae47b" tabindex="-1"><a class="header-anchor" href="#contentacquisition-searchfordlcidsbypackids-l11-lambda-b5e7ac097f87844b528ff4a5d3cae47b"><span><code>ContentAcquisition::searchForDlcIdsByPackIds::__l11::&lt;lambda_b5e7ac097f87844b528ff4a5d3cae47b&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(136) <code>const PackIdVersion</code></td><td>packId</td></tr><tr><td>136</td><td>(160) <code>ContentAcquisition::searchForDlcIdsByPackIds::__l6::&lt;lambda_1d55797dc2ac18165f6bbd44e10719d3&gt;</code></td><td>onSearchComplete</td></tr></tbody></table><h3 id="contentacquisition-searchfordlcidsbypackids-l6-lambda-1d55797dc2ac18165f6bbd44e10719d3" tabindex="-1"><a class="header-anchor" href="#contentacquisition-searchfordlcidsbypackids-l6-lambda-1d55797dc2ac18165f6bbd44e10719d3"><span><code>ContentAcquisition::searchForDlcIdsByPackIds::__l6::&lt;lambda_1d55797dc2ac18165f6bbd44e10719d3&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContentAcquisition *const</code></td><td>__this</td></tr><tr><td>8</td><td>(16) <code>std::shared_ptr&lt;</code>ContentAcquisition::searchForDlcIdsByPackIds&#39;::<code>2&#39;::SearchTracker&gt;</code></td><td>tracker</td></tr><tr><td>24</td><td>(136) <code>const PackIdVersion</code></td><td>packId</td></tr></tbody></table><h3 id="contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5" tabindex="-1"><a class="header-anchor" href="#contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5"><span><code>ContentAcquisition::checkStorageRequirements::__l2::&lt;lambda_9e238074f4708f40d39951c6bbb8c3d5&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContentAcquisition *const</code></td><td>__this</td></tr><tr><td>8</td><td>(16) <code>std::shared_ptr&lt;</code>ContentAcquisition::checkStorageRequirements&#39;::<code>2&#39;::Totals&gt;</code></td><td>sharedTotals</td></tr><tr><td>24</td><td>(24) <code>const std::vector&lt;DlcId&gt;</code></td><td>dlcIds</td></tr><tr><td>48</td><td>(64) <code>std::function&lt;void __cdecl(bool,unsigned __int64)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88-l5-lambda-fb76be13b8fe047662fa721a3a77c9bb" tabindex="-1"><a class="header-anchor" href="#contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88-l5-lambda-fb76be13b8fe047662fa721a3a77c9bb"><span><code>ContentAcquisition::checkStorageRequirements::__l2::&lt;lambda_9e238074f4708f40d39951c6bbb8c3d5&gt;::()::__l2::&lt;lambda_23d0a1b8fd39adaa4c0cd04cd9e72a88&gt;::()::__l5::&lt;lambda_fb76be13b8fe047662fa721a3a77c9bb&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned __int64</code></td><td>dlcSize</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;void __cdecl(bool,unsigned __int64)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l6-lambda-5be28da840c3ba3420f6b07d0ad08a78" tabindex="-1"><a class="header-anchor" href="#contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l6-lambda-5be28da840c3ba3420f6b07d0ad08a78"><span><code>ContentAcquisition::checkStorageRequirements::__l2::&lt;lambda_9e238074f4708f40d39951c6bbb8c3d5&gt;::()::__l6::&lt;lambda_5be28da840c3ba3420f6b07d0ad08a78&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContentAcquisition *const</code></td><td>__this</td></tr><tr><td>8</td><td>(200) <code>const DlcId</code></td><td>dlcId</td></tr><tr><td>208</td><td>(88) <code>ContentAcquisition::checkStorageRequirements::__l2::&lt;lambda_9e238074f4708f40d39951c6bbb8c3d5&gt;::()::__l2::&lt;lambda_23d0a1b8fd39adaa4c0cd04cd9e72a88&gt;</code></td><td>onFileSizeFound</td></tr><tr><td>296</td><td>(8) <code>std::_List_iterator&lt;std::_List_val&lt;std::_List_simple_types&lt;std::pair&lt;DlcId const ,ContentAcquisition::DownloadHistory&gt; &gt; &gt; &gt;</code></td><td>pairIt</td></tr></tbody></table><h3 id="contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88" tabindex="-1"><a class="header-anchor" href="#contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88"><span><code>ContentAcquisition::checkStorageRequirements::__l2::&lt;lambda_9e238074f4708f40d39951c6bbb8c3d5&gt;::()::__l2::&lt;lambda_23d0a1b8fd39adaa4c0cd04cd9e72a88&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;</code>ContentAcquisition::checkStorageRequirements&#39;::<code>2&#39;::Totals&gt;</code></td><td>sharedTotals</td></tr><tr><td>16</td><td>(4) <code>const int</code></td><td>numRequested</td></tr><tr><td>24</td><td>(64) <code>std::function&lt;void __cdecl(bool,unsigned __int64)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="contenttracker-fetchfilesize-l7-lambda-aa9599aea01d6dd62378f60e02738f2f" tabindex="-1"><a class="header-anchor" href="#contenttracker-fetchfilesize-l7-lambda-aa9599aea01d6dd62378f60e02738f2f"><span><code>ContentTracker::fetchFileSize::__l7::&lt;lambda_aa9599aea01d6dd62378f60e02738f2f&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContentTracker *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;void __cdecl(unsigned __int64)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88-l5-lambda-fb76be13b8fe047662fa721a3a77c9bb-l5-lambda-5dde433396ba1836ea97aad5da28a35d" tabindex="-1"><a class="header-anchor" href="#contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88-l5-lambda-fb76be13b8fe047662fa721a3a77c9bb-l5-lambda-5dde433396ba1836ea97aad5da28a35d"><span><code>ContentAcquisition::checkStorageRequirements::__l2::&lt;lambda_9e238074f4708f40d39951c6bbb8c3d5&gt;::()::__l2::&lt;lambda_23d0a1b8fd39adaa4c0cd04cd9e72a88&gt;::()::__l5::&lt;lambda_fb76be13b8fe047662fa721a3a77c9bb&gt;::()::__l5::&lt;lambda_5dde433396ba1836ea97aad5da28a35d&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned __int64</code></td><td>dlcSize</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;void __cdecl(bool,unsigned __int64)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88-l5-lambda-fb76be13b8fe047662fa721a3a77c9bb-l5-lambda-06fba6772e5a40319ba863ad66ed81c5" tabindex="-1"><a class="header-anchor" href="#contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88-l5-lambda-fb76be13b8fe047662fa721a3a77c9bb-l5-lambda-06fba6772e5a40319ba863ad66ed81c5"><span><code>ContentAcquisition::checkStorageRequirements::__l2::&lt;lambda_9e238074f4708f40d39951c6bbb8c3d5&gt;::()::__l2::&lt;lambda_23d0a1b8fd39adaa4c0cd04cd9e72a88&gt;::()::__l5::&lt;lambda_fb76be13b8fe047662fa721a3a77c9bb&gt;::()::__l5::&lt;lambda_06fba6772e5a40319ba863ad66ed81c5&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned __int64</code></td><td>dlcSize</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;void __cdecl(bool,unsigned __int64)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="contentacquisition-gettitles-l6-lambda-6b2ec6fd37d40446a41ee22bbc465839" tabindex="-1"><a class="header-anchor" href="#contentacquisition-gettitles-l6-lambda-6b2ec6fd37d40446a41ee22bbc465839"><span><code>ContentAcquisition::getTitles::__l6::&lt;lambda_6b2ec6fd37d40446a41ee22bbc465839&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContentAcquisition *const</code></td><td>__this</td></tr><tr><td>8</td><td>(200) <code>const DlcId</code></td><td>dlcId</td></tr><tr><td>208</td><td>(88) <code>ContentAcquisition::getTitles::__l2::&lt;lambda_c6179e0117411f607c7c2f5e595ff517&gt;</code></td><td>onFileFound</td></tr><tr><td>296</td><td>(8) <code>std::_List_iterator&lt;std::_List_val&lt;std::_List_simple_types&lt;std::pair&lt;DlcId const ,ContentAcquisition::DownloadHistory&gt; &gt; &gt; &gt;</code></td><td>pairIt</td></tr></tbody></table><h3 id="contentacquisition-gettitles-l2-lambda-c6179e0117411f607c7c2f5e595ff517" tabindex="-1"><a class="header-anchor" href="#contentacquisition-gettitles-l2-lambda-c6179e0117411f607c7c2f5e595ff517"><span><code>ContentAcquisition::getTitles::__l2::&lt;lambda_c6179e0117411f607c7c2f5e595ff517&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>const int</code></td><td>numRequested</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;void __cdecl(std::vector&lt;std::string&gt; const &amp;)&gt;</code></td><td>callback</td></tr><tr><td>72</td><td>(16) <code>std::shared_ptr&lt;std::vector&lt;std::string&gt; &gt;</code></td><td>sharedTitles</td></tr></tbody></table><h3 id="contenttracker-fetchtitle-l7-lambda-580c010aa240fa46c9d3dfd81e8f23e3" tabindex="-1"><a class="header-anchor" href="#contenttracker-fetchtitle-l7-lambda-580c010aa240fa46c9d3dfd81e8f23e3"><span><code>ContentTracker::fetchTitle::__l7::&lt;lambda_580c010aa240fa46c9d3dfd81e8f23e3&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContentTracker *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;void __cdecl(std::string const &amp;)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="contentacquisition-downloadcallback" tabindex="-1"><a class="header-anchor" href="#contentacquisition-downloadcallback"><span><code>ContentAcquisition::DownloadCallback</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>mShouldCheckExistence</td></tr><tr><td>8</td><td>(16) <code>std::weak_ptr&lt;bool&gt;</code></td><td>mExistenceTracker</td></tr><tr><td>24</td><td>(64) <code>std::function&lt;void __cdecl(DownloadStateObject &amp;)&gt;</code></td><td>mCallback</td></tr></tbody></table><h3 id="contentacquisition-getavailablediskfreespaceasync-l2-lambda-450f8a999d305d9c737ff19408a1e820" tabindex="-1"><a class="header-anchor" href="#contentacquisition-getavailablediskfreespaceasync-l2-lambda-450f8a999d305d9c737ff19408a1e820"><span><code>ContentAcquisition::_getAvailableDiskFreeSpaceAsync::__l2::&lt;lambda_450f8a999d305d9c737ff19408a1e820&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::function&lt;void __cdecl(unsigned __int64)&gt;</code></td><td>callback</td></tr><tr><td>64</td><td>(16) <code>std::shared_ptr&lt;unsigned __int64&gt;</code></td><td>shared_size</td></tr></tbody></table><h3 id="contenttracker-fetchfilesize-l7-lambda-aa9599aea01d6dd62378f60e02738f2f-l5-lambda-b649e17da3516653addd3c4881defd02" tabindex="-1"><a class="header-anchor" href="#contenttracker-fetchfilesize-l7-lambda-aa9599aea01d6dd62378f60e02738f2f-l5-lambda-b649e17da3516653addd3c4881defd02"><span><code>ContentTracker::fetchFileSize::__l7::&lt;lambda_aa9599aea01d6dd62378f60e02738f2f&gt;::()::__l5::&lt;lambda_b649e17da3516653addd3c4881defd02&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::function&lt;void __cdecl(unsigned __int64)&gt;</code></td><td>callback</td></tr><tr><td>64</td><td>(16) <code>std::weak_ptr&lt;bool&gt;</code></td><td>weakExistence</td></tr></tbody></table><h3 id="contenttracker-fetchcontentdetails-l2-lambda-852b98f00350dbcb07efe1ff2bc71eec" tabindex="-1"><a class="header-anchor" href="#contenttracker-fetchcontentdetails-l2-lambda-852b98f00350dbcb07efe1ff2bc71eec"><span><code>ContentTracker::_fetchContentDetails::__l2::&lt;lambda_852b98f00350dbcb07efe1ff2bc71eec&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContentTracker *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;void __cdecl(bool)&gt;</code></td><td>callback</td></tr><tr><td>72</td><td>(16) <code>std::weak_ptr&lt;bool&gt;</code></td><td>weakExistence</td></tr></tbody></table><h3 id="contenttracker-importlegacymusicpack-l2-lambda-e71312bd262726470a6492efa540d394" tabindex="-1"><a class="header-anchor" href="#contenttracker-importlegacymusicpack-l2-lambda-e71312bd262726470a6492efa540d394"><span><code>ContentTracker::_importLegacyMusicPack::__l2::&lt;lambda_e71312bd262726470a6492efa540d394&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContentTracker *const</code></td><td>__this</td></tr><tr><td>8</td><td>(1040) <code>const Core::PathBuffer&lt;Core::StackString&lt;char,1024&gt; &gt;</code></td><td>musicTargetPath</td></tr><tr><td>1048</td><td>(16) <code>std::shared_ptr&lt;enum Core::ZipUtils::UnzipResult&gt;</code></td><td>sharedErrorCode</td></tr></tbody></table><h3 id="contenttracker-importlegacymusicpack-l2-lambda-4ae52eb2e663e20b64225feacde9ef21" tabindex="-1"><a class="header-anchor" href="#contenttracker-importlegacymusicpack-l2-lambda-4ae52eb2e663e20b64225feacde9ef21"><span><code>ContentTracker::_importLegacyMusicPack::__l2::&lt;lambda_4ae52eb2e663e20b64225feacde9ef21&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1040) <code>const Core::PathBuffer&lt;Core::StackString&lt;char,1024&gt; &gt;</code></td><td>fileToImport</td></tr><tr><td>1040</td><td>(1040) <code>const Core::PathBuffer&lt;Core::StackString&lt;char,1024&gt; &gt;</code></td><td>musicTargetPath</td></tr><tr><td>2080</td><td>(16) <code>std::shared_ptr&lt;enum Core::ZipUtils::UnzipResult&gt;</code></td><td>sharedErrorCode</td></tr></tbody></table><h3 id="contentacquisition-downloadhistory" tabindex="-1"><a class="header-anchor" href="#contentacquisition-downloadhistory"><span><code>ContentAcquisition::DownloadHistory</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>unsigned __int64</code></td><td>mDownloadSize</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>mHasDownloadSize</td></tr><tr><td>12</td><td>(4) <code>_BYTE[4]</code></td><td>mStatus</td></tr><tr><td>16</td><td>(32) <code>std::string</code></td><td>mTitle</td></tr><tr><td>48</td><td>(1) <code>bool</code></td><td>mHasTitle</td></tr></tbody></table><h3 id="core-callbacklisteners-int-enum-social-signinresult-listener" tabindex="-1"><a class="header-anchor" href="#core-callbacklisteners-int-enum-social-signinresult-listener"><span><code>Core::CallbackListeners&lt;int,enum Social::SignInResult&gt;::Listener</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;bool&gt;</code></td><td>mExistenceTracker</td></tr><tr><td>16</td><td>(64) <code>std::function&lt;void __cdecl(int,enum Social::SignInResult)&gt;</code></td><td>mCallback</td></tr><tr><td>80</td><td>(1) <code>bool</code></td><td>mShouldCheckExistence</td></tr></tbody></table><h3 id="csha1" tabindex="-1"><a class="header-anchor" href="#csha1"><span><code>CSHA1</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(20) <code>unsigned int[5]</code></td><td>m_state</td></tr><tr><td>20</td><td>(8) <code>unsigned int[2]</code></td><td>m_count</td></tr><tr><td>28</td><td>(4) <code>unsigned int[1]</code></td><td>m_reserved0</td></tr><tr><td>32</td><td>(64) <code>unsigned __int8[64]</code></td><td>m_buffer</td></tr><tr><td>96</td><td>(20) <code>unsigned __int8[20]</code></td><td>m_digest</td></tr><tr><td>116</td><td>(12) <code>unsigned int[3]</code></td><td>m_reserved1</td></tr><tr><td>128</td><td>(64) <code>unsigned __int8[64]</code></td><td>m_workspace</td></tr><tr><td>192</td><td>(8) <code>SHA1_WORKSPACE_BLOCK *</code></td><td>m_block</td></tr></tbody></table><h3 id="cloudsavesystemwrapper-issettingsoutofdate-l13-lambda-c97df555e43ec3a5e05f628f8af02513" tabindex="-1"><a class="header-anchor" href="#cloudsavesystemwrapper-issettingsoutofdate-l13-lambda-c97df555e43ec3a5e05f628f8af02513"><span><code>CloudSaveSystemWrapper::isSettingsOutOfDate::__l13::&lt;lambda_c97df555e43ec3a5e05f628f8af02513&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::function&lt;void __cdecl(Core::Result,bool)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="cloudsavesystemwrapper-acquiresettingsasync-l13-lambda-7bb126be8a3e79d11e6699d2a94b7bda" tabindex="-1"><a class="header-anchor" href="#cloudsavesystemwrapper-acquiresettingsasync-l13-lambda-7bb126be8a3e79d11e6699d2a94b7bda"><span><code>CloudSaveSystemWrapper::acquireSettingsAsync::__l13::&lt;lambda_7bb126be8a3e79d11e6699d2a94b7bda&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::weak_ptr&lt;Social::User&gt;</code></td><td>weakUser</td></tr><tr><td>16</td><td>(64) <code>std::function&lt;void __cdecl(Core::Result)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="cdscopedevent" tabindex="-1"><a class="header-anchor" href="#cdscopedevent"><span><code>CDScopedEvent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>_BYTE[2]</code></td><td>mTag</td></tr><tr><td>2</td><td>(2) <code>_BYTE[2]</code></td><td>mTagEnd</td></tr></tbody></table><h3 id="concurrency-details-makevoidtounitfunc-l2-lambda-052e919cc0e5399df76dff3972c0cac1" tabindex="-1"><a class="header-anchor" href="#concurrency-details-makevoidtounitfunc-l2-lambda-052e919cc0e5399df76dff3972c0cac1"><span><code>Concurrency::details::_MakeVoidToUnitFunc::__l2::&lt;lambda_052e919cc0e5399df76dff3972c0cac1&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>const std::function&lt;void __cdecl(void)&gt;</code></td><td>_Func</td></tr></tbody></table><h3 id="concurrency-details-defaultppltaskscheduler" tabindex="-1"><a class="header-anchor" href="#concurrency-details-defaultppltaskscheduler"><span><code>Concurrency::details::_DefaultPPLTaskScheduler</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Concurrency::scheduler_interface</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="concurrency-scheduler-interface" tabindex="-1"><a class="header-anchor" href="#concurrency-scheduler-interface"><span><code>Concurrency::scheduler_interface</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Concurrency::scheduler_interface_vtbl *</code></td><td>__vftable</td></tr></tbody></table><h3 id="concurrency-details-task-impl-base-schedulecontinuationtask-l5-lambda-713ee8bbd6b08550d59c52695cab5ce3-l8-lambda-f25c37099038263181b5186a3fa41b37" tabindex="-1"><a class="header-anchor" href="#concurrency-details-task-impl-base-schedulecontinuationtask-l5-lambda-713ee8bbd6b08550d59c52695cab5ce3-l8-lambda-f25c37099038263181b5186a3fa41b37"><span><code>Concurrency::details::_Task_impl_base::_ScheduleContinuationTask::__l5::&lt;lambda_713ee8bbd6b08550d59c52695cab5ce3&gt;::()::__l8::&lt;lambda_f25c37099038263181b5186a3fa41b37&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Concurrency::details::_ContinuationTaskHandleBase *</code></td><td>_PTaskHandle</td></tr><tr><td>8</td><td>(16) <code>std::shared_ptr&lt;Concurrency::details::_Task_impl_base&gt;</code></td><td>_TaskImplPtr</td></tr></tbody></table><h3 id="concurrency-invalid-operation" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-operation"><span><code>Concurrency::invalid_operation</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::exception</code></td><td>baseclass_0</td></tr></tbody></table><h3 id="cg-details-worktoken-aslifetime-l2-lambda-89b2dae39f23600ad3e66c7a2b82fa2b" tabindex="-1"><a class="header-anchor" href="#cg-details-worktoken-aslifetime-l2-lambda-89b2dae39f23600ad3e66c7a2b82fa2b"><span><code>cg::details::WorkToken::asLifetime::__l2::&lt;lambda_89b2dae39f23600ad3e66c7a2b82fa2b&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;cg::details::WorkToken&gt;</code></td><td>ptrHandle</td></tr><tr><td>16</td><td>(64) <code>std::function&lt;void __cdecl(void)&gt;</code></td><td>finalizeCallback</td></tr></tbody></table><h3 id="commandlistqueue-generateasync-l5-lambda-7ffb9bb526d84acb0ee651a3ebd1913c" tabindex="-1"><a class="header-anchor" href="#commandlistqueue-generateasync-l5-lambda-7ffb9bb526d84acb0ee651a3ebd1913c"><span><code>CommandListQueue::generateAsync::__l5::&lt;lambda_7ffb9bb526d84acb0ee651a3ebd1913c&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>CommandListQueue *const</code></td><td>__this</td></tr><tr><td>8</td><td>(64) <code>std::function&lt;void __cdecl(CommandListTaskContext &amp;)&gt;</code></td><td>func</td></tr></tbody></table><h3 id="cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-execute-l2-lambda-2cf6a093770e7d9b1aecca19f5efb284" tabindex="-1"><a class="header-anchor" href="#cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-execute-l2-lambda-2cf6a093770e7d9b1aecca19f5efb284"><span><code>cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;::execute::__l2::&lt;lambda_2cf6a093770e7d9b1aecca19f5efb284&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;gsl::final_action&lt;std::function&lt;void __cdecl(void)&gt; &gt; &gt;</code></td><td>token</td></tr><tr><td>16</td><td>(64) <code>const std::function&lt;void __cdecl(dragon::rendering::RenderContext &amp;)&gt;</code></td><td>callback</td></tr></tbody></table><h3 id="cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-ctor-l2-lambda-6874d52efc76d8cff42ccf8c811d2193" tabindex="-1"><a class="header-anchor" href="#cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-ctor-l2-lambda-6874d52efc76d8cff42ccf8c811d2193"><span><code>cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;::{ctor}::__l2::&lt;lambda_6874d52efc76d8cff42ccf8c811d2193&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt; *const</code></td><td>__this</td></tr></tbody></table><h3 id="core-cpuringbufferallocator-dragon-frameobject-prepareddraw-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-dragon-frameobject-prepareddraw-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;dragon::frameobject::PreparedDraw,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::CheckedRingBuffer&lt;2,0&gt; *</code></td><td>mBufferInstance</td></tr></tbody></table><h3 id="core-cpuringbufferallocator-dragon-materials-materialuniformoverrides-uniformpair-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-dragon-materials-materialuniformoverrides-uniformpair-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;dragon::materials::MaterialUniformOverrides::UniformPair,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::CheckedRingBuffer&lt;2,0&gt; *</code></td><td>mBufferInstance</td></tr></tbody></table><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-blittaskcontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-blittaskcontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::BlitTaskContext,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(224) <code>cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::BlitTaskContext&gt;</code></td><td>baseclass_0</td></tr><tr><td>224</td><td>(24) <code>cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></td><td>mDependencies</td></tr></tbody></table><h3 id="cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-blittaskcontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-blittaskcontext"><span><code>cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,dragon::rendering::modules::BlitTaskContext&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>cg::taskorder::TaskBuilder&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt; &gt;</code></td><td>baseclass_0</td></tr><tr><td>32</td><td>(128) <code>dragon::rendering::modules::BlitTaskContext</code></td><td>mContext</td></tr><tr><td>160</td><td>(64) <code>std::function&lt;void __cdecl(dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt; const &amp;,dragon::rendering::modules::BlitTaskContext const &amp;)&gt;</code></td><td>mAction</td></tr></tbody></table><h3 id="cg-taskorder-taskbuilder-dragon-framegraph-executioncontext-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilder-dragon-framegraph-executioncontext-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilder&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mName</td></tr></tbody></table><h3 id="cg-math-rect-unsigned-short" tabindex="-1"><a class="header-anchor" href="#cg-math-rect-unsigned-short"><span><code>cg::math::Rect&lt;unsigned short&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>unsigned __int16</code></td><td>mX</td></tr><tr><td>2</td><td>(2) <code>unsigned __int16</code></td><td>mY</td></tr><tr><td>4</td><td>(2) <code>unsigned __int16</code></td><td>mWidth</td></tr><tr><td>6</td><td>(2) <code>unsigned __int16</code></td><td>mHeight</td></tr></tbody></table><h3 id="cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"><span><code>cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::tuple&lt;dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></td><td>mDependencies</td></tr></tbody></table><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(96) <code>cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void&gt;</code></td><td>baseclass_0</td></tr><tr><td>96</td><td>(56) <code>cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></td><td>mDependencies</td></tr></tbody></table><h3 id="cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void"><span><code>cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>cg::taskorder::TaskBuilder&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt; &gt;</code></td><td>baseclass_0</td></tr><tr><td>32</td><td>(64) <code>std::function&lt;void __cdecl(dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt; const &amp;)&gt;</code></td><td>mAction</td></tr></tbody></table><h3 id="cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"><span><code>cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>std::tuple&lt;dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></td><td>mDependencies</td></tr></tbody></table><h3 id="core-cpuringbufferallocator-std-pair-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-const-dragon-framegraph-detail-linkingcontext-dragon-rendering-rendercontext-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-std-pair-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-const-dragon-framegraph-detail-linkingcontext-dragon-rendering-rendercontext-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;std::pair&lt;dragon::framegraph::detail::AbstractPass&lt;dragon::rendering::RenderContext&gt; const *,dragon::framegraph::detail::LinkingContext&lt;dragon::rendering::RenderContext&gt; *&gt;,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::CheckedRingBuffer&lt;2,0&gt; *</code></td><td>mBufferInstance</td></tr></tbody></table><h3 id="core-cpuringbufferallocator-glm-tvec4-float-0-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-glm-tvec4-float-0-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;glm::tvec4&lt;float,0&gt;,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::CheckedRingBuffer&lt;2,0&gt; *</code></td><td>mBufferInstance</td></tr></tbody></table><h3 id="core-cpuringbufferallocator-glm-tmat3x3-float-0-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-glm-tmat3x3-float-0-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;glm::tmat3x3&lt;float,0&gt;,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::CheckedRingBuffer&lt;2,0&gt; *</code></td><td>mBufferInstance</td></tr></tbody></table><h3 id="core-cpuringbufferallocator-glm-tmat4x4-float-0-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-glm-tmat4x4-float-0-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;glm::tmat4x4&lt;float,0&gt;,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::CheckedRingBuffer&lt;2,0&gt; *</code></td><td>mBufferInstance</td></tr></tbody></table><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(96) <code>cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void&gt;</code></td><td>baseclass_0</td></tr><tr><td>96</td><td>(72) <code>cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></td><td>mDependencies</td></tr></tbody></table><h3 id="cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"><span><code>cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(72) <code>std::tuple&lt;dragon::framegraph::dependency::BindFramebufferDepth&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindMaterialTexture&lt;dragon::rendering::RenderContext&gt;,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></td><td>mDependencies</td></tr></tbody></table><h3 id="cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"><span><code>cg::taskorder::TaskBuilderWithActionAndDependencies&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void,dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(96) <code>cg::taskorder::TaskBuilderWithAction&lt;dragon::framegraph::ExecutionContext&lt;dragon::rendering::RenderContext&gt;,void&gt;</code></td><td>baseclass_0</td></tr><tr><td>96</td><td>(24) <code>cg::taskorder::DependencyBuilder&lt;dragon::framegraph::dependency::BindFramebufferColor&lt;dragon::rendering::RenderContext&gt; &gt;</code></td><td>mDependencies</td></tr></tbody></table><h3 id="core-cpuringbufferallocator-dragon-frameobject-scenelightinginformation-pointlight-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-dragon-frameobject-scenelightinginformation-pointlight-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;dragon::frameobject::SceneLightingInformation::PointLight,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::CheckedRingBuffer&lt;2,0&gt; *</code></td><td>mBufferInstance</td></tr></tbody></table><h3 id="cg-texturemetadata" tabindex="-1"><a class="header-anchor" href="#cg-texturemetadata"><span><code>cg::TextureMetaData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>cg::TextureMetaData::FilterMode</code></td><td>mFilterMin</td></tr><tr><td>4</td><td>(4) <code>cg::TextureMetaData::FilterMode</code></td><td>mFilterMag</td></tr><tr><td>8</td><td>(4) <code>cg::TextureMetaData::FilterMode</code></td><td>mFilterMip</td></tr><tr><td>12</td><td>(4) <code>cg::TextureMetaData::ColorSpace</code></td><td>mColorSpace</td></tr><tr><td>16</td><td>(4) <code>cg::TextureMetaData::Dimension</code></td><td>mDimension</td></tr><tr><td>20</td><td>(4) <code>cg::TextureMetaData::WrapMode</code></td><td>mWrapU</td></tr><tr><td>24</td><td>(4) <code>cg::TextureMetaData::WrapMode</code></td><td>mWrapV</td></tr><tr><td>28</td><td>(4) <code>int</code></td><td>mNumSlices</td></tr></tbody></table><h3 id="chunkrenderobjectcollection-addtochunkqueue-l2-lambda-4669a033a94b2cbc882de43740c3bcf3" tabindex="-1"><a class="header-anchor" href="#chunkrenderobjectcollection-addtochunkqueue-l2-lambda-4669a033a94b2cbc882de43740c3bcf3"><span><code>ChunkRenderObjectCollection::addToChunkQueue::__l2::&lt;lambda_4669a033a94b2cbc882de43740c3bcf3&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="chunkrenderdata" tabindex="-1"><a class="header-anchor" href="#chunkrenderdata"><span><code>ChunkRenderData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>glm::tvec3&lt;int,0&gt;</code></td><td>mPosition</td></tr><tr><td>16</td><td>(8) <code>long double</code></td><td>mReadyTimeDiff</td></tr><tr><td>24</td><td>(24) <code>const std::variant&lt;std::monostate,std::shared_ptr&lt;mce::IndexBufferContainer&gt;,std::shared_ptr&lt;RenderChunkDirectIndexData&gt; &gt;</code></td><td>mChunkIndices</td></tr><tr><td>48</td><td>(24) <code>const std::variant&lt;std::monostate,std::shared_ptr&lt;mce::Mesh&gt;,std::shared_ptr&lt;RenderChunkDirectVertexData&gt; &gt;</code></td><td>mChunkMesh</td></tr><tr><td>72</td><td>(16) <code>gsl::span&lt;mce::PointLight const ,-1&gt;</code></td><td>mPointLights</td></tr></tbody></table><h3 id="camerashakeevent" tabindex="-1"><a class="header-anchor" href="#camerashakeevent"><span><code>CameraShakeEvent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>float</code></td><td>mIntensity</td></tr><tr><td>4</td><td>(4) <code>float</code></td><td>mDuration</td></tr></tbody></table><h3 id="camerashakesystem-tick-l2-lambda-ff1179873d2d698a099b81d15231fa79" tabindex="-1"><a class="header-anchor" href="#camerashakesystem-tick-l2-lambda-ff1179873d2d698a099b81d15231fa79"><span><code>CameraShakeSystem::tick::__l2::&lt;lambda_ff1179873d2d698a099b81d15231fa79&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>CameraShakeSystem *const</code></td><td>__this</td></tr></tbody></table><h3 id="commandparameterdata" tabindex="-1"><a class="header-anchor" href="#commandparameterdata"><span><code>CommandParameterData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>typeid_t&lt;CommandRegistry&gt;</code></td><td>mTypeIndex</td></tr><tr><td>8</td><td>(8) <code>bool (__fastcall *)(CommandRegistry *this, void *, const CommandRegistry::ParseToken *, const CommandOrigin *, int, std::string *, std::vector&lt;std::string&gt; *)</code></td><td>mParse</td></tr><tr><td>16</td><td>(32) <code>std::string</code></td><td>mName</td></tr><tr><td>48</td><td>(8) <code>const char *</code></td><td>mEnumNameOrPostfix</td></tr><tr><td>56</td><td>(4) <code>int</code></td><td>mEnumOrPostfixSymbol</td></tr><tr><td>60</td><td>(4) <code>CommandParameterDataType</code></td><td>mParamType</td></tr><tr><td>64</td><td>(4) <code>int</code></td><td>mOffset</td></tr><tr><td>68</td><td>(4) <code>int</code></td><td>mSetOffset</td></tr><tr><td>72</td><td>(1) <code>bool</code></td><td>mIsOptional</td></tr><tr><td>73</td><td>(1) <code>CommandParameterOption</code></td><td>mOptions</td></tr></tbody></table><h3 id="commandselectorresults-player" tabindex="-1"><a class="header-anchor" href="#commandselectorresults-player"><span><code>CommandSelectorResults&lt;Player&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;std::vector&lt;Actor *&gt; &gt;</code></td><td>mTargets</td></tr></tbody></table><h3 id="commandoutputparameter" tabindex="-1"><a class="header-anchor" href="#commandoutputparameter"><span><code>CommandOutputParameter</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>mString</td></tr><tr><td>32</td><td>(4) <code>int</code></td><td>mCount</td></tr></tbody></table><h3 id="chunkloadedrequest" tabindex="-1"><a class="header-anchor" href="#chunkloadedrequest"><span><code>ChunkLoadedRequest</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>AreaType</code></td><td>mAreaType</td></tr><tr><td>4</td><td>(48) <code>Bounds</code></td><td>mBounds</td></tr><tr><td>56</td><td>(32) <code>std::string</code></td><td>mTickingAreaName</td></tr><tr><td>88</td><td>(32) <code>std::string</code></td><td>mSerializationId</td></tr><tr><td>120</td><td>(8) <code>std::unique_ptr&lt;IChunkLoadedAction&gt;</code></td><td>mChunkLoadedAction</td></tr></tbody></table><h3 id="commandareafactory" tabindex="-1"><a class="header-anchor" href="#commandareafactory"><span><code>CommandAreaFactory</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Dimension *</code></td><td>mDimension</td></tr></tbody></table><h3 id="cg-texturesetlayerdefinition" tabindex="-1"><a class="header-anchor" href="#cg-texturesetlayerdefinition"><span><code>cg::TextureSetLayerDefinition</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>Bedrock::EnableNonOwnerReferences</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(208) <code>std::variant&lt;ResourceLocationPair,ColorChannel,mce::Color&gt;</code></td><td>mData</td></tr><tr><td>224</td><td>(4) <code>cg::TextureSetLayerType</code></td><td>mLayerType</td></tr></tbody></table><h3 id="componentitem-validateserverschemaandinititem-l2-lambda-8fbf7210d948bc9a2c7c196ed13498ff" tabindex="-1"><a class="header-anchor" href="#componentitem-validateserverschemaandinititem-l2-lambda-8fbf7210d948bc9a2c7c196ed13498ff"><span><code>ComponentItem::_validateServerSchemaAndInitItem::__l2::&lt;lambda_8fbf7210d948bc9a2c7c196ed13498ff&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ComponentItem *const</code></td><td>__this</td></tr><tr><td>8</td><td>(112) <code>SemVersion</code></td><td>version</td></tr></tbody></table><h3 id="componentitem-validateclientschemaandinititem-l2-lambda-e04caa0b9c3fce21a3adffae430565da" tabindex="-1"><a class="header-anchor" href="#componentitem-validateclientschemaandinititem-l2-lambda-e04caa0b9c3fce21a3adffae430565da"><span><code>ComponentItem::_validateClientSchemaAndInitItem::__l2::&lt;lambda_e04caa0b9c3fce21a3adffae430565da&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ComponentItem *const</code></td><td>__this</td></tr><tr><td>8</td><td>(112) <code>SemVersion</code></td><td>version</td></tr></tbody></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-4b0d6bde792ed619e67322018f9b43c7" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-4b0d6bde792ed619e67322018f9b43c7"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_4b0d6bde792ed619e67322018f9b43c7&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-646300c760a21a5dee87bd50ffc76f84" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-646300c760a21a5dee87bd50ffc76f84"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_646300c760a21a5dee87bd50ffc76f84&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-bde458400d5e0c936f319b6fbc51f7ea" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-bde458400d5e0c936f319b6fbc51f7ea"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_bde458400d5e0c936f319b6fbc51f7ea&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-08a8fb2c819f7557ca2eb39a18b10555" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-08a8fb2c819f7557ca2eb39a18b10555"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_08a8fb2c819f7557ca2eb39a18b10555&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-7ac0608cb5cbb757eac814257996d998" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-7ac0608cb5cbb757eac814257996d998"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_7ac0608cb5cbb757eac814257996d998&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-27740b06e312776918dffed8bff42b16" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-27740b06e312776918dffed8bff42b16"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_27740b06e312776918dffed8bff42b16&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-6bba8aa0feff95e899fc6a8a254ef7bc" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-6bba8aa0feff95e899fc6a8a254ef7bc"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_6bba8aa0feff95e899fc6a8a254ef7bc&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-700e819f7949a3cf2c4a087a7587af4f" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-700e819f7949a3cf2c4a087a7587af4f"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_700e819f7949a3cf2c4a087a7587af4f&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-cb4ad2fefaa769f49c3ee0dd42da1168" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-cb4ad2fefaa769f49c3ee0dd42da1168"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_cb4ad2fefaa769f49c3ee0dd42da1168&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-5d561c02c26be577f9c5dd22c1d3cc29" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-5d561c02c26be577f9c5dd22c1d3cc29"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_5d561c02c26be577f9c5dd22c1d3cc29&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-d887d12a5e8c683324eafb3aff797194" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-d887d12a5e8c683324eafb3aff797194"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_d887d12a5e8c683324eafb3aff797194&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-2ae06341078d5910279305cbe94f0403" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-2ae06341078d5910279305cbe94f0403"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_2ae06341078d5910279305cbe94f0403&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-d430a32fa966086497fdee2689d5f072" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-d430a32fa966086497fdee2689d5f072"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_d430a32fa966086497fdee2689d5f072&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-2e61ce2ecee42b8c801d2a0fce372345" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-2e61ce2ecee42b8c801d2a0fce372345"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_2e61ce2ecee42b8c801d2a0fce372345&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-f11da43554209a966dd612f49a500c13" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-f11da43554209a966dd612f49a500c13"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_f11da43554209a966dd612f49a500c13&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-d138d2cc7881ec912693e17053aa36d3" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-d138d2cc7881ec912693e17053aa36d3"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_d138d2cc7881ec912693e17053aa36d3&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-08c154647375c28c098b616470505c81" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-08c154647375c28c098b616470505c81"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_08c154647375c28c098b616470505c81&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-8d2b9f4c977ef7bcf18b00933e8d133c" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-8d2b9f4c977ef7bcf18b00933e8d133c"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_8d2b9f4c977ef7bcf18b00933e8d133c&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-720d686375472b328e72c11b0a4529c9" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-720d686375472b328e72c11b0a4529c9"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_720d686375472b328e72c11b0a4529c9&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-f00f608ba659db531edffcb30f33581b" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-f00f608ba659db531edffcb30f33581b"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_f00f608ba659db531edffcb30f33581b&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cerealitemcomponentfactory-registercomponent-l2-lambda-4f2170e72cbb54e6a6a019874716cd58" tabindex="-1"><a class="header-anchor" href="#cerealitemcomponentfactory-registercomponent-l2-lambda-4f2170e72cbb54e6a6a019874716cd58"><span><code>CerealItemComponentFactory::registerComponent::__l2::&lt;lambda_4f2170e72cbb54e6a6a019874716cd58&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="cappedsurfaceattributes" tabindex="-1"><a class="header-anchor" href="#cappedsurfaceattributes"><span><code>CappedSurfaceAttributes</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;CappedSurfaceAttributes::MaterialLayer&gt;</code></td><td>mFloorMaterials</td></tr><tr><td>24</td><td>(24) <code>std::vector&lt;CappedSurfaceAttributes::MaterialLayer&gt;</code></td><td>mCeilingMaterials</td></tr><tr><td>48</td><td>(8) <code>const Block *</code></td><td>mSeaMaterial</td></tr><tr><td>56</td><td>(8) <code>const Block *</code></td><td>mFoundationMaterial</td></tr><tr><td>64</td><td>(8) <code>const Block *</code></td><td>mBeachMaterial</td></tr><tr><td>72</td><td>(1) <code>bool</code></td><td>mIsInitialized</td></tr></tbody></table><h3 id="commandregistry-parser" tabindex="-1"><a class="header-anchor" href="#commandregistry-parser"><span><code>CommandRegistry::Parser</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const CommandRegistry *</code></td><td>mRegistry</td></tr><tr><td>8</td><td>(8) <code>const CommandRegistry::ParseTable *</code></td><td>mParseTable</td></tr><tr><td>16</td><td>(40) <code>std::deque&lt;std::pair&lt;CommandRegistry::Symbol,CommandRegistry::ParseToken *&gt;&gt;</code></td><td>mStack</td></tr><tr><td>56</td><td>(32) <code>CommandRegistry::LexicalToken</code></td><td>mNext</td></tr><tr><td>88</td><td>(32) <code>std::string</code></td><td>mInput</td></tr><tr><td>120</td><td>(8) <code>std::unique_ptr&lt;CommandRegistry::ParseToken&gt;</code></td><td>mRoot</td></tr><tr><td>128</td><td>(32) <code>std::string</code></td><td>mError</td></tr><tr><td>160</td><td>(24) <code>std::vector&lt;std::string&gt;</code></td><td>mErrorParams</td></tr><tr><td>184</td><td>(4) <code>int</code></td><td>mVersion</td></tr><tr><td>188</td><td>(1) <code>bool</code></td><td>mGenerateParams</td></tr><tr><td>189</td><td>(1) <code>bool</code></td><td>mBreakAtEnd</td></tr></tbody></table><h3 id="commandregistry-lexicaltoken" tabindex="-1"><a class="header-anchor" href="#commandregistry-lexicaltoken"><span><code>CommandRegistry::LexicalToken</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const char *</code></td><td>mText</td></tr><tr><td>8</td><td>(4) <code>unsigned int</code></td><td>mLength</td></tr><tr><td>12</td><td>(4) <code>CommandRegistry::Symbol</code></td><td>mType</td></tr><tr><td>16</td><td>(4) <code>CommandRegistry::Symbol</code></td><td>mIdentifierInfo</td></tr><tr><td>24</td><td>(8) <code>const CommandRegistry *</code></td><td>mRegistry</td></tr></tbody></table><h3 id="contextaccessor" tabindex="-1"><a class="header-anchor" href="#contextaccessor"><span><code>ContextAccessor</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>unsigned __int16</code></td><td>mTypeId</td></tr><tr><td>8</td><td>(8) <code>std::unique_ptr&lt;ContextAccessor::TypeBase&gt;</code></td><td>mContext</td></tr></tbody></table><h3 id="compoundtagvariant" tabindex="-1"><a class="header-anchor" href="#compoundtagvariant"><span><code>CompoundTagVariant</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(48) <code>std::variant&lt;EndTag,ByteTag,ShortTag,IntTag,Int64Tag,FloatTag,DoubleTag,ByteArrayTag,StringTag,ListTag,CompoundTag,IntArrayTag&gt;</code></td><td>mTagStorage</td></tr></tbody></table><h3 id="compoundtagvariant-copy-l2-lambda-847acbaa2673dfafb4b947487bdf32fd" tabindex="-1"><a class="header-anchor" href="#compoundtagvariant-copy-l2-lambda-847acbaa2673dfafb4b947487bdf32fd"><span><code>CompoundTagVariant::copy::__l2::&lt;lambda_847acbaa2673dfafb4b947487bdf32fd&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="classroommodenetworkhandler-onwebsocketrequest-l13-lambda-f8f06f33a691ac69d078ed77b77cf8f8" tabindex="-1"><a class="header-anchor" href="#classroommodenetworkhandler-onwebsocketrequest-l13-lambda-f8f06f33a691ac69d078ed77b77cf8f8"><span><code>ClassroomModeNetworkHandler::onWebsocketRequest::__l13::&lt;lambda_f8f06f33a691ac69d078ed77b77cf8f8&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ClassroomModeNetworkHandler *const</code></td><td>__this</td></tr><tr><td>8</td><td>(32) <code>const std::string</code></td><td>serverAddress</td></tr><tr><td>40</td><td>(64) <code>std::function&lt;void __cdecl(void)&gt;</code></td><td>errorCallback</td></tr></tbody></table><h3 id="classroommodenetworkhandler-connect-l2-lambda-4c552053559105a51c96d1cc72ebc426" tabindex="-1"><a class="header-anchor" href="#classroommodenetworkhandler-connect-l2-lambda-4c552053559105a51c96d1cc72ebc426"><span><code>ClassroomModeNetworkHandler::_connect::__l2::&lt;lambda_4c552053559105a51c96d1cc72ebc426&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ClassroomModeNetworkHandler *const</code></td><td>__this</td></tr><tr><td>8</td><td>(32) <code>const std::string</code></td><td>address</td></tr></tbody></table><h3 id="commandorigindata" tabindex="-1"><a class="header-anchor" href="#commandorigindata"><span><code>CommandOriginData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>CommandOriginType</code></td><td>mType</td></tr><tr><td>8</td><td>(16) <code>mce::UUID</code></td><td>mUUID</td></tr><tr><td>24</td><td>(32) <code>std::string</code></td><td>mRequestId</td></tr><tr><td>56</td><td>(8) <code>__int64</code></td><td>mPlayerId</td></tr></tbody></table><h3 id="commandoutputmessage" tabindex="-1"><a class="header-anchor" href="#commandoutputmessage"><span><code>CommandOutputMessage</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>CommandOutputMessageType</code></td><td>mType</td></tr><tr><td>8</td><td>(32) <code>std::string</code></td><td>mMessageId</td></tr><tr><td>40</td><td>(24) <code>std::vector&lt;std::string&gt;</code></td><td>mParams</td></tr></tbody></table><h3 id="craftingdataentry" tabindex="-1"><a class="header-anchor" href="#craftingdataentry"><span><code>CraftingDataEntry</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_ptr&lt;Recipe&gt;</code></td><td>mRecipe</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mItemData</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>mItemAux</td></tr><tr><td>16</td><td>(48) <code>HashedString</code></td><td>mTag</td></tr><tr><td>64</td><td>(240) <code>ItemInstance</code></td><td>mItemResult</td></tr><tr><td>304</td><td>(4) <code>CraftingDataEntryType</code></td><td>mEntryType</td></tr></tbody></table><h3 id="creativeitementry" tabindex="-1"><a class="header-anchor" href="#creativeitementry"><span><code>CreativeItemEntry</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>Bedrock::EnableNonOwnerReferences</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(8) <code>CreativeItemRegistry *</code></td><td>mRegistry</td></tr><tr><td>24</td><td>(4) <code>unsigned int</code></td><td>mGroupIndex</td></tr><tr><td>28</td><td>(4) <code>TypedServerNetId&lt;CreativeItemNetIdTag,unsigned int,0&gt;</code></td><td>mCreativeNetId</td></tr><tr><td>32</td><td>(240) <code>ItemInstance</code></td><td>mItemInstance</td></tr><tr><td>272</td><td>(4) <code>unsigned int</code></td><td>mIndex</td></tr></tbody></table><h3 id="connectiondefinition" tabindex="-1"><a class="header-anchor" href="#connectiondefinition"><span><code>ConnectionDefinition</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>unsigned __int16</code></td><td>ipv4Port</td></tr><tr><td>2</td><td>(2) <code>unsigned __int16</code></td><td>ipv6Port</td></tr><tr><td>4</td><td>(4) <code>ConnectionDefinition::PortBusyFallbackPolicy</code></td><td>fallback</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>maxNumPlayers</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>maxNumConnections</td></tr></tbody></table><h3 id="connector-natpunchinfo" tabindex="-1"><a class="header-anchor" href="#connector-natpunchinfo"><span><code>Connector::NatPunchInfo</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>isValid</td></tr><tr><td>1</td><td>(1) <code>bool</code></td><td>addressIsDirty</td></tr><tr><td>2</td><td>(1) <code>bool</code></td><td>succeeded</td></tr><tr><td>8</td><td>(136) <code>RakNet::SystemAddress</code></td><td>externalAddress</td></tr><tr><td>144</td><td>(4) <code>unsigned int</code></td><td>startPingSentTime</td></tr><tr><td>148</td><td>(4) <code>unsigned int</code></td><td>pingSentTime</td></tr><tr><td>152</td><td>(4) <code>unsigned int</code></td><td>startPongReceivedTime</td></tr><tr><td>156</td><td>(4) <code>unsigned int</code></td><td>pongReceivedTime</td></tr></tbody></table><h3 id="commandblockupdatepacket" tabindex="-1"><a class="header-anchor" href="#commandblockupdatepacket"><span><code>CommandBlockUpdatePacket</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>Packet</code></td><td>baseclass_0</td></tr><tr><td>40</td><td>(12) <code>NetworkBlockPosition</code></td><td>mBlockPos</td></tr><tr><td>52</td><td>(2) <code>_BYTE[2]</code></td><td>mMode</td></tr><tr><td>54</td><td>(1) <code>bool</code></td><td>mRedstoneMode</td></tr><tr><td>55</td><td>(1) <code>bool</code></td><td>mIsConditional</td></tr><tr><td>56</td><td>(8) <code>ActorRuntimeID</code></td><td>mEntityId</td></tr><tr><td>64</td><td>(32) <code>std::string</code></td><td>mCommand</td></tr><tr><td>96</td><td>(32) <code>std::string</code></td><td>mLastOutput</td></tr><tr><td>128</td><td>(32) <code>std::string</code></td><td>mName</td></tr><tr><td>160</td><td>(4) <code>int</code></td><td>mTickDelay</td></tr><tr><td>164</td><td>(1) <code>bool</code></td><td>mTrackOutput</td></tr><tr><td>165</td><td>(1) <code>bool</code></td><td>mExecuteOnFirstTick</td></tr><tr><td>166</td><td>(1) <code>bool</code></td><td>mIsBlock</td></tr></tbody></table><h3 id="clientboundmapitemdatapacket" tabindex="-1"><a class="header-anchor" href="#clientboundmapitemdatapacket"><span><code>ClientboundMapItemDataPacket</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>Packet</code></td><td>baseclass_0</td></tr><tr><td>40</td><td>(24) <code>std::vector&lt;ActorUniqueID&gt;</code></td><td>mMapIds</td></tr><tr><td>64</td><td>(1) <code>char</code></td><td>mScale</td></tr><tr><td>72</td><td>(24) <code>std::vector&lt;std::shared_ptr&lt;MapDecoration&gt;&gt;</code></td><td>mDecorations</td></tr><tr><td>96</td><td>(24) <code>std::vector&lt;MapItemTrackedActor::UniqueId&gt;</code></td><td>mUniqueIds</td></tr><tr><td>120</td><td>(4) <code>int</code></td><td>mStartX</td></tr><tr><td>124</td><td>(4) <code>int</code></td><td>mStartY</td></tr><tr><td>128</td><td>(1) <code>unsigned __int8</code></td><td>mDimension</td></tr><tr><td>132</td><td>(4) <code>int</code></td><td>mWidth</td></tr><tr><td>136</td><td>(4) <code>int</code></td><td>mHeight</td></tr><tr><td>140</td><td>(4) <code>ClientboundMapItemDataPacket::Type</code></td><td>mType</td></tr><tr><td>144</td><td>(24) <code>std::vector&lt;unsigned int&gt;</code></td><td>mMapPixels</td></tr><tr><td>168</td><td>(1) <code>bool</code></td><td>mLocked</td></tr></tbody></table><h3 id="conditionalbandwidthoptimization" tabindex="-1"><a class="header-anchor" href="#conditionalbandwidthoptimization"><span><code>ConditionalBandwidthOptimization</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>float</code></td><td>mMaxOptimizedDistance</td></tr><tr><td>8</td><td>(8) <code>unsigned __int64</code></td><td>mMaxDroppedTicks</td></tr><tr><td>16</td><td>(1) <code>bool</code></td><td>mUseMotionPredictionHints</td></tr><tr><td>24</td><td>(64) <code>ActorFilterGroup</code></td><td>mConditions</td></tr></tbody></table><h3 id="conditionalbandwidthoptimizationcomponent" tabindex="-1"><a class="header-anchor" href="#conditionalbandwidthoptimizationcomponent"><span><code>ConditionalBandwidthOptimizationComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(88) <code>ConditionalBandwidthOptimization</code></td><td>mDefaultValues</td></tr><tr><td>88</td><td>(24) <code>std::vector&lt;ConditionalBandwidthOptimization&gt;</code></td><td>mConditionalValues</td></tr><tr><td>112</td><td>(8) <code>Tick</code></td><td>mLastRequestedValuesTick</td></tr><tr><td>120</td><td>(88) <code>ConditionalBandwidthOptimization</code></td><td>mCachedOptimizationValues</td></tr></tbody></table><h3 id="contenttiermanager-validatorregistry-validatorregistryvalidators" tabindex="-1"><a class="header-anchor" href="#contenttiermanager-validatorregistry-validatorregistryvalidators"><span><code>ContentTierManager::ValidatorRegistry::ValidatorRegistryValidators</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::function&lt;ContentTierIncompatibleReason __cdecl(PackInstance const &amp;,ContentTierInfo const &amp;)&gt;</code></td><td>mFuncPackValidator</td></tr><tr><td>64</td><td>(64) <code>std::function&lt;ContentTierIncompatibleReason __cdecl(SubpackInfo const &amp;,ContentTierInfo const &amp;)&gt;</code></td><td>mFuncSubpackValidator</td></tr></tbody></table><h3 id="crypto-symmetric-symmetric" tabindex="-1"><a class="header-anchor" href="#crypto-symmetric-symmetric"><span><code>Crypto::Symmetric::Symmetric</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Crypto::Symmetric::ISystemInterface</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(8) <code>std::unique_ptr&lt;Crypto::Symmetric::ISystemInterface&gt;</code></td><td>mInterface</td></tr></tbody></table><h3 id="crypto-symmetric-isysteminterface" tabindex="-1"><a class="header-anchor" href="#crypto-symmetric-isysteminterface"><span><code>Crypto::Symmetric::ISystemInterface</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Crypto::Symmetric::ISystemInterface_vtbl *</code></td><td>__vftable</td></tr></tbody></table><h3 id="core-excludedpath" tabindex="-1"><a class="header-anchor" href="#core-excludedpath"><span><code>Core::ExcludedPath</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mPath</td></tr><tr><td>32</td><td>(1) <code>bool</code></td><td>mCopyLooseFile</td></tr></tbody></table><h3 id="core-ziputils-zipsettings" tabindex="-1"><a class="header-anchor" href="#core-ziputils-zipsettings"><span><code>Core::ZipUtils::ZipSettings</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(48) <code>Core::ZipUtils::ZipFileRestrictions</code></td><td>mRestrictions</td></tr><tr><td>48</td><td>(1) <code>bool</code></td><td>mZipDirectoryContents</td></tr><tr><td>49</td><td>(1) <code>bool</code></td><td>mSkipInaccessibleFiles</td></tr><tr><td>52</td><td>(4) <code>int</code></td><td>mCompressionLevel</td></tr><tr><td>56</td><td>(8) <code>IFileAccess *</code></td><td>mFileAccess</td></tr><tr><td>64</td><td>(32) <code>std::string</code></td><td>mPassword</td></tr><tr><td>96</td><td>(4) <code>int</code></td><td>mZip64</td></tr></tbody></table><h3 id="core-filesystem-copyfile-l2-lambda-98acb2cebb3139e7dcaf8bae69363f0a" tabindex="-1"><a class="header-anchor" href="#core-filesystem-copyfile-l2-lambda-98acb2cebb3139e7dcaf8bae69363f0a"><span><code>Core::FileSystem::copyFile::__l2::&lt;lambda_98acb2cebb3139e7dcaf8bae69363f0a&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="core-unzipfile" tabindex="-1"><a class="header-anchor" href="#core-unzipfile"><span><code>Core::UnzipFile</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::unique_ptr&lt;ZlibFileAccessWrapper&gt;</code></td><td>mZipFileSystemWrapper</td></tr><tr><td>8</td><td>(8) <code>std::unique_ptr&lt;Core::UnzipInternals&gt;</code></td><td>mZipFile</td></tr></tbody></table><h3 id="clientblobcache-server-blob" tabindex="-1"><a class="header-anchor" href="#clientblobcache-server-blob"><span><code>ClientBlobCache::Server::Blob</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const unsigned __int64</code></td><td>id</td></tr><tr><td>8</td><td>(32) <code>const std::string</code></td><td>data</td></tr></tbody></table><h3 id="commandintegerrange" tabindex="-1"><a class="header-anchor" href="#commandintegerrange"><span><code>CommandIntegerRange</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>mMinValue</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mMaxValue</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>mInvert</td></tr></tbody></table><h3 id="commandregistry-parseselector-l243-lambda-c6bfa6ab44c8dc5137236fba12271e1d" tabindex="-1"><a class="header-anchor" href="#commandregistry-parseselector-l243-lambda-c6bfa6ab44c8dc5137236fba12271e1d"><span><code>CommandRegistry::parseSelector::__l243::&lt;lambda_c6bfa6ab44c8dc5137236fba12271e1d&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>std::pair&lt;float,float&gt;</code></td><td>xRotation</td></tr></tbody></table><h3 id="commandregistry-signature" tabindex="-1"><a class="header-anchor" href="#commandregistry-signature"><span><code>CommandRegistry::Signature</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>std::string</code></td><td>name</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>description</td></tr><tr><td>64</td><td>(24) <code>std::vector&lt;CommandRegistry::Overload&gt;</code></td><td>overloads</td></tr><tr><td>88</td><td>(1) <code>_BYTE[1]</code></td><td>permissionLevel</td></tr><tr><td>92</td><td>(4) <code>CommandRegistry::Symbol</code></td><td>commandSymbol</td></tr><tr><td>96</td><td>(4) <code>CommandRegistry::Symbol</code></td><td>commandAliasEnum</td></tr><tr><td>100</td><td>(1) <code>CommandFlag</code></td><td>flags</td></tr><tr><td>104</td><td>(4) <code>int</code></td><td>firstRule</td></tr><tr><td>108</td><td>(4) <code>int</code></td><td>firstFactorization</td></tr><tr><td>112</td><td>(4) <code>int</code></td><td>firstOptional</td></tr><tr><td>116</td><td>(1) <code>bool</code></td><td>runnable</td></tr></tbody></table><h3 id="commandlexer" tabindex="-1"><a class="header-anchor" href="#commandlexer"><span><code>CommandLexer</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const std::string *</code></td><td>mInput</td></tr><tr><td>8</td><td>(16) <code>CommandLexer::Token</code></td><td>mToken</td></tr></tbody></table><h3 id="commandlexer-token" tabindex="-1"><a class="header-anchor" href="#commandlexer-token"><span><code>CommandLexer::Token</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const char *</code></td><td>text</td></tr><tr><td>8</td><td>(4) <code>unsigned int</code></td><td>length</td></tr><tr><td>12</td><td>(4) <code>CommandLexer::TokenType</code></td><td>type</td></tr></tbody></table><h3 id="commandregistry-registrystate" tabindex="-1"><a class="header-anchor" href="#commandregistry-registrystate"><span><code>CommandRegistry::RegistryState</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>signatureCount</td></tr><tr><td>4</td><td>(4) <code>unsigned int</code></td><td>enumValueCount</td></tr><tr><td>8</td><td>(4) <code>unsigned int</code></td><td>postfixCount</td></tr><tr><td>12</td><td>(4) <code>unsigned int</code></td><td>enumCount</td></tr><tr><td>16</td><td>(4) <code>unsigned int</code></td><td>factorizationCount</td></tr><tr><td>20</td><td>(4) <code>unsigned int</code></td><td>optionalCount</td></tr><tr><td>24</td><td>(4) <code>unsigned int</code></td><td>ruleCount</td></tr><tr><td>28</td><td>(4) <code>unsigned int</code></td><td>softEnumCount</td></tr><tr><td>32</td><td>(4) <code>unsigned int</code></td><td>constraintCount</td></tr><tr><td>40</td><td>(24) <code>std::vector&lt;unsigned int&gt;</code></td><td>constrainedValueCount</td></tr><tr><td>64</td><td>(24) <code>std::vector&lt;unsigned int&gt;</code></td><td>softEnumValuesCount</td></tr></tbody></table><h3 id="commanditem" tabindex="-1"><a class="header-anchor" href="#commanditem"><span><code>CommandItem</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>$F8070BC88C1447D17F82F88E7F729FB1</code></td><td>___u0</td></tr></tbody></table><h3 id="clonecommand-execute-l2-cloneblockinfo" tabindex="-1"><a class="header-anchor" href="#clonecommand-execute-l2-cloneblockinfo"><span><code>CloneCommand::execute::__l2::CloneBlockInfo</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(12) <code>BlockPos</code></td><td>mPos</td></tr><tr><td>16</td><td>(8) <code>const Block *</code></td><td>mState</td></tr><tr><td>24</td><td>(8) <code>std::unique_ptr&lt;CompoundTag&gt;</code></td><td>mTag</td></tr></tbody></table><h3 id="clientblobcache-server-transferbuilder" tabindex="-1"><a class="header-anchor" href="#clientblobcache-server-transferbuilder"><span><code>ClientBlobCache::Server::TransferBuilder</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(224) <code>ClientBlobCache::Server::ActiveTransfer</code></td><td>mTransfer</td></tr></tbody></table><h3 id="clientblobcache-server-activetransfer" tabindex="-1"><a class="header-anchor" href="#clientblobcache-server-activetransfer"><span><code>ClientBlobCache::Server::ActiveTransfer</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ClientBlobCache::Server::ActiveTransfersManager *</code></td><td>mCache</td></tr><tr><td>8</td><td>(152) <code>NetworkIdentifier</code></td><td>mOwner</td></tr><tr><td>160</td><td>(64) <code>std::unordered_map&lt;unsigned __int64,std::shared_ptr&lt;ClientBlobCache::Server::Blob&gt;&gt;</code></td><td>mIdsWaitingForACK</td></tr></tbody></table><h3 id="chunkpositionanddimension" tabindex="-1"><a class="header-anchor" href="#chunkpositionanddimension"><span><code>ChunkPositionAndDimension</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ChunkPos</code></td><td>mPos</td></tr><tr><td>8</td><td>(4) <code>AutomaticID&lt;Dimension,int&gt;</code></td><td>mType</td></tr></tbody></table><h3 id="containerdescription" tabindex="-1"><a class="header-anchor" href="#containerdescription"><span><code>ContainerDescription</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ComponentDescription</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mSize</td></tr><tr><td>12</td><td>(1) <code>bool</code></td><td>mCanBesiphonedFrom</td></tr><tr><td>13</td><td>(1) <code>bool</code></td><td>mPrivate</td></tr><tr><td>14</td><td>(1) <code>bool</code></td><td>mRestrictToOwner</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>mSlotsPerStrength</td></tr><tr><td>20</td><td>(1) <code>ContainerType</code></td><td>mContainerType</td></tr></tbody></table><h3 id="crashdumpeventdata" tabindex="-1"><a class="header-anchor" href="#crashdumpeventdata"><span><code>CrashDumpEventData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>_BYTE[2]</code></td><td>mTag0</td></tr><tr><td>2</td><td>(2) <code>_BYTE[2]</code></td><td>mTag1</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mEventThreadId</td></tr></tbody></table><h3 id="compoundtagupdaterbuilder-match-l2-lambda-d6e645fd0760b5869a1c1fbc97f375e0" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-match-l2-lambda-d6e645fd0760b5869a1c1fbc97f375e0"><span><code>CompoundTagUpdaterBuilder::match::__l2::&lt;lambda_d6e645fd0760b5869a1c1fbc97f375e0&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>const std::string</code></td><td>tagName</td></tr><tr><td>32</td><td>(32) <code>std::string</code></td><td>pattern</td></tr></tbody></table><h3 id="compoundtagupdaterbuilder-tryedit-l2-lambda-331080c9253f49c0e39d20a115988e3c" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-tryedit-l2-lambda-331080c9253f49c0e39d20a115988e3c"><span><code>CompoundTagUpdaterBuilder::tryEdit::__l2::&lt;lambda_331080c9253f49c0e39d20a115988e3c&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>const std::string</code></td><td>tagName</td></tr><tr><td>32</td><td>(64) <code>std::function&lt;void __cdecl(CompoundTagEditHelper &amp;)&gt;</code></td><td>update</td></tr></tbody></table><h3 id="compoundtagupdaterbuilder-rename-l2-lambda-4bed7a15ca03b6882a582c4103e2a48e" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder-rename-l2-lambda-4bed7a15ca03b6882a582c4103e2a48e"><span><code>CompoundTagUpdaterBuilder::rename::__l2::&lt;lambda_4bed7a15ca03b6882a582c4103e2a48e&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>const std::string</code></td><td>tagName</td></tr><tr><td>32</td><td>(32) <code>const std::string</code></td><td>newTagName</td></tr></tbody></table><h3 id="core-ziputils-zipprogresslist" tabindex="-1"><a class="header-anchor" href="#core-ziputils-zipprogresslist"><span><code>Core::ZipUtils::ZipProgressList</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;std::shared_ptr&lt;Core::ZipUtils::ZipProgress&gt;&gt;</code></td><td>mZipProgress</td></tr><tr><td>24</td><td>(80) <code>std::mutex</code></td><td>mProgressLock</td></tr></tbody></table><h3 id="clientparticleinitializationcomponent" tabindex="-1"><a class="header-anchor" href="#clientparticleinitializationcomponent"><span><code>ClientParticleInitializationComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;ParticleInitializationData&gt;</code></td><td>mParticleInitializationData</td></tr></tbody></table><h3 id="containervalidation-assignvalidationdelegates-l12-lambda-f3de1f01db6586c03466a09e7bf05768" tabindex="-1"><a class="header-anchor" href="#containervalidation-assignvalidationdelegates-l12-lambda-f3de1f01db6586c03466a09e7bf05768"><span><code>ContainerValidation::assignValidationDelegates::__l12::&lt;lambda_f3de1f01db6586c03466a09e7bf05768&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>const ContainerScreenContext</code></td><td>screenContext</td></tr></tbody></table><h3 id="craftablecompounds" tabindex="-1"><a class="header-anchor" href="#craftablecompounds"><span><code>CraftableCompounds</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>CraftableCompounds_vtbl *</code></td><td>__vftable</td></tr><tr><td>8</td><td>(64) <code>std::unordered_map&lt;std::string,ItemStack&gt;</code></td><td>mComponentsToCompound</td></tr><tr><td>72</td><td>(64) <code>std::unordered_map&lt;int,std::vector&lt;ItemStack&gt;&gt;</code></td><td>mCompoundToComponents</td></tr><tr><td>136</td><td>(64) <code>std::unordered_map&lt;std::string,enum LabTableReactionType&gt;</code></td><td>mComponentsToReaction</td></tr><tr><td>200</td><td>(64) <code>std::unordered_map&lt;std::string,enum CompoundContainerType&gt;</code></td><td>mComponentsToContainerOverride</td></tr></tbody></table><h3 id="chemistryingredient" tabindex="-1"><a class="header-anchor" href="#chemistryingredient"><span><code>ChemistryIngredient</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(240) <code>ItemInstance</code></td><td>mItem</td></tr></tbody></table><h3 id="createcontaineritemscope" tabindex="-1"><a class="header-anchor" href="#createcontaineritemscope"><span><code>CreateContainerItemScope</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const SlotData *const</code></td><td>mSrcSlot</td></tr><tr><td>8</td><td>(16) <code>std::shared_ptr&lt;ContainerController&gt;</code></td><td>mCreatedItemContainerController</td></tr><tr><td>24</td><td>(16) <code>ItemStackRequestScope</code></td><td>mItemStackRequestScope</td></tr></tbody></table><h3 id="container" tabindex="-1"><a class="header-anchor" href="#container"><span><code>Container</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Container_vtbl *</code></td><td>__vftable</td></tr><tr><td>8</td><td>(1) <code>ContainerType</code></td><td>mContainerType</td></tr><tr><td>9</td><td>(1) <code>ContainerType</code></td><td>mGameplayContainerType</td></tr><tr><td>16</td><td>(64) <code>std::unordered_set&lt;ContainerContentChangeListener *&gt;</code></td><td>mContentChangeListeners</td></tr><tr><td>80</td><td>(64) <code>std::unordered_set&lt;ContainerSizeChangeListener *&gt;</code></td><td>mSizeChangeListeners</td></tr><tr><td>144</td><td>(40) <code>std::deque&lt;std::function&lt;void __cdecl(Container &amp;,int,ItemStack const &amp;,ItemStack const &amp;)&gt;&gt;</code></td><td>mTransactionContextStack</td></tr><tr><td>184</td><td>(32) <code>std::string</code></td><td>mName</td></tr><tr><td>216</td><td>(1) <code>bool</code></td><td>mCustomName</td></tr><tr><td>220</td><td>(4) <code>TypedRuntimeId&lt;ContainerRuntimeIdTag,unsigned int,0&gt;</code></td><td>mContainerRuntimeId</td></tr></tbody></table><h3 id="containermanagercontroller" tabindex="-1"><a class="header-anchor" href="#containermanagercontroller"><span><code>ContainerManagerController</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ContainerManagerController_vtbl *</code></td><td>__vftable</td></tr><tr><td>8</td><td>(16) <code>std::enable_shared_from_this&lt;ContainerManagerController&gt;</code></td><td>baseclass_8</td></tr><tr><td>24</td><td>(16) <code>std::weak_ptr&lt;ContainerManagerModel&gt;</code></td><td>mContainerManagerModel</td></tr><tr><td>40</td><td>(64) <code>std::unordered_map&lt;std::string,std::shared_ptr&lt;ContainerController&gt;&gt;</code></td><td>mContainers</td></tr><tr><td>104</td><td>(24) <code>std::vector&lt;ContainerSplitControl&gt;</code></td><td>mContainerSplitItemStackItems</td></tr><tr><td>128</td><td>(4) <code>int</code></td><td>mSplitItemRemainder</td></tr><tr><td>132</td><td>(1) <code>bool</code></td><td>mContainerDirty</td></tr><tr><td>133</td><td>(1) <code>bool</code></td><td>mContainersClosed</td></tr></tbody></table><h3 id="chestblocktrypairevent" tabindex="-1"><a class="header-anchor" href="#chestblocktrypairevent"><span><code>ChestBlockTryPairEvent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>const std::shared_ptr&lt;BlockSourceHandle&gt;</code></td><td>mBlockSourceHandle</td></tr><tr><td>16</td><td>(12) <code>const Vec3</code></td><td>mBlockPos</td></tr><tr><td>28</td><td>(12) <code>const Vec3</code></td><td>mOtherBlockPos</td></tr></tbody></table><h3 id="craftingcontainer" tabindex="-1"><a class="header-anchor" href="#craftingcontainer"><span><code>CraftingContainer</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(224) <code>Container</code></td><td>baseclass_0</td></tr><tr><td>224</td><td>(24) <code>std::vector&lt;ItemStack&gt;</code></td><td>mItems</td></tr><tr><td>248</td><td>(4) <code>int</code></td><td>mWidth</td></tr></tbody></table><h3 id="containerweakref" tabindex="-1"><a class="header-anchor" href="#containerweakref"><span><code>ContainerWeakRef</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ActorUniqueID</code></td><td>mContainerActor</td></tr><tr><td>8</td><td>(4) <code>ActorContainerType</code></td><td>mActorContainerType</td></tr><tr><td>12</td><td>(12) <code>BlockPos</code></td><td>mBlockPosition</td></tr><tr><td>24</td><td>(4) <code>TypedRuntimeId&lt;ContainerRuntimeIdTag,unsigned int,0&gt;</code></td><td>mContainerRuntimeId</td></tr></tbody></table><h3 id="containerweakrefdata" tabindex="-1"><a class="header-anchor" href="#containerweakrefdata"><span><code>ContainerWeakRefData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Container *</code></td><td>mContainer</td></tr><tr><td>8</td><td>(8) <code>Actor *</code></td><td>mActor</td></tr><tr><td>16</td><td>(8) <code>BlockActor *</code></td><td>mBlockActor</td></tr></tbody></table><h3 id="containerscreencontextcomponent" tabindex="-1"><a class="header-anchor" href="#containerscreencontextcomponent"><span><code>ContainerScreenContextComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>ContainerScreenContext</code></td><td>mContext</td></tr></tbody></table><h3 id="connectioncomponent" tabindex="-1"><a class="header-anchor" href="#connectioncomponent"><span><code>ConnectionComponent</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::set&lt;HashedString&gt;</code></td><td>mConnection</td></tr></tbody></table><h3 id="compoundtagupdaterbuilder" tabindex="-1"><a class="header-anchor" href="#compoundtagupdaterbuilder"><span><code>CompoundTagUpdaterBuilder</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>CompoundTagUpdater *</code></td><td>mUpdater</td></tr></tbody></table><h3 id="commandsoftenumregistry" tabindex="-1"><a class="header-anchor" href="#commandsoftenumregistry"><span><code>CommandSoftEnumRegistry</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>CommandRegistry *</code></td><td>mRegistry</td></tr></tbody></table><h3 id="cachedcomponentdata" tabindex="-1"><a class="header-anchor" href="#cachedcomponentdata"><span><code>CachedComponentData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>float</code></td><td>mFriction</td></tr><tr><td>4</td><td>(4) <code>float</code></td><td>mDestroySpeed</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mBurnOdds</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>mFlameOdds</td></tr><tr><td>16</td><td>(1) <code>Brightness</code></td><td>mLight</td></tr><tr><td>17</td><td>(1) <code>Brightness</code></td><td>mLightEmission</td></tr><tr><td>18</td><td>(1) <code>bool</code></td><td>mIsSolid</td></tr></tbody></table><h3 id="chunkviewsource" tabindex="-1"><a class="header-anchor" href="#chunkviewsource"><span><code>ChunkViewSource</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(56) <code>ChunkSource</code></td><td>baseclass_0</td></tr><tr><td>56</td><td>(4) <code>_BYTE[4]</code></td><td>mParentLoadMode</td></tr><tr><td>64</td><td>(296) <code>GridArea&lt;std::shared_ptr&lt;LevelChunk&gt; &gt;</code></td><td>mArea</td></tr><tr><td>360</td><td>(8) <code>ChunkSource *</code></td><td>mMainSource</td></tr></tbody></table><h3 id="columncacheddata" tabindex="-1"><a class="header-anchor" href="#columncacheddata"><span><code>ColumnCachedData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>grassColor</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>waterColor</td></tr></tbody></table><h3 id="consolechunkblender" tabindex="-1"><a class="header-anchor" href="#consolechunkblender"><span><code>ConsoleChunkBlender</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>SpinLock</code></td><td>mSpinLock</td></tr><tr><td>32</td><td>(16) <code>float[2][2]</code></td><td>mInterpCorners</td></tr><tr><td>48</td><td>(1024) <code>float[16][16]</code></td><td>mInterpTable</td></tr></tbody></table><h3 id="circuitcomponentlist-item" tabindex="-1"><a class="header-anchor" href="#circuitcomponentlist-item"><span><code>CircuitComponentList::Item</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BaseCircuitComponent *</code></td><td>mComponent</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mDampening</td></tr><tr><td>12</td><td>(12) <code>BlockPos</code></td><td>mPos</td></tr><tr><td>24</td><td>(1) <code>unsigned __int8</code></td><td>mDirection</td></tr><tr><td>25</td><td>(1) <code>bool</code></td><td>mDirectlyPowered</td></tr><tr><td>28</td><td>(4) <code>int</code></td><td>mData</td></tr></tbody></table><h3 id="circuitscenegraph-pendingentry" tabindex="-1"><a class="header-anchor" href="#circuitscenegraph-pendingentry"><span><code>CircuitSceneGraph::PendingEntry</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BaseCircuitComponent *</code></td><td>mRawComponentPtr</td></tr><tr><td>8</td><td>(8) <code>std::unique_ptr&lt;BaseCircuitComponent&gt;</code></td><td>mComponent</td></tr><tr><td>16</td><td>(12) <code>BlockPos</code></td><td>mPos</td></tr></tbody></table><h3 id="circuittrackinginfo" tabindex="-1"><a class="header-anchor" href="#circuittrackinginfo"><span><code>CircuitTrackingInfo</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>CircuitTrackingInfo::Entry</code></td><td>mCurrent</td></tr><tr><td>32</td><td>(32) <code>CircuitTrackingInfo::Entry</code></td><td>mPower</td></tr><tr><td>64</td><td>(32) <code>CircuitTrackingInfo::Entry</code></td><td>mNearest</td></tr><tr><td>96</td><td>(32) <code>CircuitTrackingInfo::Entry</code></td><td>m2ndNearest</td></tr><tr><td>128</td><td>(4) <code>int</code></td><td>mDampening</td></tr><tr><td>132</td><td>(1) <code>bool</code></td><td>mDirectlyPowered</td></tr><tr><td>136</td><td>(4) <code>int</code></td><td>mData</td></tr></tbody></table><h3 id="circuittrackinginfo-entry" tabindex="-1"><a class="header-anchor" href="#circuittrackinginfo-entry"><span><code>CircuitTrackingInfo::Entry</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>BaseCircuitComponent *</code></td><td>mComponent</td></tr><tr><td>8</td><td>(12) <code>BlockPos</code></td><td>mPos</td></tr><tr><td>20</td><td>(1) <code>unsigned __int8</code></td><td>mDirection</td></tr><tr><td>24</td><td>(8) <code>unsigned __int64</code></td><td>mTypeID</td></tr></tbody></table><h3 id="circuitcomponentlist" tabindex="-1"><a class="header-anchor" href="#circuitcomponentlist"><span><code>CircuitComponentList</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;CircuitComponentList::Item&gt;</code></td><td>mComponents</td></tr></tbody></table><h3 id="concurrency-task-options" tabindex="-1"><a class="header-anchor" href="#concurrency-task-options"><span><code>Concurrency::task_options</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>Concurrency::scheduler_ptr</code></td><td>_M_Scheduler</td></tr><tr><td>24</td><td>(8) <code>Concurrency::cancellation_token</code></td><td>_M_CancellationToken</td></tr><tr><td>32</td><td>(16) <code>Concurrency::task_continuation_context</code></td><td>_M_ContinuationContext</td></tr><tr><td>48</td><td>(40) <code>Concurrency::details::_Internal_task_options</code></td><td>_M_InternalTaskOptions</td></tr><tr><td>88</td><td>(1) <code>bool</code></td><td>_M_HasCancellationToken</td></tr><tr><td>89</td><td>(1) <code>bool</code></td><td>_M_HasScheduler</td></tr></tbody></table><h3 id="concurrency-scheduler-ptr" tabindex="-1"><a class="header-anchor" href="#concurrency-scheduler-ptr"><span><code>Concurrency::scheduler_ptr</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;Concurrency::scheduler_interface&gt;</code></td><td>_M_sharedScheduler</td></tr><tr><td>16</td><td>(8) <code>Concurrency::scheduler_interface *</code></td><td>_M_scheduler</td></tr></tbody></table><h3 id="concurrency-cancellation-token" tabindex="-1"><a class="header-anchor" href="#concurrency-cancellation-token"><span><code>Concurrency::cancellation_token</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Concurrency::details::_CancellationTokenState *</code></td><td>_M_Impl</td></tr></tbody></table><h3 id="concurrency-task-continuation-context" tabindex="-1"><a class="header-anchor" href="#concurrency-task-continuation-context"><span><code>Concurrency::task_continuation_context</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Concurrency::details::_ContextCallback</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(1) <code>bool</code></td><td>_M_RunInline</td></tr></tbody></table><h3 id="concurrency-details-contextcallback" tabindex="-1"><a class="header-anchor" href="#concurrency-details-contextcallback"><span><code>Concurrency::details::_ContextCallback</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Concurrency::details::_ContextCallback::&lt;unnamed_type__M_context&gt;</code></td><td>_M_context</td></tr></tbody></table><h3 id="concurrency-details-contextcallback-unnamed-type-m-context" tabindex="-1"><a class="header-anchor" href="#concurrency-details-contextcallback-unnamed-type-m-context"><span><code>Concurrency::details::_ContextCallback::&lt;unnamed_type__M_context&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>void *</code></td><td>_M_pContextCallback</td></tr><tr><td>1</td><td>(8) <code>unsigned __int64</code></td><td>_M_captureMethod</td></tr></tbody></table><h3 id="concurrency-details-internal-task-options" tabindex="-1"><a class="header-anchor" href="#concurrency-details-internal-task-options"><span><code>Concurrency::details::_Internal_task_options</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>_M_hasPresetCreationCallstack</td></tr><tr><td>8</td><td>(32) <code>Concurrency::details::_TaskCreationCallstack</code></td><td>_M_presetCreationCallstack</td></tr></tbody></table><h3 id="concurrency-details-taskcreationcallstack" tabindex="-1"><a class="header-anchor" href="#concurrency-details-taskcreationcallstack"><span><code>Concurrency::details::_TaskCreationCallstack</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>void *</code></td><td>_M_SingleFrame</td></tr><tr><td>8</td><td>(24) <code>std::vector&lt;void *&gt;</code></td><td>_M_frames</td></tr></tbody></table><h3 id="changemodelpacket" tabindex="-1"><a class="header-anchor" href="#changemodelpacket"><span><code>ChangeModelPacket</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>Packet</code></td><td>baseclass_0</td></tr><tr><td>40</td><td>(8) <code>ActorUniqueID</code></td><td>mEntityId</td></tr><tr><td>48</td><td>(32) <code>std::string</code></td><td>mModelName</td></tr></tbody></table><h3 id="changemodeltexturepacket" tabindex="-1"><a class="header-anchor" href="#changemodeltexturepacket"><span><code>ChangeModelTexturePacket</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>Packet</code></td><td>baseclass_0</td></tr><tr><td>40</td><td>(8) <code>ActorUniqueID</code></td><td>mEntityId</td></tr><tr><td>48</td><td>(32) <code>std::string</code></td><td>mModelTexture</td></tr><tr><td>80</td><td>(8) <code>ActorUniqueID</code></td><td>mSkinOwnerId</td></tr><tr><td>88</td><td>(1) <code>modelTextureType</code></td><td>mType</td></tr></tbody></table><h3 id="custompacket" tabindex="-1"><a class="header-anchor" href="#custompacket"><span><code>CustomPacket</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>Packet</code></td><td>baseclass_0</td></tr><tr><td>40</td><td>(32) <code>std::string</code></td><td>mContent</td></tr></tbody></table><h3 id="crypto-hash-md5" tabindex="-1"><a class="header-anchor" href="#crypto-hash-md5"><span><code>Crypto::Hash::md5</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Crypto::Hash::IHash</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(4) <code>unsigned int</code></td><td>_lo</td></tr><tr><td>12</td><td>(4) <code>unsigned int</code></td><td>_hi</td></tr><tr><td>16</td><td>(4) <code>unsigned int</code></td><td>_a</td></tr><tr><td>20</td><td>(4) <code>unsigned int</code></td><td>_b</td></tr><tr><td>24</td><td>(4) <code>unsigned int</code></td><td>_c</td></tr><tr><td>28</td><td>(4) <code>unsigned int</code></td><td>_d</td></tr><tr><td>32</td><td>(64) <code>unsigned __int8[64]</code></td><td>_buffer</td></tr><tr><td>96</td><td>(64) <code>unsigned int[16]</code></td><td>_block</td></tr></tbody></table><h3 id="confirmskinpacket-confirmskinentry" tabindex="-1"><a class="header-anchor" href="#confirmskinpacket-confirmskinentry"><span><code>ConfirmSkinPacket::ConfirmSkinEntry</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>mValid</td></tr><tr><td>8</td><td>(16) <code>mce::UUID</code></td><td>mUUID</td></tr><tr><td>24</td><td>(32) <code>std::string</code></td><td>mSkinImageData</td></tr></tbody></table><h3 id="core-filepathmanager" tabindex="-1"><a class="header-anchor" href="#core-filepathmanager"><span><code>Core::FilePathManager</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>mIsDedicatedServer</td></tr><tr><td>8</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mLibraryRoot</td></tr><tr><td>40</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mDocumentRoot</td></tr><tr><td>72</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mRoot</td></tr><tr><td>104</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mPackagePath</td></tr><tr><td>136</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mDataUrl</td></tr><tr><td>168</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mExternalFilePath</td></tr><tr><td>200</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mTemporaryFilePath</td></tr><tr><td>232</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mCacheFilePath</td></tr><tr><td>264</td><td>(32) <code>Core::PathBuffer&lt;std::string &gt;</code></td><td>mSettingsPath</td></tr></tbody></table><h3 id="core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-cachedefaultfactory-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource" tabindex="-1"><a class="header-anchor" href="#core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-cachedefaultfactory-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource"><span><code>Core::Cache&lt;unsigned __int64,dragon::rendering::BufferResourceManager&lt;dragon::mesh::IndexBufferType&gt;::BufferResource,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::mesh::IndexBufferType&gt;::BufferResource&gt; &gt;::CacheDefaultFactory&lt;dragon::rendering::BufferResourceManager&lt;dragon::mesh::IndexBufferType&gt;::BufferResource,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::mesh::IndexBufferType&gt;::BufferResource&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-cachedefaultfactory-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource" tabindex="-1"><a class="header-anchor" href="#core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-cachedefaultfactory-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource"><span><code>Core::Cache&lt;unsigned __int64,dragon::rendering::BufferResourceManager&lt;dragon::mesh::VertexBufferType&gt;::BufferResource,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::mesh::VertexBufferType&gt;::BufferResource&gt; &gt;::CacheDefaultFactory&lt;dragon::rendering::BufferResourceManager&lt;dragon::mesh::VertexBufferType&gt;::BufferResource,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::mesh::VertexBufferType&gt;::BufferResource&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="core-cpuringbufferallocator-std-tree-node-std-pair-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-const-const-std-unique-ptr-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-std-default-delete-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-void-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-std-tree-node-std-pair-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-const-const-std-unique-ptr-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-std-default-delete-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-void-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;std::_Tree_node&lt;std::pair&lt;dragon::framegraph::detail::AbstractPass&lt;dragon::rendering::RenderContext&gt; const * const,std::unique_ptr&lt;dragon::framegraph::detail::AbstractPass&lt;dragon::rendering::RenderContext&gt;,std::default_delete&lt;dragon::framegraph::detail::AbstractPass&lt;dragon::rendering::RenderContext&gt; &gt; &gt; &gt;,void *&gt;,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::CheckedRingBuffer&lt;2,0&gt; *</code></td><td>mBufferInstance</td></tr></tbody></table><h3 id="core-cpuringbufferallocator-std-tree-node-int-void-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-std-tree-node-int-void-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;std::_Tree_node&lt;int,void *&gt;,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::CheckedRingBuffer&lt;2,0&gt; *</code></td><td>mBufferInstance</td></tr></tbody></table><h3 id="core-cpuringbufferallocator-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-const-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-const-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;dragon::framegraph::detail::AbstractPass&lt;dragon::rendering::RenderContext&gt; const *,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::CheckedRingBuffer&lt;2,0&gt; *</code></td><td>mBufferInstance</td></tr></tbody></table><h3 id="core-cpuringbufferallocator-std-tree-node-std-pair-dragon-framegraph-detail-abstractresource-dragon-rendering-rendercontext-const-const-dragon-res-servertexture-void-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-std-tree-node-std-pair-dragon-framegraph-detail-abstractresource-dragon-rendering-rendercontext-const-const-dragon-res-servertexture-void-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;std::_Tree_node&lt;std::pair&lt;dragon::framegraph::detail::AbstractResource&lt;dragon::rendering::RenderContext&gt; const * const,dragon::res::ServerTexture&gt;,void *&gt;,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::CheckedRingBuffer&lt;2,0&gt; *</code></td><td>mBufferInstance</td></tr></tbody></table><h3 id="cg-details-scopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-basic-string-char-std-char-traits-char-std-allocator-char-const-std-vector-cg-grouppooldescription-std-allocator-cg-grouppooldescription-const-taskdispatcherexecution-0" tabindex="-1"><a class="header-anchor" href="#cg-details-scopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-basic-string-char-std-char-traits-char-std-allocator-char-const-std-vector-cg-grouppooldescription-std-allocator-cg-grouppooldescription-const-taskdispatcherexecution-0"><span><code>cg::details::ScopedFrame&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const &amp;,std::vector&lt;cg::GroupPoolDescription,std::allocator&lt;cg::GroupPoolDescription&gt; &gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution,0&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt; *</code></td><td>mDispatcher</td></tr></tbody></table><h3 id="cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-ctor-l2-lambda-38b95ff2bedc8501d3bbf586eabb0e1e" tabindex="-1"><a class="header-anchor" href="#cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-ctor-l2-lambda-38b95ff2bedc8501d3bbf586eabb0e1e"><span><code>cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;::{ctor}::__l2::&lt;lambda_38b95ff2bedc8501d3bbf586eabb0e1e&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt; *const</code></td><td>__this</td></tr></tbody></table><h3 id="core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-cachedefaultfactory-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource" tabindex="-1"><a class="header-anchor" href="#core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-cachedefaultfactory-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource"><span><code>Core::Cache&lt;unsigned __int64,dragon::rendering::BufferResourceManager&lt;dragon::rendering::TextureResourceType&gt;::BufferResource,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::rendering::TextureResourceType&gt;::BufferResource&gt; &gt;::CacheDefaultFactory&lt;dragon::rendering::BufferResourceManager&lt;dragon::rendering::TextureResourceType&gt;::BufferResource,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::rendering::TextureResourceType&gt;::BufferResource&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead></table><h3 id="climateattributes" tabindex="-1"><a class="header-anchor" href="#climateattributes"><span><code>ClimateAttributes</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>float</code></td><td>mTemperature</td></tr><tr><td>4</td><td>(4) <code>float</code></td><td>mDownfall</td></tr><tr><td>8</td><td>(4) <code>float</code></td><td>mRedSporeDensity</td></tr><tr><td>12</td><td>(4) <code>float</code></td><td>mBlueSporeDensity</td></tr><tr><td>16</td><td>(4) <code>float</code></td><td>mAshDensity</td></tr><tr><td>20</td><td>(4) <code>float</code></td><td>mWhiteAshDensity</td></tr><tr><td>24</td><td>(4) <code>float</code></td><td>mSnowAccumulationMin</td></tr><tr><td>28</td><td>(4) <code>float</code></td><td>mSnowAccumulationMax</td></tr></tbody></table><h3 id="canopyvariantbuilder-buildcanopyvariant-l2-lambda-d70ff2a45c19225400bf0b1fd63f432d" tabindex="-1"><a class="header-anchor" href="#canopyvariantbuilder-buildcanopyvariant-l2-lambda-d70ff2a45c19225400bf0b1fd63f432d"><span><code>CanopyVariantBuilder::buildCanopyVariant::__l2::&lt;lambda_d70ff2a45c19225400bf0b1fd63f432d&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>std::function&lt;ITreeCanopyWrapper &amp; __cdecl(FeatureLoading::ConcreteFeatureHolder&lt;VanillaTreeFeature&gt; *)&gt;</code></td><td>canopyAccessor</td></tr></tbody></table><h3 id="cachedbiomesource-vanillaoverworldbiomesource" tabindex="-1"><a class="header-anchor" href="#cachedbiomesource-vanillaoverworldbiomesource"><span><code>CachedBiomeSource&lt;VanillaOverworldBiomeSource&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(40) <code>VanillaOverworldBiomeSource</code></td><td>baseclass_0</td></tr><tr><td>40</td><td>(16) <code>std::shared_ptr&lt;BiomeSourceGetBiomeCache&gt;</code></td><td>mCache</td></tr></tbody></table><h3 id="cameraitemcomponentlegacy" tabindex="-1"><a class="header-anchor" href="#cameraitemcomponentlegacy"><span><code>CameraItemComponentLegacy</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>ICameraItemComponent</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(4) <code>float</code></td><td>mBlackBarsDuration</td></tr><tr><td>12</td><td>(4) <code>float</code></td><td>mBlackBarsScreenRatio</td></tr><tr><td>16</td><td>(4) <code>float</code></td><td>mShutterScreenRatio</td></tr><tr><td>20</td><td>(4) <code>float</code></td><td>mShutterDuration</td></tr><tr><td>24</td><td>(4) <code>float</code></td><td>mPictureDuration</td></tr><tr><td>28</td><td>(4) <code>float</code></td><td>mSlideAwayDuration</td></tr><tr><td>32</td><td>(1) <code>bool</code></td><td>mPlacingTripod</td></tr><tr><td>40</td><td>(8) <code>unsigned __int64</code></td><td>mPlacingTripodClientTick</td></tr><tr><td>48</td><td>(8) <code>unsigned __int64</code></td><td>mPlacingTripodServerTick</td></tr><tr><td>56</td><td>(8) <code>CameraCallbacks *</code></td><td>mCallbacks</td></tr></tbody></table><h3 id="customblob" tabindex="-1"><a class="header-anchor" href="#customblob"><span><code>CustomBlob</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>IDxcBlob</code></td><td>baseclass_0</td></tr><tr><td>8</td><td>(8) <code>void *</code></td><td>data</td></tr><tr><td>16</td><td>(8) <code>unsigned __int64</code></td><td>size</td></tr></tbody></table><h3 id="caretlocationdata" tabindex="-1"><a class="header-anchor" href="#caretlocationdata"><span><code>CaretLocationData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>location</td></tr></tbody></table><h3 id="connectionstatedata" tabindex="-1"><a class="header-anchor" href="#connectionstatedata"><span><code>ConnectionStateData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>isConnected</td></tr></tbody></table><h3 id="changeuserdata" tabindex="-1"><a class="header-anchor" href="#changeuserdata"><span><code>ChangeUserData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(1) <code>bool</code></td><td>restrictToControllerIdChange</td></tr></tbody></table><h3 id="compression-state" tabindex="-1"><a class="header-anchor" href="#compression-state"><span><code>compression_state</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const unsigned __int8 *</code></td><td>input</td></tr><tr><td>8</td><td>(8) <code>unsigned __int64</code></td><td>input_len</td></tr><tr><td>16</td><td>(4) <code>unsigned int</code></td><td>output_len</td></tr><tr><td>20</td><td>(1024) <code>unsigned __int8[1024]</code></td><td>output</td></tr></tbody></table><h3 id="core-filestoragearea-begintransaction-l5-lambda-299c7b1db8373c80435acd53fe6c3bdb" tabindex="-1"><a class="header-anchor" href="#core-filestoragearea-begintransaction-l5-lambda-299c7b1db8373c80435acd53fe6c3bdb"><span><code>Core::FileStorageArea::_beginTransaction::__l5::&lt;lambda_299c7b1db8373c80435acd53fe6c3bdb&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::FileStorageArea *const</code></td><td>__this</td></tr></tbody></table><h3 id="core-transactionframe" tabindex="-1"><a class="header-anchor" href="#core-transactionframe"><span><code>Core::TransactionFrame</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;Core::FileSystemImpl&gt;</code></td><td>msptTransaction</td></tr><tr><td>16</td><td>(1040) <code>Core::PathBuffer&lt;Core::StackString&lt;char,1024&gt; &gt;</code></td><td>mCleanPath</td></tr><tr><td>1056</td><td>(72) <code>Core::Result</code></td><td>mResult</td></tr></tbody></table><h3 id="core-filesystemimpl-renamefileordirectory-l15-lambda-455282c5f2c9971e330b5e9517f1b8d0" tabindex="-1"><a class="header-anchor" href="#core-filesystemimpl-renamefileordirectory-l15-lambda-455282c5f2c9971e330b5e9517f1b8d0"><span><code>Core::FileSystemImpl::renameFileOrDirectory::__l15::&lt;lambda_455282c5f2c9971e330b5e9517f1b8d0&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(32) <code>const Core::Path</code></td><td>sourceEntryPath</td></tr><tr><td>32</td><td>(32) <code>const Core::Path</code></td><td>targetEntryPath</td></tr></tbody></table><h3 id="core-filesystemimpl-renamefileordirectory-l18-lambda-a88ce22f21287b4119b5de040b24fbd2" tabindex="-1"><a class="header-anchor" href="#core-filesystemimpl-renamefileordirectory-l18-lambda-a88ce22f21287b4119b5de040b24fbd2"><span><code>Core::FileSystemImpl::renameFileOrDirectory::__l18::&lt;lambda_a88ce22f21287b4119b5de040b24fbd2&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(24) <code>std::vector&lt;Core::PathPart&gt;</code></td><td>sourceDirectoryRelativeFiles</td></tr><tr><td>24</td><td>(32) <code>const Core::Path</code></td><td>sourceEntryPath</td></tr><tr><td>56</td><td>(32) <code>const Core::Path</code></td><td>targetEntryPath</td></tr></tbody></table><h3 id="core-flatfilesearchresult" tabindex="-1"><a class="header-anchor" href="#core-flatfilesearchresult"><span><code>Core::FlatFileSearchResult</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>std::shared_ptr&lt;Core::FlatFileManifest const &gt;</code></td><td>mManifest</td></tr><tr><td>16</td><td>(8) <code>const Core::FlatFileManifestInfo *</code></td><td>mManifestInfoEntry</td></tr></tbody></table><h3 id="core-result-either-l2-lambda-febe3dbf8fbc4fa631ce502a657ef1ea" tabindex="-1"><a class="header-anchor" href="#core-result-either-l2-lambda-febe3dbf8fbc4fa631ce502a657ef1ea"><span><code>Core::Result::either::__l2::&lt;lambda_febe3dbf8fbc4fa631ce502a657ef1ea&gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(72) <code>Core::Result</code></td><td>r1</td></tr><tr><td>72</td><td>(72) <code>Core::Result</code></td><td>r2</td></tr></tbody></table><h3 id="crashdump-alldata" tabindex="-1"><a class="header-anchor" href="#crashdump-alldata"><span><code>CrashDump_AllData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>__int64</code></td><td>mStartSentinel</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>mFormatSize</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>mDataBlobCount</td></tr><tr><td>16</td><td>(1372) <code>char[1372]</code></td><td>mFormat</td></tr><tr><td>1388</td><td>(520) <code>CrashDumpGlobalData</code></td><td>mGlobalData</td></tr><tr><td>1908</td><td>(32784) <code>CrashDumpEventDataArray</code></td><td>mEventDataArray</td></tr><tr><td>34692</td><td>(8208) <code>CrashDumpKeyValueDataArray</code></td><td>mKeyValueDataArray</td></tr><tr><td>42900</td><td>(272) <code>CrashDumpFrameDataArray</code></td><td>mFrameDataArray</td></tr><tr><td>43172</td><td>(1552) <code>CrashDumpGameplayDataArray</code></td><td>mGameplayDataArray</td></tr><tr><td>44724</td><td>(1040) <code>CrashDumpRenderDataArray</code></td><td>mRenderDataArray</td></tr><tr><td>45764</td><td>(272) <code>CrashDumpPlayerDataArray</code></td><td>mPlayerDataArray</td></tr><tr><td>46036</td><td>(400) <code>CrashDumpFirstAssertsDataArray</code></td><td>mFirstAssertsDataArray</td></tr><tr><td>46436</td><td>(400) <code>CrashDumpLastAssertsDataArray</code></td><td>mLastAssertsDataArray</td></tr><tr><td>46836</td><td>(8) <code>__int64</code></td><td>mEndSentinel</td></tr></tbody></table><h3 id="crashdumpglobaldata" tabindex="-1"><a class="header-anchor" href="#crashdumpglobaldata"><span><code>CrashDumpGlobalData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>CrashDumpLogBlobHeader</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(32) <code>char[32]</code></td><td>mPlatform</td></tr><tr><td>48</td><td>(32) <code>char[32]</code></td><td>mGameVersion</td></tr><tr><td>80</td><td>(4) <code>int</code></td><td>mResourcePack</td></tr><tr><td>84</td><td>(4) <code>int</code></td><td>mWorldSeed</td></tr><tr><td>88</td><td>(4) <code>int</code></td><td>mRegion</td></tr><tr><td>92</td><td>(4) <code>int</code></td><td>__pad</td></tr><tr><td>96</td><td>(8) <code>unsigned __int64</code></td><td>mTotalMemory</td></tr><tr><td>104</td><td>(16) <code>_GUID</code></td><td>mDeviceSessionId</td></tr><tr><td>120</td><td>(16) <code>_GUID</code></td><td>mDeviceId</td></tr><tr><td>136</td><td>(256) <code>char[256]</code></td><td>mResourcePackIds</td></tr><tr><td>392</td><td>(128) <code>char[128]</code></td><td>mMainSceneStack</td></tr></tbody></table><h3 id="crashdumplogblobheader" tabindex="-1"><a class="header-anchor" href="#crashdumplogblobheader"><span><code>CrashDumpLogBlobHeader</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>CrashDumpLogSectionType</code></td><td>mType</td></tr><tr><td>4</td><td>(4) <code>unsigned int</code></td><td>mSize</td></tr><tr><td>8</td><td>(4) <code>unsigned int</code></td><td>mIndex</td></tr><tr><td>12</td><td>(4) <code>unsigned int</code></td><td>mFieldCount</td></tr></tbody></table><h3 id="crashdumpeventdataarray" tabindex="-1"><a class="header-anchor" href="#crashdumpeventdataarray"><span><code>CrashDumpEventDataArray</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>CrashDumpLogBlobHeader</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(32768) <code>CrashDumpEventData[4096]</code></td><td>mEventData</td></tr></tbody></table><h3 id="crashdumpkeyvaluedataarray" tabindex="-1"><a class="header-anchor" href="#crashdumpkeyvaluedataarray"><span><code>CrashDumpKeyValueDataArray</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>CrashDumpLogBlobHeader</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(8192) <code>CrashDumpKeyValueData[512]</code></td><td>mKeyValueData</td></tr></tbody></table><h3 id="crashdumpframedataarray" tabindex="-1"><a class="header-anchor" href="#crashdumpframedataarray"><span><code>CrashDumpFrameDataArray</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>CrashDumpLogBlobHeader</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(256) <code>CrashDumpFrameData[8]</code></td><td>mFrameData</td></tr></tbody></table><h3 id="crashdumpframedata" tabindex="-1"><a class="header-anchor" href="#crashdumpframedata"><span><code>CrashDumpFrameData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>mNumControllers</td></tr><tr><td>4</td><td>(4) <code>unsigned int</code></td><td>mPrimaryControllerId</td></tr><tr><td>8</td><td>(8) <code>unsigned __int64</code></td><td>mFreeMemory</td></tr><tr><td>16</td><td>(4) <code>float</code></td><td>mX</td></tr><tr><td>20</td><td>(4) <code>float</code></td><td>mY</td></tr><tr><td>24</td><td>(4) <code>float</code></td><td>mZ</td></tr><tr><td>28</td><td>(4) <code>float</code></td><td>mDirection</td></tr></tbody></table><h3 id="crashdumpgameplaydataarray" tabindex="-1"><a class="header-anchor" href="#crashdumpgameplaydataarray"><span><code>CrashDumpGameplayDataArray</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>CrashDumpLogBlobHeader</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(1536) <code>CrashDumpGameplayData[128]</code></td><td>mGameplayData</td></tr></tbody></table><h3 id="crashdumprenderdataarray" tabindex="-1"><a class="header-anchor" href="#crashdumprenderdataarray"><span><code>CrashDumpRenderDataArray</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>CrashDumpLogBlobHeader</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(1024) <code>CrashDumpRenderData[128]</code></td><td>mRenderData</td></tr></tbody></table><h3 id="crashdumprenderdata" tabindex="-1"><a class="header-anchor" href="#crashdumprenderdata"><span><code>CrashDumpRenderData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(2) <code>_BYTE[2]</code></td><td>mTag</td></tr><tr><td>2</td><td>(2) <code>__int16</code></td><td>mPad</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>mObjectId</td></tr></tbody></table><h3 id="crashdumpplayerdataarray" tabindex="-1"><a class="header-anchor" href="#crashdumpplayerdataarray"><span><code>CrashDumpPlayerDataArray</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>CrashDumpLogBlobHeader</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(256) <code>CrashDumpPlayerData[4]</code></td><td>mPlayerData</td></tr></tbody></table><h3 id="crashdumpplayerdata" tabindex="-1"><a class="header-anchor" href="#crashdumpplayerdata"><span><code>CrashDumpPlayerData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(64) <code>char[64]</code></td><td>mSceneStack</td></tr></tbody></table><h3 id="crashdumpfirstassertsdataarray" tabindex="-1"><a class="header-anchor" href="#crashdumpfirstassertsdataarray"><span><code>CrashDumpFirstAssertsDataArray</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>CrashDumpLogBlobHeader</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(384) <code>CrashDumpAssertData[3]</code></td><td>mAssertData</td></tr></tbody></table><h3 id="crashdumpassertdata" tabindex="-1"><a class="header-anchor" href="#crashdumpassertdata"><span><code>CrashDumpAssertData</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(128) <code>char[128]</code></td><td>mAssertMessage</td></tr></tbody></table><h3 id="crashdumplastassertsdataarray" tabindex="-1"><a class="header-anchor" href="#crashdumplastassertsdataarray"><span><code>CrashDumpLastAssertsDataArray</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(16) <code>CrashDumpLogBlobHeader</code></td><td>baseclass_0</td></tr><tr><td>16</td><td>(384) <code>CrashDumpAssertData[3]</code></td><td>mAssertData</td></tr></tbody></table><h3 id="cff-parserrec" tabindex="-1"><a class="header-anchor" href="#cff-parserrec"><span><code>CFF_ParserRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FT_LibraryRec_ *</code></td><td>library</td></tr><tr><td>8</td><td>(8) <code>unsigned __int8 *</code></td><td>start</td></tr><tr><td>16</td><td>(8) <code>unsigned __int8 *</code></td><td>limit</td></tr><tr><td>24</td><td>(8) <code>unsigned __int8 *</code></td><td>cursor</td></tr><tr><td>32</td><td>(8) <code>unsigned __int8 **</code></td><td>stack</td></tr><tr><td>40</td><td>(8) <code>unsigned __int8 **</code></td><td>top</td></tr><tr><td>48</td><td>(4) <code>unsigned int</code></td><td>stackSize</td></tr><tr><td>52</td><td>(4) <code>unsigned int</code></td><td>object_code</td></tr><tr><td>56</td><td>(8) <code>void *</code></td><td>object</td></tr><tr><td>64</td><td>(2) <code>unsigned __int16</code></td><td>num_designs</td></tr><tr><td>66</td><td>(2) <code>unsigned __int16</code></td><td>num_axes</td></tr></tbody></table><h3 id="cff-indexrec" tabindex="-1"><a class="header-anchor" href="#cff-indexrec"><span><code>CFF_IndexRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FT_StreamRec_ *</code></td><td>stream</td></tr><tr><td>8</td><td>(4) <code>unsigned int</code></td><td>start</td></tr><tr><td>12</td><td>(4) <code>unsigned int</code></td><td>hdr_size</td></tr><tr><td>16</td><td>(4) <code>unsigned int</code></td><td>count</td></tr><tr><td>20</td><td>(1) <code>unsigned __int8</code></td><td>off_size</td></tr><tr><td>24</td><td>(4) <code>unsigned int</code></td><td>data_offset</td></tr><tr><td>28</td><td>(4) <code>unsigned int</code></td><td>data_size</td></tr><tr><td>32</td><td>(8) <code>unsigned int *</code></td><td>offsets</td></tr><tr><td>40</td><td>(8) <code>unsigned __int8 *</code></td><td>bytes</td></tr></tbody></table><h3 id="cid-parser" tabindex="-1"><a class="header-anchor" href="#cid-parser"><span><code>CID_Parser_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(144) <code>PS_ParserRec_</code></td><td>root</td></tr><tr><td>144</td><td>(8) <code>FT_StreamRec_ *</code></td><td>stream</td></tr><tr><td>152</td><td>(8) <code>unsigned __int8 *</code></td><td>postscript</td></tr><tr><td>160</td><td>(4) <code>unsigned int</code></td><td>postscript_len</td></tr><tr><td>164</td><td>(4) <code>unsigned int</code></td><td>data_offset</td></tr><tr><td>168</td><td>(4) <code>unsigned int</code></td><td>binary_length</td></tr><tr><td>176</td><td>(8) <code>CID_FaceInfoRec_ *</code></td><td>cid</td></tr><tr><td>184</td><td>(4) <code>int</code></td><td>num_dict</td></tr></tbody></table><h3 id="cf2-matrix" tabindex="-1"><a class="header-anchor" href="#cf2-matrix"><span><code>CF2_Matrix_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>int</code></td><td>a</td></tr><tr><td>4</td><td>(4) <code>int</code></td><td>b</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>c</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>d</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>tx</td></tr><tr><td>20</td><td>(4) <code>int</code></td><td>ty</td></tr></tbody></table><h3 id="cf2-bufferrec" tabindex="-1"><a class="header-anchor" href="#cf2-bufferrec"><span><code>CF2_BufferRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int *</code></td><td>error</td></tr><tr><td>8</td><td>(8) <code>const unsigned __int8 *</code></td><td>start</td></tr><tr><td>16</td><td>(8) <code>const unsigned __int8 *</code></td><td>end</td></tr><tr><td>24</td><td>(8) <code>const unsigned __int8 *</code></td><td>ptr</td></tr></tbody></table><h3 id="cf2-hintmaskrec" tabindex="-1"><a class="header-anchor" href="#cf2-hintmaskrec"><span><code>CF2_HintMaskRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>int *</code></td><td>error</td></tr><tr><td>8</td><td>(1) <code>unsigned __int8</code></td><td>isValid</td></tr><tr><td>9</td><td>(1) <code>unsigned __int8</code></td><td>isNew</td></tr><tr><td>16</td><td>(8) <code>unsigned __int64</code></td><td>bitCount</td></tr><tr><td>24</td><td>(8) <code>unsigned __int64</code></td><td>byteCount</td></tr><tr><td>32</td><td>(12) <code>unsigned __int8[12]</code></td><td>mask</td></tr></tbody></table><h3 id="cf2-hintrec" tabindex="-1"><a class="header-anchor" href="#cf2-hintrec"><span><code>CF2_HintRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(4) <code>unsigned int</code></td><td>flags</td></tr><tr><td>8</td><td>(8) <code>unsigned __int64</code></td><td>index</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>csCoord</td></tr><tr><td>20</td><td>(4) <code>int</code></td><td>dsCoord</td></tr><tr><td>24</td><td>(4) <code>int</code></td><td>scale</td></tr></tbody></table><h3 id="cf2-glyphpathrec" tabindex="-1"><a class="header-anchor" href="#cf2-glyphpathrec"><span><code>CF2_GlyphPathRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>CF2_FontRec_ *</code></td><td>font</td></tr><tr><td>8</td><td>(8) <code>CF2_OutlineCallbacksRec_ *</code></td><td>callbacks</td></tr><tr><td>16</td><td>(6184) <code>CF2_HintMapRec_</code></td><td>hintMap</td></tr><tr><td>6200</td><td>(6184) <code>CF2_HintMapRec_</code></td><td>firstHintMap</td></tr><tr><td>12384</td><td>(6184) <code>CF2_HintMapRec_</code></td><td>initialHintMap</td></tr><tr><td>18568</td><td>(64) <code>CF2_ArrStackRec_</code></td><td>hintMoves</td></tr><tr><td>18632</td><td>(4) <code>int</code></td><td>scaleX</td></tr><tr><td>18636</td><td>(4) <code>int</code></td><td>scaleC</td></tr><tr><td>18640</td><td>(4) <code>int</code></td><td>scaleY</td></tr><tr><td>18644</td><td>(8) <code>FT_Vector_</code></td><td>fractionalTranslation</td></tr><tr><td>18652</td><td>(1) <code>unsigned __int8</code></td><td>pathIsOpen</td></tr><tr><td>18653</td><td>(1) <code>unsigned __int8</code></td><td>pathIsClosing</td></tr><tr><td>18654</td><td>(1) <code>unsigned __int8</code></td><td>darken</td></tr><tr><td>18655</td><td>(1) <code>unsigned __int8</code></td><td>moveIsPending</td></tr><tr><td>18656</td><td>(8) <code>CF2_ArrStackRec_ *</code></td><td>hStemHintArray</td></tr><tr><td>18664</td><td>(8) <code>CF2_ArrStackRec_ *</code></td><td>vStemHintArray</td></tr><tr><td>18672</td><td>(8) <code>CF2_HintMaskRec_ *</code></td><td>hintMask</td></tr><tr><td>18680</td><td>(4) <code>int</code></td><td>hintOriginY</td></tr><tr><td>18688</td><td>(8) <code>const CF2_BluesRec_ *</code></td><td>blues</td></tr><tr><td>18696</td><td>(4) <code>int</code></td><td>xOffset</td></tr><tr><td>18700</td><td>(4) <code>int</code></td><td>yOffset</td></tr><tr><td>18704</td><td>(4) <code>int</code></td><td>miterLimit</td></tr><tr><td>18708</td><td>(4) <code>int</code></td><td>snapThreshold</td></tr><tr><td>18712</td><td>(8) <code>FT_Vector_</code></td><td>offsetStart0</td></tr><tr><td>18720</td><td>(8) <code>FT_Vector_</code></td><td>offsetStart1</td></tr><tr><td>18728</td><td>(8) <code>FT_Vector_</code></td><td>currentCS</td></tr><tr><td>18736</td><td>(8) <code>FT_Vector_</code></td><td>currentDS</td></tr><tr><td>18744</td><td>(8) <code>FT_Vector_</code></td><td>start</td></tr><tr><td>18752</td><td>(1) <code>unsigned __int8</code></td><td>elemIsQueued</td></tr><tr><td>18756</td><td>(4) <code>int</code></td><td>prevElemOp</td></tr><tr><td>18760</td><td>(8) <code>FT_Vector_</code></td><td>prevElemP0</td></tr><tr><td>18768</td><td>(8) <code>FT_Vector_</code></td><td>prevElemP1</td></tr><tr><td>18776</td><td>(8) <code>FT_Vector_</code></td><td>prevElemP2</td></tr><tr><td>18784</td><td>(8) <code>FT_Vector_</code></td><td>prevElemP3</td></tr></tbody></table><h3 id="cf2-hintmaprec" tabindex="-1"><a class="header-anchor" href="#cf2-hintmaprec"><span><code>CF2_HintMapRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>CF2_FontRec_ *</code></td><td>font</td></tr><tr><td>8</td><td>(8) <code>CF2_HintMapRec_ *</code></td><td>initialHintMap</td></tr><tr><td>16</td><td>(8) <code>CF2_ArrStackRec_ *</code></td><td>hintMoves</td></tr><tr><td>24</td><td>(1) <code>unsigned __int8</code></td><td>isValid</td></tr><tr><td>25</td><td>(1) <code>unsigned __int8</code></td><td>hinted</td></tr><tr><td>28</td><td>(4) <code>int</code></td><td>scale</td></tr><tr><td>32</td><td>(4) <code>unsigned int</code></td><td>count</td></tr><tr><td>36</td><td>(4) <code>unsigned int</code></td><td>lastIndex</td></tr><tr><td>40</td><td>(6144) <code>CF2_HintRec_[192]</code></td><td>edge</td></tr></tbody></table><h3 id="cf2-arrstackrec" tabindex="-1"><a class="header-anchor" href="#cf2-arrstackrec"><span><code>CF2_ArrStackRec_</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>FT_MemoryRec_ *</code></td><td>memory</td></tr><tr><td>8</td><td>(8) <code>int *</code></td><td>error</td></tr><tr><td>16</td><td>(8) <code>unsigned __int64</code></td><td>sizeItem</td></tr><tr><td>24</td><td>(8) <code>unsigned __int64</code></td><td>allocated</td></tr><tr><td>32</td><td>(8) <code>unsigned __int64</code></td><td>chunk</td></tr><tr><td>40</td><td>(8) <code>unsigned __int64</code></td><td>count</td></tr><tr><td>48</td><td>(8) <code>unsigned __int64</code></td><td>totalSize</td></tr><tr><td>56</td><td>(8) <code>void *</code></td><td>ptr</td></tr></tbody></table><h3 id="cookie-type" tabindex="-1"><a class="header-anchor" href="#cookie-type"><span><code>cookie_type</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>__int64</code></td><td>start_pos</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>dec_flags</td></tr><tr><td>12</td><td>(4) <code>int</code></td><td>bytes_to_feed</td></tr><tr><td>16</td><td>(4) <code>int</code></td><td>chars_to_skip</td></tr><tr><td>20</td><td>(1) <code>char</code></td><td>need_eof</td></tr></tbody></table><h3 id="compiling" tabindex="-1"><a class="header-anchor" href="#compiling"><span><code>compiling</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>char *</code></td><td>c_encoding</td></tr><tr><td>8</td><td>(4) <code>int</code></td><td>c_future_unicode</td></tr><tr><td>16</td><td>(8) <code>_arena *</code></td><td>c_arena</td></tr><tr><td>24</td><td>(8) <code>const char *</code></td><td>c_filename</td></tr></tbody></table><h3 id="compiler" tabindex="-1"><a class="header-anchor" href="#compiler"><span><code>compiler</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>const char *</code></td><td>c_filename</td></tr><tr><td>8</td><td>(8) <code>symtable *</code></td><td>c_st</td></tr><tr><td>16</td><td>(8) <code>?</code></td><td>c_future</td></tr><tr><td>24</td><td>(8) <code>?</code></td><td>c_flags</td></tr><tr><td>32</td><td>(4) <code>int</code></td><td>c_interactive</td></tr><tr><td>36</td><td>(4) <code>int</code></td><td>c_nestlevel</td></tr><tr><td>40</td><td>(8) <code>compiler_unit *</code></td><td>u</td></tr><tr><td>48</td><td>(8) <code>_object *</code></td><td>c_stack</td></tr><tr><td>56</td><td>(8) <code>_arena *</code></td><td>c_arena</td></tr></tbody></table><h3 id="core-cpuringbufferallocator-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-sortable-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-sortable-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;dragon::platform::registry::BasicRenderRegistry&lt;dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources&gt;::SortedView::Sortable,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><table><thead><tr><th>Offset</th><th>Type</th><th>Name</th></tr></thead><tbody><tr><td>0</td><td>(8) <code>Core::CheckedRingBuffer&lt;2,0&gt; *</code></td><td>mBufferInstance</td></tr></tbody></table><h3 id="csframe" tabindex="-1"><a class="header-anchor" href="#csframe"><span><code>CsFrame</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct CsFrame</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 SavedR10;</span>
<span class="line">  unsigned __int64 SavedR11;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compoundtag-vtbl" tabindex="-1"><a class="header-anchor" href="#compoundtag-vtbl"><span><code>CompoundTag_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CompoundTag_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Tag)(Tag *this);</span>
<span class="line">  void (__fastcall *deleteChildren)(Tag *this);</span>
<span class="line">  void (__fastcall *write)(Tag *this, IDataOutput *);</span>
<span class="line">  void (__fastcall *load)(Tag *this, IDataInput *);</span>
<span class="line">  void (__fastcall *writeScriptData)(Tag *this, IDataOutput *);</span>
<span class="line">  void (__fastcall *loadScriptData)(Tag *this, IDataInput *);</span>
<span class="line">  std::string *(__fastcall *toString)(Tag *this, std::string *result);</span>
<span class="line">  Tag::Type (__fastcall *getId)(Tag *this);</span>
<span class="line">  bool (__fastcall *equals)(Tag *this, const Tag *);</span>
<span class="line">  void (__fastcall *print)(Tag *this, const std::string *, PrintStream *);</span>
<span class="line">  void (__fastcall *print)(Tag *this, PrintStream *);</span>
<span class="line">  std::unique_ptr&lt;Tag&gt; *(__fastcall *copy)(Tag *this, std::unique_ptr&lt;Tag&gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *hash)(Tag *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clockspritecalculator" tabindex="-1"><a class="header-anchor" href="#clockspritecalculator"><span><code>ClockSpriteCalculator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClockSpriteCalculator</span>
<span class="line">{</span>
<span class="line">  int mFrame;</span>
<span class="line">  float mRot;</span>
<span class="line">  float mRotA;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-pathbuffer-std-string" tabindex="-1"><a class="header-anchor" href="#core-pathbuffer-std-string"><span><code>Core::PathBuffer&lt;std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::PathBuffer&lt;std::string &gt;</span>
<span class="line">{</span>
<span class="line">  std::string mContainer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-rendermaterialbase-vtbl" tabindex="-1"><a class="header-anchor" href="#cg-rendermaterialbase-vtbl"><span><code>cg::RenderMaterialBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ cg::RenderMaterialBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~RenderMaterialBase)(cg::RenderMaterialBase *this);</span>
<span class="line">  void (__fastcall *parseRuntimeStates)(cg::RenderMaterialBase *this, const Json::Value *);</span>
<span class="line">  void (__fastcall *appendShaderPathForGfxAPI)(cg::RenderMaterialBase *this);</span>
<span class="line">  std::string *(__fastcall *buildHeader)(cg::RenderMaterialBase *this, std::string *result, const std::set&lt;std::string&gt; *);</span>
<span class="line">  void (__fastcall *parseShader)(cg::RenderMaterialBase *this, const Json::Value *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-texturesetimagedescription-layerinfovar" tabindex="-1"><a class="header-anchor" href="#cg-texturesetimagedescription-layerinfovar"><span><code>cg::TextureSetImageDescription::LayerInfoVar</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TextureSetImageDescription::LayerInfoVar</span>
<span class="line">{</span>
<span class="line">  cg::TextureSetLayerType mLayerType;</span>
<span class="line">  std::variant&lt;cg::ImageDescription,ColorChannel,mce::Color&gt; mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connector" tabindex="-1"><a class="header-anchor" href="#connector"><span><code>Connector</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Connector</span>
<span class="line">{</span>
<span class="line">  Connector_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connector-connectionstatelistener" tabindex="-1"><a class="header-anchor" href="#connector-connectionstatelistener"><span><code>Connector::ConnectionStateListener</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Connector::ConnectionStateListener</span>
<span class="line">{</span>
<span class="line">  Connector::ConnectionStateListener_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connector-connectionstatelistener-vtbl" tabindex="-1"><a class="header-anchor" href="#connector-connectionstatelistener-vtbl"><span><code>Connector::ConnectionStateListener_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Connector::ConnectionStateListener_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ConnectionStateListener)(Connector::ConnectionStateListener *this);</span>
<span class="line">  void (__fastcall *onConnectionStateChanged)(Connector::ConnectionStateListener *this, const std::string *, const std::string *, unsigned int, unsigned int, unsigned int, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connector-vtbl" tabindex="-1"><a class="header-anchor" href="#connector-vtbl"><span><code>Connector_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Connector_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Connector)(Connector *this);</span>
<span class="line">  std::vector&lt;std::string&gt; *(__fastcall *getLocalIps)(Connector *this, std::vector&lt;std::string&gt; *result);</span>
<span class="line">  std::string *(__fastcall *getLocalIp)(Connector *this, std::string *result);</span>
<span class="line">  unsigned __int16 (__fastcall *getPort)(Connector *this);</span>
<span class="line">  std::vector&lt;RakNet::SystemAddress&gt; *(__fastcall *getRefinedLocalIps)(Connector *this, std::vector&lt;RakNet::SystemAddress&gt; *result);</span>
<span class="line">  const Social::GameConnectionInfo *(__fastcall *getConnectedGameInfo)(Connector *this);</span>
<span class="line">  void (__fastcall *setupNatPunch)(Connector *this, bool);</span>
<span class="line">  Connector::NatPunchInfo *(__fastcall *getNatPunchInfo)(Connector *this, Connector::NatPunchInfo *result);</span>
<span class="line">  void (__fastcall *startNatPunchingClient)(Connector *this, Social::GameConnectionInfo);</span>
<span class="line">  void (__fastcall *addConnectionStateListener)(Connector *this, Connector::ConnectionStateListener *);</span>
<span class="line">  void (__fastcall *removeConnectionStateListener)(Connector *this, Connector::ConnectionStateListener *);</span>
<span class="line">  bool (__fastcall *isIPv4Supported)(Connector *this);</span>
<span class="line">  bool (__fastcall *isIPv6Supported)(Connector *this);</span>
<span class="line">  unsigned __int16 (__fastcall *getIPv4Port)(Connector *this);</span>
<span class="line">  unsigned __int16 (__fastcall *getIPv6Port)(Connector *this);</span>
<span class="line">  RakNet::RakNetGUID *(__fastcall *getGUID)(Connector *this, RakNet::RakNetGUID *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-fileimpl" tabindex="-1"><a class="header-anchor" href="#core-fileimpl"><span><code>Core::FileImpl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Core::FileImpl</span>
<span class="line">{</span>
<span class="line">  Core::FileImpl_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::FileOpenMode mOpenMode;</span>
<span class="line">  Core::FileSystemImpl *mpTransaction;</span>
<span class="line">  bool mLoggingEnabled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-fileimpl-vtbl" tabindex="-1"><a class="header-anchor" href="#core-fileimpl-vtbl"><span><code>Core::FileImpl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::FileImpl_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FileImpl)(Core::FileImpl *this);</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; *(__fastcall *_getPath)(Core::FileImpl *this, Core::PathBuffer&lt;std::string &gt; *result);</span>
<span class="line">  unsigned __int64 (__fastcall *_getBlockSize)(Core::FileImpl *this);</span>
<span class="line">  bool (__fastcall *_isOpen)(Core::FileImpl *this);</span>
<span class="line">  Core::Result *(__fastcall *_close)(Core::FileImpl *this, Core::Result *result);</span>
<span class="line">  Core::Result *(__fastcall *_read)(Core::FileImpl *this, Core::Result *result, void *, unsigned __int64, unsigned __int64 *);</span>
<span class="line">  Core::Result *(__fastcall *_readExactly)(Core::FileImpl *this, Core::Result *result, void *, unsigned __int64);</span>
<span class="line">  Core::Result *(__fastcall *_skip)(Core::FileImpl *this, Core::Result *result, unsigned __int64);</span>
<span class="line">  Core::Result *(__fastcall *_readAtPosition)(Core::FileImpl *this, Core::Result *result, unsigned __int64, void *, unsigned __int64, unsigned __int64 *);</span>
<span class="line">  Core::Result *(__fastcall *_getPosition)(Core::FileImpl *this, Core::Result *result, unsigned __int64 *);</span>
<span class="line">  Core::Result *(__fastcall *_setPosition)(Core::FileImpl *this, Core::Result *result, unsigned __int64);</span>
<span class="line">  Core::Result *(__fastcall *_write)(Core::FileImpl *this, Core::Result *result, const void *, unsigned __int64);</span>
<span class="line">  Core::Result *(__fastcall *_flush)(Core::FileImpl *this, Core::Result *result);</span>
<span class="line">  Core::Result *(__fastcall *_getSize)(Core::FileImpl *this, Core::Result *result, unsigned __int64 *);</span>
<span class="line">  Core::Result *(__fastcall *_getRemainingSize)(Core::FileImpl *this, Core::Result *result, unsigned __int64 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-filesystemimpl" tabindex="-1"><a class="header-anchor" href="#core-filesystemimpl"><span><code>Core::FileSystemImpl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::FileSystemImpl</span>
<span class="line">{</span>
<span class="line">  Core::FileSystemImpl_vtbl *__vftable /*VFT*/;</span>
<span class="line">  std::shared_ptr&lt;Core::FileStorageArea&gt; mpStorageArea;</span>
<span class="line">  bool mLoggingEnabled;</span>
<span class="line">  bool mTransactionEnded;</span>
<span class="line">  __declspec(align(4)) _BYTE mTransactionFlags[4];</span>
<span class="line">  Core::FileAccessType mAccessType;</span>
<span class="line">  Core::FileStats mStats;</span>
<span class="line">  std::mutex mFileLock;</span>
<span class="line">  std::vector&lt;Core::FileImpl *&gt; mFiles;</span>
<span class="line">  Core::FlatFileSystemImpl mFlatFileSystem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-directoryiterationitem" tabindex="-1"><a class="header-anchor" href="#core-directoryiterationitem"><span><code>Core::DirectoryIterationItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj Core::DirectoryIterationItem</span>
<span class="line">{</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mFullPathName;</span>
<span class="line">  Core::PathPart mName;</span>
<span class="line">  unsigned __int64 mFileSize;</span>
<span class="line">  unsigned __int64 mFileSizeAllocationOnDisk;</span>
<span class="line">  _BYTE mType[4];</span>
<span class="line">  __int64 mCreateTime;</span>
<span class="line">  __int64 mModifyTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-filestoragearea" tabindex="-1"><a class="header-anchor" href="#core-filestoragearea"><span><code>Core::FileStorageArea</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Core::FileStorageArea : std::enable_shared_from_this&lt;Core::FileStorageArea&gt;</span>
<span class="line">{</span>
<span class="line">  Core::FileStorageArea_vtbl *__vftable /*VFT*/;</span>
<span class="line">  std::recursive_mutex mLock;</span>
<span class="line">  std::vector&lt;Core::FileSystemImpl *&gt; mAllTransactions;</span>
<span class="line">  bool mCanAttemptExtendSave;</span>
<span class="line">  bool mCachedFileUsageSize;</span>
<span class="line">  Core::FileStats mTransactionStats;</span>
<span class="line">  Core::FileStats mTotalStats;</span>
<span class="line">  Core::FileAccessType mAccessType;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mRootPath;</span>
<span class="line">  std::vector&lt;Core::FileSystemImpl *&gt; mWriteTransactions;</span>
<span class="line">  Core::Subject&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt; mSubject;</span>
<span class="line">  std::shared_ptr&lt;Core::FileStorageArea&gt; mParent;</span>
<span class="line">  Core::StorageAreaState mState;</span>
<span class="line">  std::atomic&lt;bool&gt; mFileIOSuspended;</span>
<span class="line">  std::condition_variable_any mResumeSignal;</span>
<span class="line">  bool mLoggingEnabled;</span>
<span class="line">  std::shared_ptr&lt;Core::FlatFileManifestTracker&gt; mManifestTracker;</span>
<span class="line">  bool mIsAccessedDirectly;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-filestoragearea-vtbl" tabindex="-1"><a class="header-anchor" href="#core-filestoragearea-vtbl"><span><code>Core::FileStorageArea_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::FileStorageArea_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~FileStorageArea)(Core::FileStorageArea *this);</span>
<span class="line">  std::unique_ptr&lt;Core::FileSystemImpl&gt; *(__fastcall *createTransaction)(Core::FileStorageArea *this, std::unique_ptr&lt;Core::FileSystemImpl&gt; *result, Core::FileAccessType, Core::TransactionFlags);</span>
<span class="line">  std::unique_ptr&lt;Core::FileSystemImpl&gt; *(__fastcall *createTransaction)(Core::FileStorageArea *this, std::unique_ptr&lt;Core::FileSystemImpl&gt; *result, Core::FileAccessType);</span>
<span class="line">  bool (__fastcall *supportsSizeQuery)(Core::FileStorageArea *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getTotalSize)(Core::FileStorageArea *this);</span>
<span class="line">  Core::Result *(__fastcall *getUsedSize)(Core::FileStorageArea *this, Core::Result *result, unsigned __int64 *);</span>
<span class="line">  void (__fastcall *notifyChangeInFileSize)(Core::FileStorageArea *this, __int64, __int64);</span>
<span class="line">  bool (__fastcall *handlesPendingWrites)(Core::FileStorageArea *this);</span>
<span class="line">  void (__fastcall *informPendingWriteSize)(Core::FileStorageArea *this, const unsigned __int64 *, const bool);</span>
<span class="line">  void (__fastcall *informStorageAreaCopy)(Core::FileStorageArea *this, const unsigned __int64 *);</span>
<span class="line">  bool (__fastcall *supportsExtendSize)(Core::FileStorageArea *this);</span>
<span class="line">  bool (__fastcall *canExtendSize)(Core::FileStorageArea *this);</span>
<span class="line">  void (__fastcall *resetCanAttemptExtendSize)(Core::FileStorageArea *this);</span>
<span class="line">  Core::Result *(__fastcall *getExtendSizeThreshold)(Core::FileStorageArea *this, Core::Result *result, unsigned __int64 *);</span>
<span class="line">  void (__fastcall *attemptExtendSize)(Core::FileStorageArea *this, const __int64 *, std::function&lt;void __cdecl(void)&gt;);</span>
<span class="line">  void (__fastcall *preemptiveExtendSize)(Core::FileStorageArea *this, const unsigned __int64, std::function&lt;void __cdecl(void)&gt;, std::function&lt;void __cdecl(void)&gt;);</span>
<span class="line">  void (__fastcall *unloadFlatFileManifests)(Core::FileStorageArea *this, bool);</span>
<span class="line">  bool (__fastcall *canFlushToDisk)(Core::FileStorageArea *this);</span>
<span class="line">  bool (__fastcall *needsTick)(Core::FileStorageArea *this);</span>
<span class="line">  void (__fastcall *tick)(Core::FileStorageArea *this);</span>
<span class="line">  void (__fastcall *flushImmediately)(Core::FileStorageArea *this);</span>
<span class="line">  void (__fastcall *enableFlushToDisk)(Core::FileStorageArea *this, bool);</span>
<span class="line">  bool (__fastcall *checkCorrupt)(Core::FileStorageArea *this, bool);</span>
<span class="line">  Core::FileStorageArea::FlushableLevelDbEnvType (__fastcall *getFlushableLevelDbEnvType)(Core::FileStorageArea *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getTransactionWriteSizeLimit)(Core::FileStorageArea *this);</span>
<span class="line">  Core::Result *(__fastcall *setSaveDataIcon)(Core::FileStorageArea *this, Core::Result *result, const Core::Path *);</span>
<span class="line">  bool (__fastcall *shouldAllowCommit)(Core::FileStorageArea *this);</span>
<span class="line">  void (__fastcall *trackFileWriteSize)(Core::FileStorageArea *this, const unsigned __int64);</span>
<span class="line">  Core::Result *(__fastcall *_commit)(Core::FileStorageArea *this, Core::Result *result);</span>
<span class="line">  Core::Result *(__fastcall *_onTransactionsEmpty)(Core::FileStorageArea *this, Core::Result *result, bool);</span>
<span class="line">  void (__fastcall *_onTeardown)(Core::FileStorageArea *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-core-filestorageareaobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-observer-core-filestorageareaobserver-core-singlethreadedlock"><span><code>Core::Observer&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-core-filestorageareaobserver-core-singlethreadedlock-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-core-filestorageareaobserver-core-singlethreadedlock-vtbl"><span><code>Core::Observer&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-subject-core-filestorageareaobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-subject-core-filestorageareaobserver-core-singlethreadedlock"><span><code>Core::Subject&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Subject&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::SingleThreadedLock mLock;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;Core::FileStorageAreaObserver *&gt;&gt; mObservers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-filestorageareaobserver" tabindex="-1"><a class="header-anchor" href="#core-filestorageareaobserver"><span><code>Core::FileStorageAreaObserver</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::FileStorageAreaObserver : Core::Observer&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-filestorageareaobserver-vtbl" tabindex="-1"><a class="header-anchor" href="#core-filestorageareaobserver-vtbl"><span><code>Core::FileStorageAreaObserver_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::FileStorageAreaObserver_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;Core::FileStorageAreaObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onBeginWrites)(Core::FileStorageAreaObserver *this);</span>
<span class="line">  void (__fastcall *_onEndWrites)(Core::FileStorageAreaObserver *this);</span>
<span class="line">  void (__fastcall *_onWriteFile)(Core::FileStorageAreaObserver *this, Core::Path);</span>
<span class="line">  void (__fastcall *_onDeleteFile)(Core::FileStorageAreaObserver *this, Core::Path);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-storageareastatelistener" tabindex="-1"><a class="header-anchor" href="#core-storageareastatelistener"><span><code>Core::StorageAreaStateListener</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::StorageAreaStateListener</span>
<span class="line">{</span>
<span class="line">  Core::StorageAreaStateListener_vtbl *__vftable /*VFT*/;</span>
<span class="line">  std::shared_ptr&lt;Core::FileStorageArea&gt; mFileStorageArea;</span>
<span class="line">  std::mutex mMutex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-storageareastatelistener-vtbl" tabindex="-1"><a class="header-anchor" href="#core-storageareastatelistener-vtbl"><span><code>Core::StorageAreaStateListener_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::StorageAreaStateListener_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StorageAreaStateListener)(Core::StorageAreaStateListener *this);</span>
<span class="line">  void (__fastcall *onExtendDiskSpace)(Core::StorageAreaStateListener *this, const bool, std::weak_ptr&lt;Core::FileStorageArea&gt; *, const unsigned __int64 *, std::function&lt;void __cdecl(void)&gt;);</span>
<span class="line">  void (__fastcall *onLowDiskSpace)(Core::StorageAreaStateListener *this, const bool);</span>
<span class="line">  void (__fastcall *onOutOfDiskSpace)(Core::StorageAreaStateListener *this, const bool);</span>
<span class="line">  void (__fastcall *onCriticalDiskError)(Core::StorageAreaStateListener *this, const bool, const Core::LevelStorageState *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-storageareastate" tabindex="-1"><a class="header-anchor" href="#core-storageareastate"><span><code>Core::StorageAreaState</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::StorageAreaState</span>
<span class="line">{</span>
<span class="line">  std::mutex mMutex;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mStorageAreaRootPath;</span>
<span class="line">  std::atomic&lt;bool&gt; mIsExtendDiskSpaceEvent;</span>
<span class="line">  std::atomic&lt;bool&gt; mIsLowDiskSpaceWarning;</span>
<span class="line">  std::atomic&lt;bool&gt; mIsOutOfDiskSpaceError;</span>
<span class="line">  std::atomic&lt;bool&gt; mIsCriticalDiskError;</span>
<span class="line">  std::vector&lt;Core::StorageAreaStateListener *&gt; mListeners;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-flatfilemanifestinfo" tabindex="-1"><a class="header-anchor" href="#core-flatfilemanifestinfo"><span><code>Core::FlatFileManifestInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Core::FlatFileManifestInfo</span>
<span class="line">{</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mPath;</span>
<span class="line">  unsigned __int64 mSeekPos;</span>
<span class="line">  unsigned __int64 mFileSize;</span>
<span class="line">  unsigned __int8 mFlags;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-flatfilemanifest" tabindex="-1"><a class="header-anchor" href="#core-flatfilemanifest"><span><code>Core::FlatFileManifest</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::FlatFileManifest</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,unsigned __int64&gt; mManifestEntriesMap;</span>
<span class="line">  std::vector&lt;Core::FlatFileManifestInfo&gt; mManifestInfoVector;</span>
<span class="line">  unsigned __int64 mEntriesCount;</span>
<span class="line">  unsigned __int64 mVersion;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mManifestPath;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-flatfilemanifesttracker" tabindex="-1"><a class="header-anchor" href="#core-flatfilemanifesttracker"><span><code>Core::FlatFileManifestTracker</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::FlatFileManifestTracker</span>
<span class="line">{</span>
<span class="line">  std::mutex mManifestsLock;</span>
<span class="line">  std::unordered_map&lt;std::string,std::shared_ptr&lt;Core::FlatFileManifest&gt;&gt; mManifestMap;</span>
<span class="line">  std::set&lt;std::string&gt; mManifestNames;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-flatfilesystemimpl" tabindex="-1"><a class="header-anchor" href="#core-flatfilesystemimpl"><span><code>Core::FlatFileSystemImpl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::FlatFileSystemImpl</span>
<span class="line">{</span>
<span class="line">  Core::FileSystemImpl *mFileSystemImpl;</span>
<span class="line">  std::shared_ptr&lt;Core::FlatFileManifestTracker&gt; mFlatFileManifestTracker;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-symmetric-isysteminterface-vtbl" tabindex="-1"><a class="header-anchor" href="#crypto-symmetric-isysteminterface-vtbl"><span><code>Crypto::Symmetric::ISystemInterface_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Crypto::Symmetric::ISystemInterface_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ISystemInterface)(Crypto::Symmetric::ISystemInterface *this);</span>
<span class="line">  void (__fastcall *init)(Crypto::Symmetric::ISystemInterface *this, const std::string *, const std::string *);</span>
<span class="line">  void (__fastcall *encrypt)(Crypto::Symmetric::ISystemInterface *this, const std::string *, std::string *);</span>
<span class="line">  void (__fastcall *decrypt)(Crypto::Symmetric::ISystemInterface *this, const std::string *, std::string *);</span>
<span class="line">  unsigned __int64 (__fastcall *getKeySize)(Crypto::Symmetric::ISystemInterface *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getBlockSize)(Crypto::Symmetric::ISystemInterface *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getEncryptionBufferSize)(Crypto::Symmetric::ISystemInterface *this, const unsigned __int64);</span>
<span class="line">  bool (__fastcall *encryptToBuffer)(Crypto::Symmetric::ISystemInterface *this, const char *, const unsigned __int64, char *, const unsigned __int64, unsigned __int64 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-symmetric-symmetric-vtbl" tabindex="-1"><a class="header-anchor" href="#crypto-symmetric-symmetric-vtbl"><span><code>Crypto::Symmetric::Symmetric_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Crypto::Symmetric::Symmetric_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ISystemInterface)(Crypto::Symmetric::ISystemInterface *this);</span>
<span class="line">  void (__fastcall *init)(Crypto::Symmetric::ISystemInterface *this, const std::string *, const std::string *);</span>
<span class="line">  void (__fastcall *encrypt)(Crypto::Symmetric::ISystemInterface *this, const std::string *, std::string *);</span>
<span class="line">  void (__fastcall *decrypt)(Crypto::Symmetric::ISystemInterface *this, const std::string *, std::string *);</span>
<span class="line">  unsigned __int64 (__fastcall *getKeySize)(Crypto::Symmetric::ISystemInterface *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getBlockSize)(Crypto::Symmetric::ISystemInterface *this);</span>
<span class="line">  unsigned __int64 (__fastcall *getEncryptionBufferSize)(Crypto::Symmetric::ISystemInterface *this, const unsigned __int64);</span>
<span class="line">  bool (__fastcall *encryptToBuffer)(Crypto::Symmetric::ISystemInterface *this, const char *, const unsigned __int64, char *, const unsigned __int64, unsigned __int64 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-hash-ihash-vtbl" tabindex="-1"><a class="header-anchor" href="#crypto-hash-ihash-vtbl"><span><code>Crypto::Hash::IHash_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Crypto::Hash::IHash_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IHash)(Crypto::Hash::IHash *this);</span>
<span class="line">  void (__fastcall *reset)(Crypto::Hash::IHash *this);</span>
<span class="line">  void (__fastcall *update)(Crypto::Hash::IHash *this, const void *, unsigned int);</span>
<span class="line">  void (__fastcall *final)(Crypto::Hash::IHash *this, unsigned __int8 *);</span>
<span class="line">  unsigned __int64 (__fastcall *resultSize)(Crypto::Hash::IHash *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-hash-hmac" tabindex="-1"><a class="header-anchor" href="#crypto-hash-hmac"><span><code>Crypto::Hash::HMAC</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Crypto::Hash::HMAC</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;Crypto::Hash::IHash&gt; mHash;</span>
<span class="line">  std::string mKey;</span>
<span class="line">  int mResultSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="correctplayermovepredictionpacket" tabindex="-1"><a class="header-anchor" href="#correctplayermovepredictionpacket"><span><code>CorrectPlayerMovePredictionPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) CorrectPlayerMovePredictionPacket : Packet</span>
<span class="line">{</span>
<span class="line">  Vec3 mPos;</span>
<span class="line">  Vec3 mPosDelta;</span>
<span class="line">  unsigned __int64 mTick;</span>
<span class="line">  bool mOnGround;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="correctplayermovepredictionpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#correctplayermovepredictionpacket-vtbl"><span><code>CorrectPlayerMovePredictionPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CorrectPlayerMovePredictionPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="codebuilderpacket" tabindex="-1"><a class="header-anchor" href="#codebuilderpacket"><span><code>CodeBuilderPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) CodeBuilderPacket : Packet</span>
<span class="line">{</span>
<span class="line">  std::string mURL;</span>
<span class="line">  bool mShouldOpenCodeBuilder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="codebuilderpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#codebuilderpacket-vtbl"><span><code>CodeBuilderPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CodeBuilderPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creativeitemregistry" tabindex="-1"><a class="header-anchor" href="#creativeitemregistry"><span><code>CreativeItemRegistry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CreativeItemRegistry : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;CreativeItemEntry&gt; mCreativeItems;</span>
<span class="line">  std::vector&lt;CreativeGroupInfo&gt; mCreativeGroups;</span>
<span class="line">  std::unordered_map&lt;enum CreativeItemCategory,CreativeItemGroupCategory&gt; mCreativeGroupCategories;</span>
<span class="line">  std::unordered_map&lt;TypedServerNetId&lt;CreativeItemNetIdTag,unsigned int,0&gt;,unsigned __int64,std::hash&lt;TypedServerNetId&lt;CreativeItemNetIdTag,unsigned int,0&gt; &gt;,std::equal_to&lt;TypedServerNetId&lt;CreativeItemNetIdTag,unsigned int,0&gt; &gt;,std::allocator&lt;std::pair&lt;TypedServerNetId&lt;CreativeItemNetIdTag,unsigned int,0&gt; const ,unsigned __int64&gt; &gt; &gt; mCreativeNetIdIndex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creativegroupinfo" tabindex="-1"><a class="header-anchor" href="#creativegroupinfo"><span><code>CreativeGroupInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CreativeGroupInfo : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  CreativeItemCategory mCategory;</span>
<span class="line">  CreativeItemRegistry *mRegistry;</span>
<span class="line">  HashedString mName;</span>
<span class="line">  ItemInstance mIcon;</span>
<span class="line">  unsigned int mIndex;</span>
<span class="line">  std::vector&lt;unsigned int&gt; mItemIndexes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creativeitemgroupcategory" tabindex="-1"><a class="header-anchor" href="#creativeitemgroupcategory"><span><code>CreativeItemGroupCategory</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CreativeItemGroupCategory : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  std::string mName;</span>
<span class="line">  CreativeItemCategory mCategory;</span>
<span class="line">  CreativeItemRegistry *mRegistry;</span>
<span class="line">  std::unordered_map&lt;HashedString,unsigned int&gt; mNamedGroupIndex;</span>
<span class="line">  std::vector&lt;unsigned int&gt; mGroupIndexes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creativecontentpacket" tabindex="-1"><a class="header-anchor" href="#creativecontentpacket"><span><code>CreativeContentPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj CreativeContentPacket : Packet</span>
<span class="line">{</span>
<span class="line">  const std::vector&lt;CreativeItemEntry&gt; *mWriteEntries;</span>
<span class="line">  std::vector&lt;CreativeItemEntry&gt; mReadEntries;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creativecontentpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#creativecontentpacket-vtbl"><span><code>CreativeContentPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CreativeContentPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="confirmskinpacket" tabindex="-1"><a class="header-anchor" href="#confirmskinpacket"><span><code>ConfirmSkinPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj ConfirmSkinPacket : Packet</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ConfirmSkinPacket::ConfirmSkinEntry&gt; mEntries;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="confirmskinpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#confirmskinpacket-vtbl"><span><code>ConfirmSkinPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ConfirmSkinPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changemodeltexturepacket-vtbl" tabindex="-1"><a class="header-anchor" href="#changemodeltexturepacket-vtbl"><span><code>ChangeModelTexturePacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChangeModelTexturePacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changemodeloffsetpacket" tabindex="-1"><a class="header-anchor" href="#changemodeloffsetpacket"><span><code>ChangeModelOffsetPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) ChangeModelOffsetPacket : Packet</span>
<span class="line">{</span>
<span class="line">  ActorUniqueID mEntityId;</span>
<span class="line">  Vec3 mModelOffset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changemodeloffsetpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#changemodeloffsetpacket-vtbl"><span><code>ChangeModelOffsetPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChangeModelOffsetPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changemodelbindpacket" tabindex="-1"><a class="header-anchor" href="#changemodelbindpacket"><span><code>ChangeModelBindPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj ChangeModelBindPacket : Packet</span>
<span class="line">{</span>
<span class="line">  ActorUniqueID mEntityId;</span>
<span class="line">  ActorUniqueID mBindEntityId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changemodelbindpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#changemodelbindpacket-vtbl"><span><code>ChangeModelBindPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChangeModelBindPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changemodelpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#changemodelpacket-vtbl"><span><code>ChangeModelPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChangeModelPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="combinepacket" tabindex="-1"><a class="header-anchor" href="#combinepacket"><span><code>CombinePacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj CombinePacket : Packet</span>
<span class="line">{</span>
<span class="line">  unsigned __int8 mCount;</span>
<span class="line">  std::string mContent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="combinepacket-vtbl" tabindex="-1"><a class="header-anchor" href="#combinepacket-vtbl"><span><code>CombinePacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CombinePacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="custompacket-vtbl" tabindex="-1"><a class="header-anchor" href="#custompacket-vtbl"><span><code>CustomPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CustomPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="complexinventorytransaction-vtbl" tabindex="-1"><a class="header-anchor" href="#complexinventorytransaction-vtbl"><span><code>ComplexInventoryTransaction_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ComplexInventoryTransaction_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ComplexInventoryTransaction)(ComplexInventoryTransaction *this);</span>
<span class="line">  void (__fastcall *read)(ComplexInventoryTransaction *this, ReadOnlyBinaryStream *);</span>
<span class="line">  void (__fastcall *write)(ComplexInventoryTransaction *this, BinaryStream *);</span>
<span class="line">  InventoryTransactionError (__fastcall *handle)(ComplexInventoryTransaction *this, Player *, bool);</span>
<span class="line">  void (__fastcall *onTransactionError)(ComplexInventoryTransaction *this, Player *, InventoryTransactionError);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerashakepacket" tabindex="-1"><a class="header-anchor" href="#camerashakepacket"><span><code>CameraShakePacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) CameraShakePacket : Packet</span>
<span class="line">{</span>
<span class="line">  float mIntensity;</span>
<span class="line">  float mSeconds;</span>
<span class="line">  CameraShakeType mShakeType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerashakepacket-vtbl" tabindex="-1"><a class="header-anchor" href="#camerashakepacket-vtbl"><span><code>CameraShakePacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraShakePacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerapacket" tabindex="-1"><a class="header-anchor" href="#camerapacket"><span><code>CameraPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj CameraPacket : Packet</span>
<span class="line">{</span>
<span class="line">  ActorUniqueID mCameraId;</span>
<span class="line">  ActorUniqueID mTargetPlayerId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerapacket-vtbl" tabindex="-1"><a class="header-anchor" href="#camerapacket-vtbl"><span><code>CameraPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="completedusingitempacket" tabindex="-1"><a class="header-anchor" href="#completedusingitempacket"><span><code>CompletedUsingItemPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj CompletedUsingItemPacket : Packet</span>
<span class="line">{</span>
<span class="line">  __int16 mItemId;</span>
<span class="line">  int mItemUseMethod;</span>
<span class="line">  std::optional&lt;ItemStack&gt; mItemStack;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="completedusingitempacket-vtbl" tabindex="-1"><a class="header-anchor" href="#completedusingitempacket-vtbl"><span><code>CompletedUsingItemPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CompletedUsingItemPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandblockupdatepacket-vtbl" tabindex="-1"><a class="header-anchor" href="#commandblockupdatepacket-vtbl"><span><code>CommandBlockUpdatePacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CommandBlockUpdatePacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandpropertybag" tabindex="-1"><a class="header-anchor" href="#commandpropertybag"><span><code>CommandPropertyBag</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandPropertyBag : PropertyBag</span>
<span class="line">{</span>
<span class="line">  CommandPropertyBag_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandpropertybag-vtbl" tabindex="-1"><a class="header-anchor" href="#commandpropertybag-vtbl"><span><code>CommandPropertyBag_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CommandPropertyBag_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CommandPropertyBag)(CommandPropertyBag *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandoutput" tabindex="-1"><a class="header-anchor" href="#commandoutput"><span><code>CommandOutput</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CommandOutput</span>
<span class="line">{</span>
<span class="line">  _BYTE mType[4];</span>
<span class="line">  std::unique_ptr&lt;CommandPropertyBag&gt; mBag;</span>
<span class="line">  std::vector&lt;CommandOutputMessage&gt; mMessages;</span>
<span class="line">  int mSuccessCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandoutputpacket" tabindex="-1"><a class="header-anchor" href="#commandoutputpacket"><span><code>CommandOutputPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj CommandOutputPacket : Packet</span>
<span class="line">{</span>
<span class="line">  CommandOriginData mOriginData;</span>
<span class="line">  CommandOutput mOutput;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandoutputpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#commandoutputpacket-vtbl"><span><code>CommandOutputPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CommandOutputPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandrequestpacket" tabindex="-1"><a class="header-anchor" href="#commandrequestpacket"><span><code>CommandRequestPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) CommandRequestPacket : Packet</span>
<span class="line">{</span>
<span class="line">  std::string mCommand;</span>
<span class="line">  CommandOriginData mOrigin;</span>
<span class="line">  bool mInternalSource;</span>
<span class="line">  bool mUnLimit;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandrequestpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#commandrequestpacket-vtbl"><span><code>CommandRequestPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CommandRequestPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkradiusupdatedpacket" tabindex="-1"><a class="header-anchor" href="#chunkradiusupdatedpacket"><span><code>ChunkRadiusUpdatedPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) ChunkRadiusUpdatedPacket : Packet</span>
<span class="line">{</span>
<span class="line">  int mChunkRadius;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkradiusupdatedpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#chunkradiusupdatedpacket-vtbl"><span><code>ChunkRadiusUpdatedPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChunkRadiusUpdatedPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcachestatuspacket" tabindex="-1"><a class="header-anchor" href="#clientcachestatuspacket"><span><code>ClientCacheStatusPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) ClientCacheStatusPacket : Packet</span>
<span class="line">{</span>
<span class="line">  bool mEnabled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcachestatuspacket-vtbl" tabindex="-1"><a class="header-anchor" href="#clientcachestatuspacket-vtbl"><span><code>ClientCacheStatusPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientCacheStatusPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientboundmapitemdatapacket-vtbl" tabindex="-1"><a class="header-anchor" href="#clientboundmapitemdatapacket-vtbl"><span><code>ClientboundMapItemDataPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientboundMapItemDataPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changedimensionpacket" tabindex="-1"><a class="header-anchor" href="#changedimensionpacket"><span><code>ChangeDimensionPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) ChangeDimensionPacket : Packet</span>
<span class="line">{</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; mDimensionId;</span>
<span class="line">  Vec3 mPos;</span>
<span class="line">  bool mRespawn;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changedimensionpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#changedimensionpacket-vtbl"><span><code>ChangeDimensionPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChangeDimensionPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcachemissresponsepacket" tabindex="-1"><a class="header-anchor" href="#clientcachemissresponsepacket"><span><code>ClientCacheMissResponsePacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientCacheMissResponsePacket : Packet</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;ClientBlobCache::Server::Blob&gt;&gt; mWriteMissingContent;</span>
<span class="line">  std::unordered_map&lt;unsigned __int64,std::string&gt; mReceivedMissingContent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcachemissresponsepacket-vtbl" tabindex="-1"><a class="header-anchor" href="#clientcachemissresponsepacket-vtbl"><span><code>ClientCacheMissResponsePacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientCacheMissResponsePacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcacheblobstatuspacket" tabindex="-1"><a class="header-anchor" href="#clientcacheblobstatuspacket"><span><code>ClientCacheBlobStatusPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj ClientCacheBlobStatusPacket : Packet</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;unsigned __int64&gt; mMissingIds;</span>
<span class="line">  std::vector&lt;unsigned __int64&gt; mFoundIds;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcacheblobstatuspacket-vtbl" tabindex="-1"><a class="header-anchor" href="#clientcacheblobstatuspacket-vtbl"><span><code>ClientCacheBlobStatusPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientCacheBlobStatusPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingeventpacket" tabindex="-1"><a class="header-anchor" href="#craftingeventpacket"><span><code>CraftingEventPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj CraftingEventPacket : Packet</span>
<span class="line">{</span>
<span class="line">  ContainerID mContainerId;</span>
<span class="line">  int mContainerType;</span>
<span class="line">  mce::UUID mRecipeId;</span>
<span class="line">  std::vector&lt;ItemStack&gt; mInputItems;</span>
<span class="line">  std::vector&lt;ItemStack&gt; mOutputItems;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingeventpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#craftingeventpacket-vtbl"><span><code>CraftingEventPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftingEventPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containercontentchangelistener-vtbl" tabindex="-1"><a class="header-anchor" href="#containercontentchangelistener-vtbl"><span><code>ContainerContentChangeListener_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerContentChangeListener_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);</span>
<span class="line">  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);</span>
<span class="line">  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="container-vtbl" tabindex="-1"><a class="header-anchor" href="#container-vtbl"><span><code>Container_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Container_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Container)(Container *this);</span>
<span class="line">  void (__fastcall *init)(Container *this);</span>
<span class="line">  void (__fastcall *serverInitItemStackIds)(Container *this, int, int, std::function&lt;void __cdecl(int,ItemStack const &amp;)&gt;);</span>
<span class="line">  void (__fastcall *addContentChangeListener)(Container *this, ContainerContentChangeListener *);</span>
<span class="line">  void (__fastcall *removeContentChangeListener)(Container *this, ContainerContentChangeListener *);</span>
<span class="line">  const ItemStack *(__fastcall *getItem)(Container *this, int);</span>
<span class="line">  bool (__fastcall *hasRoomForItem)(Container *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *addItem)(Container *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *addItemToFirstEmptySlot)(Container *this, ItemStack *);</span>
<span class="line">  void (__fastcall *setItem)(Container *this, int, const ItemStack *);</span>
<span class="line">  void (__fastcall *setItemWithForceBalance)(Container *this, int, const ItemStack *, bool);</span>
<span class="line">  void (__fastcall *removeItem)(Container *this, int, int);</span>
<span class="line">  void (__fastcall *removeAllItems)(Container *this);</span>
<span class="line">  void (__fastcall *dropContents)(Container *this, BlockSource *, const Vec3 *, bool);</span>
<span class="line">  int (__fastcall *getContainerSize)(Container *this);</span>
<span class="line">  int (__fastcall *getMaxStackSize)(Container *this);</span>
<span class="line">  void (__fastcall *startOpen)(Container *this, Player *);</span>
<span class="line">  void (__fastcall *stopOpen)(Container *this, Player *);</span>
<span class="line">  std::vector&lt;ItemStack&gt; *(__fastcall *getSlotCopies)(Container *this, std::vector&lt;ItemStack&gt; *result);</span>
<span class="line">  const std::vector&lt;ItemStack const *&gt; *(__fastcall *getSlots)(Container *this, const std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getItemCount)(Container *this, const ItemStack *);</span>
<span class="line">  int (__fastcall *findFirstSlotForItem)(Container *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canPushInItem)(Container *this, BlockSource *, int, int, const ItemInstance *);</span>
<span class="line">  bool (__fastcall *canPullOutItem)(Container *this, BlockSource *, int, int, const ItemInstance *);</span>
<span class="line">  void (__fastcall *setContainerChanged)(Container *this, int);</span>
<span class="line">  void (__fastcall *setContainerMoved)(Container *this);</span>
<span class="line">  void (__fastcall *setCustomName)(Container *this, const std::string *);</span>
<span class="line">  bool (__fastcall *hasCustomName)(Container *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Container *this, const CompoundTag *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Container *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *createTransactionContext)(Container *this, std::function&lt;void __cdecl(Container &amp;,int,ItemStack const &amp;,ItemStack const &amp;)&gt;, std::function&lt;void __cdecl(void)&gt;);</span>
<span class="line">  void (__fastcall *initializeContainerContents)(Container *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *reviewItems)(Container *this, Level *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containersizechangelistener" tabindex="-1"><a class="header-anchor" href="#containersizechangelistener"><span><code>ContainerSizeChangeListener</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerSizeChangeListener</span>
<span class="line">{</span>
<span class="line">  ContainerSizeChangeListener_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containersizechangelistener-vtbl" tabindex="-1"><a class="header-anchor" href="#containersizechangelistener-vtbl"><span><code>ContainerSizeChangeListener_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerSizeChangeListener_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *containerSizeChanged)(ContainerSizeChangeListener *this, int);</span>
<span class="line">  void (__fastcall *~ContainerSizeChangeListener)(ContainerSizeChangeListener *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingcontainer-vtbl" tabindex="-1"><a class="header-anchor" href="#craftingcontainer-vtbl"><span><code>CraftingContainer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftingContainer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Container)(Container *this);</span>
<span class="line">  void (__fastcall *init)(Container *this);</span>
<span class="line">  void (__fastcall *serverInitItemStackIds)(Container *this, int, int, std::function&lt;void __cdecl(int,ItemStack const &amp;)&gt;);</span>
<span class="line">  void (__fastcall *addContentChangeListener)(Container *this, ContainerContentChangeListener *);</span>
<span class="line">  void (__fastcall *removeContentChangeListener)(Container *this, ContainerContentChangeListener *);</span>
<span class="line">  const ItemStack *(__fastcall *getItem)(Container *this, int);</span>
<span class="line">  bool (__fastcall *hasRoomForItem)(Container *this, const ItemStack *);</span>
<span class="line">  void (__fastcall *addItem)(Container *this, ItemStack *);</span>
<span class="line">  bool (__fastcall *addItemToFirstEmptySlot)(Container *this, ItemStack *);</span>
<span class="line">  void (__fastcall *setItem)(Container *this, int, const ItemStack *);</span>
<span class="line">  void (__fastcall *setItemWithForceBalance)(Container *this, int, const ItemStack *, bool);</span>
<span class="line">  void (__fastcall *removeItem)(Container *this, int, int);</span>
<span class="line">  void (__fastcall *removeAllItems)(Container *this);</span>
<span class="line">  void (__fastcall *dropContents)(Container *this, BlockSource *, const Vec3 *, bool);</span>
<span class="line">  int (__fastcall *getContainerSize)(Container *this);</span>
<span class="line">  int (__fastcall *getMaxStackSize)(Container *this);</span>
<span class="line">  void (__fastcall *startOpen)(Container *this, Player *);</span>
<span class="line">  void (__fastcall *stopOpen)(Container *this, Player *);</span>
<span class="line">  std::vector&lt;ItemStack&gt; *(__fastcall *getSlotCopies)(Container *this, std::vector&lt;ItemStack&gt; *result);</span>
<span class="line">  const std::vector&lt;ItemStack const *&gt; *(__fastcall *getSlots)(Container *this, const std::vector&lt;ItemStack const *&gt; *result);</span>
<span class="line">  int (__fastcall *getItemCount)(Container *this, const ItemStack *);</span>
<span class="line">  int (__fastcall *findFirstSlotForItem)(Container *this, const ItemStack *);</span>
<span class="line">  bool (__fastcall *canPushInItem)(Container *this, BlockSource *, int, int, const ItemInstance *);</span>
<span class="line">  bool (__fastcall *canPullOutItem)(Container *this, BlockSource *, int, int, const ItemInstance *);</span>
<span class="line">  void (__fastcall *setContainerChanged)(Container *this, int);</span>
<span class="line">  void (__fastcall *setContainerMoved)(Container *this);</span>
<span class="line">  void (__fastcall *setCustomName)(Container *this, const std::string *);</span>
<span class="line">  bool (__fastcall *hasCustomName)(Container *this);</span>
<span class="line">  void (__fastcall *readAdditionalSaveData)(Container *this, const CompoundTag *);</span>
<span class="line">  void (__fastcall *addAdditionalSaveData)(Container *this, CompoundTag *);</span>
<span class="line">  void (__fastcall *createTransactionContext)(Container *this, std::function&lt;void __cdecl(Container &amp;,int,ItemStack const &amp;,ItemStack const &amp;)&gt;, std::function&lt;void __cdecl(void)&gt;);</span>
<span class="line">  void (__fastcall *initializeContainerContents)(Container *this, BlockSource *);</span>
<span class="line">  bool (__fastcall *reviewItems)(Container *this, Level *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containermixdataentry" tabindex="-1"><a class="header-anchor" href="#containermixdataentry"><span><code>ContainerMixDataEntry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct ContainerMixDataEntry</span>
<span class="line">{</span>
<span class="line">  int fromItemId;</span>
<span class="line">  int reagentItemId;</span>
<span class="line">  int toItemId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingdatapacket" tabindex="-1"><a class="header-anchor" href="#craftingdatapacket"><span><code>CraftingDataPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) CraftingDataPacket : Packet</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;CraftingDataEntry&gt; mCraftingEntries;</span>
<span class="line">  std::vector&lt;PotionMixDataEntry&gt; mPotionMixEntries;</span>
<span class="line">  std::vector&lt;ContainerMixDataEntry&gt; mContainerMixEntries;</span>
<span class="line">  std::vector&lt;DurabilityDataEntry&gt; mDurabilityDataEntries;</span>
<span class="line">  bool mClearRecipes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="craftingdatapacket-vtbl" tabindex="-1"><a class="header-anchor" href="#craftingdatapacket-vtbl"><span><code>CraftingDataPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CraftingDataPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containersetdatapacket" tabindex="-1"><a class="header-anchor" href="#containersetdatapacket"><span><code>ContainerSetDataPacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) ContainerSetDataPacket : Packet</span>
<span class="line">{</span>
<span class="line">  int mId;</span>
<span class="line">  int mValue;</span>
<span class="line">  ContainerID mContainerId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containersetdatapacket-vtbl" tabindex="-1"><a class="header-anchor" href="#containersetdatapacket-vtbl"><span><code>ContainerSetDataPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerSetDataPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containerclosepacket" tabindex="-1"><a class="header-anchor" href="#containerclosepacket"><span><code>ContainerClosePacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) ContainerClosePacket : Packet</span>
<span class="line">{</span>
<span class="line">  ContainerID mContainerId;</span>
<span class="line">  bool mServerInitiatedClose;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containerclosepacket-vtbl" tabindex="-1"><a class="header-anchor" href="#containerclosepacket-vtbl"><span><code>ContainerClosePacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerClosePacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containeropenpacket-vtbl" tabindex="-1"><a class="header-anchor" href="#containeropenpacket-vtbl"><span><code>ContainerOpenPacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerOpenPacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clienttoserverhandshakepacket" tabindex="-1"><a class="header-anchor" href="#clienttoserverhandshakepacket"><span><code>ClientToServerHandshakePacket</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj ClientToServerHandshakePacket : Packet</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clienttoserverhandshakepacket-vtbl" tabindex="-1"><a class="header-anchor" href="#clienttoserverhandshakepacket-vtbl"><span><code>ClientToServerHandshakePacket_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientToServerHandshakePacket_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Packet)(Packet *this);</span>
<span class="line">  MinecraftPacketIds (__fastcall *getId)(Packet *this);</span>
<span class="line">  std::string *(__fastcall *getName)(Packet *this, std::string *result);</span>
<span class="line">  void (__fastcall *write)(Packet *this, BinaryStream *);</span>
<span class="line">  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);</span>
<span class="line">  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);</span>
<span class="line">  bool (__fastcall *disallowBatching)(Packet *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="certificate" tabindex="-1"><a class="header-anchor" href="#certificate"><span><code>Certificate</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Certificate</span>
<span class="line">{</span>
<span class="line">  UnverifiedCertificate mUnverifiedCertificate;</span>
<span class="line">  std::unique_ptr&lt;Certificate&gt; mParentCertificate;</span>
<span class="line">  bool mIsValid;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compositepacksource" tabindex="-1"><a class="header-anchor" href="#compositepacksource"><span><code>CompositePackSource</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompositePackSource : PackSource</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;PackSource *&gt; mPackSources;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compositepacksource-vtbl" tabindex="-1"><a class="header-anchor" href="#compositepacksource-vtbl"><span><code>CompositePackSource_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CompositePackSource_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~PackSource)(PackSource *this);</span>
<span class="line">  void (__fastcall *forEachPackConst)(PackSource *this, std::function&lt;void __cdecl(Pack const &amp;)&gt;);</span>
<span class="line">  void (__fastcall *forEachPack)(PackSource *this, std::function&lt;void __cdecl(Pack &amp;)&gt;);</span>
<span class="line">  PackOrigin (__fastcall *getPackOrigin)(PackSource *this);</span>
<span class="line">  PackType (__fastcall *getPackType)(PackSource *this);</span>
<span class="line">  PackSourceReport *(__fastcall *load)(PackSource *this, PackSourceReport *result, PackManifestFactory *, const IContentKeyProvider *);</span>
<span class="line">  void (__fastcall *addPackSource)(PackSource *this, PackSource *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-webviewobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-observer-webviewobserver-core-singlethreadedlock"><span><code>Core::Observer&lt;WebviewObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;WebviewObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;WebviewObserver,Core::SingleThreadedLock&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;WebviewObserver,Core::SingleThreadedLock&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-webviewobserver-core-singlethreadedlock-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-webviewobserver-core-singlethreadedlock-vtbl"><span><code>Core::Observer&lt;WebviewObserver,Core::SingleThreadedLock&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;WebviewObserver,Core::SingleThreadedLock&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;WebviewObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;WebviewObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;WebviewObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-subject-webviewobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-subject-webviewobserver-core-singlethreadedlock"><span><code>Core::Subject&lt;WebviewObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Subject&lt;WebviewObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::SingleThreadedLock mLock;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;WebviewObserver *&gt;&gt; mObservers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chatoptions" tabindex="-1"><a class="header-anchor" href="#chatoptions"><span><code>ChatOptions</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChatOptions</span>
<span class="line">{</span>
<span class="line">  std::map&lt;enum OptionID,ChatOptions::ChatOption&gt; mChatOptions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-optionsobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-observer-optionsobserver-core-singlethreadedlock"><span><code>Core::Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;OptionsObserver,Core::SingleThreadedLock&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-optionsobserver-core-singlethreadedlock-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-optionsobserver-core-singlethreadedlock-vtbl"><span><code>Core::Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-subject-optionsobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-subject-optionsobserver-core-singlethreadedlock"><span><code>Core::Subject&lt;OptionsObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Subject&lt;OptionsObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::SingleThreadedLock mLock;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;OptionsObserver *&gt;&gt; mObservers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-social-xboxliveuserobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-observer-social-xboxliveuserobserver-core-singlethreadedlock"><span><code>Core::Observer&lt;Social::XboxLiveUserObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;Social::XboxLiveUserObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;Social::XboxLiveUserObserver,Core::SingleThreadedLock&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;Social::XboxLiveUserObserver,Core::SingleThreadedLock&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-social-xboxliveuserobserver-core-singlethreadedlock-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-social-xboxliveuserobserver-core-singlethreadedlock-vtbl"><span><code>Core::Observer&lt;Social::XboxLiveUserObserver,Core::SingleThreadedLock&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;Social::XboxLiveUserObserver,Core::SingleThreadedLock&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;Social::XboxLiveUserObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;Social::XboxLiveUserObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;Social::XboxLiveUserObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-subject-social-xboxliveuserobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-subject-social-xboxliveuserobserver-core-singlethreadedlock"><span><code>Core::Subject&lt;Social::XboxLiveUserObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Subject&lt;Social::XboxLiveUserObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::SingleThreadedLock mLock;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;Social::XboxLiveUserObserver *&gt;&gt; mObservers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contenttiermanager" tabindex="-1"><a class="header-anchor" href="#contenttiermanager"><span><code>ContentTierManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj ContentTierManager</span>
<span class="line">{</span>
<span class="line">  int mMemoryTier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-parsetoken" tabindex="-1"><a class="header-anchor" href="#commandregistry-parsetoken"><span><code>CommandRegistry::ParseToken</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::ParseToken</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;CommandRegistry::ParseToken&gt; child;</span>
<span class="line">  std::unique_ptr&lt;CommandRegistry::ParseToken&gt; next;</span>
<span class="line">  CommandRegistry::ParseToken *parent;</span>
<span class="line">  const char *text;</span>
<span class="line">  unsigned int length;</span>
<span class="line">  CommandRegistry::Symbol type;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-parserule" tabindex="-1"><a class="header-anchor" href="#commandregistry-parserule"><span><code>CommandRegistry::ParseRule</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::ParseRule</span>
<span class="line">{</span>
<span class="line">  CommandRegistry::Symbol nonTerminal;</span>
<span class="line">  std::function&lt;CommandRegistry::ParseToken * __cdecl(CommandRegistry::ParseToken &amp;,CommandRegistry::Symbol)&gt; process;</span>
<span class="line">  std::vector&lt;CommandRegistry::Symbol&gt; derivation;</span>
<span class="line">  CommandVersion versions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-parsetable" tabindex="-1"><a class="header-anchor" href="#commandregistry-parsetable"><span><code>CommandRegistry::ParseTable</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::ParseTable</span>
<span class="line">{</span>
<span class="line">  std::map&lt;CommandRegistry::Symbol,std::vector&lt;CommandRegistry::Symbol&gt;&gt; first;</span>
<span class="line">  std::map&lt;CommandRegistry::Symbol,std::vector&lt;CommandRegistry::Symbol&gt;&gt; follow;</span>
<span class="line">  std::map&lt;std::pair&lt;CommandRegistry::Symbol,CommandRegistry::Symbol&gt;,int,std::less&lt;std::pair&lt;CommandRegistry::Symbol,CommandRegistry::Symbol&gt; &gt;,std::allocator&lt;std::pair&lt;std::pair&lt;CommandRegistry::Symbol,CommandRegistry::Symbol&gt; const ,int&gt; &gt; &gt; predict;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-optionalparameterchain" tabindex="-1"><a class="header-anchor" href="#commandregistry-optionalparameterchain"><span><code>CommandRegistry::OptionalParameterChain</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::OptionalParameterChain</span>
<span class="line">{</span>
<span class="line">  int parameterCount;</span>
<span class="line">  int followingRuleIndex;</span>
<span class="line">  CommandRegistry::Symbol paramSymbol;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customparticle" tabindex="-1"><a class="header-anchor" href="#customparticle"><span><code>CustomParticle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CustomParticle</span>
<span class="line">{</span>
<span class="line">  CustomParticle_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customparticle-vtbl" tabindex="-1"><a class="header-anchor" href="#customparticle-vtbl"><span><code>CustomParticle_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CustomParticle_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CustomParticle)(CustomParticle *this);</span>
<span class="line">  void (__fastcall *normalTick)(CustomParticle *this);</span>
<span class="line">  void (__fastcall *render)(CustomParticle *this, BaseActorRenderContext *, const Vec3 *, float);</span>
<span class="line">  bool (__fastcall *isRemoved)(CustomParticle *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunksource-vtbl" tabindex="-1"><a class="header-anchor" href="#chunksource-vtbl"><span><code>ChunkSource_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChunkSource_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ChunkSource)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *shutdown)(ChunkSource *this);</span>
<span class="line">  bool (__fastcall *isShutdownDone)(ChunkSource *this);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getExistingChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getRandomChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, Random *);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *createNewChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *, ChunkSource::LoadMode);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getOrLoadChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *, ChunkSource::LoadMode);</span>
<span class="line">  bool (__fastcall *postProcess)(ChunkSource *this, ChunkViewSource *);</span>
<span class="line">  void (__fastcall *checkAndReplaceChunk)(ChunkSource *this, ChunkViewSource *, LevelChunk *);</span>
<span class="line">  void (__fastcall *loadChunk)(ChunkSource *this, LevelChunk *, bool);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(ChunkSource *this, BlockSource *, int, int, Random *);</span>
<span class="line">  bool (__fastcall *saveLiveChunk)(ChunkSource *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *hintDiscardBatchBegin)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *hintDiscardBatchEnd)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *acquireDiscarded)(ChunkSource *this, std::unique_ptr&lt;LevelChunk,LevelChunkFinalDeleter&gt;);</span>
<span class="line">  void (__fastcall *compact)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *flushPendingWrites)(ChunkSource *this);</span>
<span class="line">  bool (__fastcall *isWithinWorldLimit)(ChunkSource *this, const ChunkPos *);</span>
<span class="line">  const std::unordered_map&lt;ChunkPos,std::weak_ptr&lt;LevelChunk&gt;&gt; *(__fastcall *getChunkMap)(ChunkSource *this);</span>
<span class="line">  const std::unordered_map&lt;ChunkPos,std::weak_ptr&lt;LevelChunk&gt;&gt; *(__fastcall *getStorage)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *clearDeletedEntities)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *removeDimensionData)(ChunkSource *this, const std::unordered_set&lt;AutomaticID&lt;Dimension,int&gt;&gt; *);</span>
<span class="line">  bool (__fastcall *hasChunk)(ChunkSource *this, const ChunkPos *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *canCreateViews)(ChunkSource *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkviewsource-vtbl" tabindex="-1"><a class="header-anchor" href="#chunkviewsource-vtbl"><span><code>ChunkViewSource_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChunkViewSource_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ChunkSource)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *shutdown)(ChunkSource *this);</span>
<span class="line">  bool (__fastcall *isShutdownDone)(ChunkSource *this);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getExistingChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getRandomChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, Random *);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *createNewChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *, ChunkSource::LoadMode);</span>
<span class="line">  std::shared_ptr&lt;LevelChunk&gt; *(__fastcall *getOrLoadChunk)(ChunkSource *this, std::shared_ptr&lt;LevelChunk&gt; *result, const ChunkPos *, ChunkSource::LoadMode);</span>
<span class="line">  bool (__fastcall *postProcess)(ChunkSource *this, ChunkViewSource *);</span>
<span class="line">  void (__fastcall *checkAndReplaceChunk)(ChunkSource *this, ChunkViewSource *, LevelChunk *);</span>
<span class="line">  void (__fastcall *loadChunk)(ChunkSource *this, LevelChunk *, bool);</span>
<span class="line">  void (__fastcall *postProcessMobsAt)(ChunkSource *this, BlockSource *, int, int, Random *);</span>
<span class="line">  bool (__fastcall *saveLiveChunk)(ChunkSource *this, LevelChunk *);</span>
<span class="line">  void (__fastcall *hintDiscardBatchBegin)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *hintDiscardBatchEnd)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *acquireDiscarded)(ChunkSource *this, std::unique_ptr&lt;LevelChunk,LevelChunkFinalDeleter&gt;);</span>
<span class="line">  void (__fastcall *compact)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *flushPendingWrites)(ChunkSource *this);</span>
<span class="line">  bool (__fastcall *isWithinWorldLimit)(ChunkSource *this, const ChunkPos *);</span>
<span class="line">  const std::unordered_map&lt;ChunkPos,std::weak_ptr&lt;LevelChunk&gt;&gt; *(__fastcall *getChunkMap)(ChunkSource *this);</span>
<span class="line">  const std::unordered_map&lt;ChunkPos,std::weak_ptr&lt;LevelChunk&gt;&gt; *(__fastcall *getStorage)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *clearDeletedEntities)(ChunkSource *this);</span>
<span class="line">  void (__fastcall *removeDimensionData)(ChunkSource *this, const std::unordered_set&lt;AutomaticID&lt;Dimension,int&gt;&gt; *);</span>
<span class="line">  bool (__fastcall *hasChunk)(ChunkSource *this, const ChunkPos *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  bool (__fastcall *canCreateViews)(ChunkSource *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandarea" tabindex="-1"><a class="header-anchor" href="#commandarea"><span><code>CommandArea</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandArea</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;ChunkViewSource&gt; mChunkSource;</span>
<span class="line">  BlockSource mBlockSource;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-levelstorageresult" tabindex="-1"><a class="header-anchor" href="#core-levelstorageresult"><span><code>Core::LevelStorageResult</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::LevelStorageResult</span>
<span class="line">{</span>
<span class="line">  _BYTE state[4];</span>
<span class="line">  std::string telemetryMsg;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="callbacktokencancelstate" tabindex="-1"><a class="header-anchor" href="#callbacktokencancelstate"><span><code>CallbackTokenCancelState</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CallbackTokenCancelState</span>
<span class="line">{</span>
<span class="line">  std::atomic&lt;bool&gt; mCanceled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlogendpoint" tabindex="-1"><a class="header-anchor" href="#contentlogendpoint"><span><code>ContentLogEndPoint</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentLogEndPoint : Bedrock::LogEndPoint, Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlogendpoint-vtbl" tabindex="-1"><a class="header-anchor" href="#contentlogendpoint-vtbl"><span><code>ContentLogEndPoint_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContentLogEndPoint_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~LogEndPoint)(Bedrock::LogEndPoint *this);</span>
<span class="line">  void (__fastcall *log)(Bedrock::LogEndPoint *this, const char *);</span>
<span class="line">  void (__fastcall *flush)(Bedrock::LogEndPoint *this);</span>
<span class="line">  void (__fastcall *setEnabled)(Bedrock::LogEndPoint *this, bool);</span>
<span class="line">  bool (__fastcall *isEnabled)(Bedrock::LogEndPoint *this);</span>
<span class="line">  void (__fastcall *log)(ContentLogEndPoint *this, const LogArea, const LogLevel, const char *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry" tabindex="-1"><a class="header-anchor" href="#commandregistry"><span><code>CommandRegistry</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(Packet const &amp;)&gt; mNetworkUpdateCallback;</span>
<span class="line">  std::function&lt;int __cdecl(bool &amp;,std::string const &amp;,Actor const &amp;)&gt; mGetScoreForObjective;</span>
<span class="line">  std::vector&lt;CommandRegistry::ParseRule&gt; mRules;</span>
<span class="line">  std::map&lt;unsigned int,CommandRegistry::ParseTable&gt; mParseTables;</span>
<span class="line">  std::vector&lt;CommandRegistry::OptionalParameterChain&gt; mOptionals;</span>
<span class="line">  std::vector&lt;std::string&gt; mEnumValues;</span>
<span class="line">  std::vector&lt;CommandRegistry::Enum&gt; mEnums;</span>
<span class="line">  std::vector&lt;CommandRegistry::Factorization&gt; mFactorizations;</span>
<span class="line">  std::vector&lt;std::string&gt; mPostfixes;</span>
<span class="line">  std::map&lt;std::string,unsigned int&gt; mEnumLookup;</span>
<span class="line">  std::map&lt;std::string,unsigned __int64&gt; mEnumValueLookup;</span>
<span class="line">  std::vector&lt;CommandRegistry::Symbol&gt; mCommandSymbols;</span>
<span class="line">  std::map&lt;std::string,CommandRegistry::Signature&gt; mSignatures;</span>
<span class="line">  std::map&lt;typeid_t&lt;CommandRegistry&gt;,int,std::less&lt;typeid_t&lt;CommandRegistry&gt; &gt;,std::allocator&lt;std::pair&lt;typeid_t&lt;CommandRegistry&gt; const ,int&gt; &gt; &gt; mTypeLookup;</span>
<span class="line">  std::map&lt;std::string,std::string&gt; mAliases;</span>
<span class="line">  std::vector&lt;enum SemanticConstraint&gt; mSemanticConstraints;</span>
<span class="line">  std::map&lt;enum SemanticConstraint,unsigned char&gt; mSemanticConstraintLookup;</span>
<span class="line">  std::vector&lt;CommandRegistry::ConstrainedValue&gt; mConstrainedValues;</span>
<span class="line">  std::map&lt;std::pair&lt;unsigned __int64,unsigned int&gt;,unsigned int,std::less&lt;std::pair&lt;unsigned __int64,unsigned int&gt; &gt;,std::allocator&lt;std::pair&lt;std::pair&lt;unsigned __int64,unsigned int&gt; const ,unsigned int&gt; &gt; &gt; mConstrainedValueLookup;</span>
<span class="line">  std::vector&lt;CommandRegistry::SoftEnum&gt; mSoftEnums;</span>
<span class="line">  std::map&lt;std::string,unsigned int&gt; mSoftEnumLookup;</span>
<span class="line">  std::vector&lt;CommandRegistry::RegistryState&gt; mStateStack;</span>
<span class="line">  CommandRegistry::ParamSymbols mArgs;</span>
<span class="line">  std::function&lt;void __cdecl(CommandFlag &amp;,std::string const &amp;)&gt; mCommandOverrideFunctor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-social-multiplayerserviceobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-observer-social-multiplayerserviceobserver-core-singlethreadedlock"><span><code>Core::Observer&lt;Social::MultiplayerServiceObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;Social::MultiplayerServiceObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;Social::MultiplayerServiceObserver,Core::SingleThreadedLock&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;Social::MultiplayerServiceObserver,Core::SingleThreadedLock&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-social-multiplayerserviceobserver-core-singlethreadedlock-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-social-multiplayerserviceobserver-core-singlethreadedlock-vtbl"><span><code>Core::Observer&lt;Social::MultiplayerServiceObserver,Core::SingleThreadedLock&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;Social::MultiplayerServiceObserver,Core::SingleThreadedLock&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;Social::MultiplayerServiceObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;Social::MultiplayerServiceObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;Social::MultiplayerServiceObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-subject-social-multiplayerserviceobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-subject-social-multiplayerserviceobserver-core-singlethreadedlock"><span><code>Core::Subject&lt;Social::MultiplayerServiceObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Subject&lt;Social::MultiplayerServiceObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::SingleThreadedLock mLock;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;Social::MultiplayerServiceObserver *&gt;&gt; mObservers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-asymmetric-isysteminterface" tabindex="-1"><a class="header-anchor" href="#crypto-asymmetric-isysteminterface"><span><code>Crypto::Asymmetric::ISystemInterface</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Crypto::Asymmetric::ISystemInterface</span>
<span class="line">{</span>
<span class="line">  Crypto::Asymmetric::ISystemInterface_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-asymmetric-isysteminterface-vtbl" tabindex="-1"><a class="header-anchor" href="#crypto-asymmetric-isysteminterface-vtbl"><span><code>Crypto::Asymmetric::ISystemInterface_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Crypto::Asymmetric::ISystemInterface_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ISystemInterface)(Crypto::Asymmetric::ISystemInterface *this);</span>
<span class="line">  bool (__fastcall *generateKeyPair)(Crypto::Asymmetric::ISystemInterface *this, std::string *, std::string *);</span>
<span class="line">  std::string *(__fastcall *encryptData)(Crypto::Asymmetric::ISystemInterface *this, std::string *result, const std::string *, const std::string *, Crypto::Asymmetric::Padding, Crypto::Asymmetric::PubKeyFormat);</span>
<span class="line">  std::string *(__fastcall *decryptData)(Crypto::Asymmetric::ISystemInterface *this, std::string *result, const std::string *, const std::string *, Crypto::Asymmetric::Padding);</span>
<span class="line">  std::string *(__fastcall *signData)(Crypto::Asymmetric::ISystemInterface *this, std::string *result, const std::string *, const std::string *, Crypto::Hash::HashType);</span>
<span class="line">  bool (__fastcall *verifyData)(Crypto::Asymmetric::ISystemInterface *this, const std::string *, const std::string *, const std::string *, Crypto::Hash::HashType);</span>
<span class="line">  std::string *(__fastcall *computeSharedSecret)(Crypto::Asymmetric::ISystemInterface *this, std::string *result, const std::string *, const std::string *);</span>
<span class="line">  bool (__fastcall *ECCompressedKeyToPoint)(Crypto::Asymmetric::ISystemInterface *this, const std::string *, std::vector&lt;unsigned char&gt; *, std::vector&lt;unsigned char&gt; *);</span>
<span class="line">  std::string *(__fastcall *getSystemAsString)(Crypto::Asymmetric::ISystemInterface *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-asymmetric-asymmetric" tabindex="-1"><a class="header-anchor" href="#crypto-asymmetric-asymmetric"><span><code>Crypto::Asymmetric::Asymmetric</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Crypto::Asymmetric::Asymmetric : Crypto::Asymmetric::ISystemInterface</span>
<span class="line">{</span>
<span class="line">  Crypto::Asymmetric::System mSystem;</span>
<span class="line">  std::unique_ptr&lt;Crypto::Asymmetric::ISystemInterface&gt; mInterface;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-asymmetric-asymmetric-vtbl" tabindex="-1"><a class="header-anchor" href="#crypto-asymmetric-asymmetric-vtbl"><span><code>Crypto::Asymmetric::Asymmetric_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Crypto::Asymmetric::Asymmetric_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ISystemInterface)(Crypto::Asymmetric::ISystemInterface *this);</span>
<span class="line">  bool (__fastcall *generateKeyPair)(Crypto::Asymmetric::ISystemInterface *this, std::string *, std::string *);</span>
<span class="line">  std::string *(__fastcall *encryptData)(Crypto::Asymmetric::ISystemInterface *this, std::string *result, const std::string *, const std::string *, Crypto::Asymmetric::Padding, Crypto::Asymmetric::PubKeyFormat);</span>
<span class="line">  std::string *(__fastcall *decryptData)(Crypto::Asymmetric::ISystemInterface *this, std::string *result, const std::string *, const std::string *, Crypto::Asymmetric::Padding);</span>
<span class="line">  std::string *(__fastcall *signData)(Crypto::Asymmetric::ISystemInterface *this, std::string *result, const std::string *, const std::string *, Crypto::Hash::HashType);</span>
<span class="line">  bool (__fastcall *verifyData)(Crypto::Asymmetric::ISystemInterface *this, const std::string *, const std::string *, const std::string *, Crypto::Hash::HashType);</span>
<span class="line">  std::string *(__fastcall *computeSharedSecret)(Crypto::Asymmetric::ISystemInterface *this, std::string *result, const std::string *, const std::string *);</span>
<span class="line">  bool (__fastcall *ECCompressedKeyToPoint)(Crypto::Asymmetric::ISystemInterface *this, const std::string *, std::vector&lt;unsigned char&gt; *, std::vector&lt;unsigned char&gt; *);</span>
<span class="line">  std::string *(__fastcall *getSystemAsString)(Crypto::Asymmetric::ISystemInterface *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandoutputsender" tabindex="-1"><a class="header-anchor" href="#commandoutputsender"><span><code>CommandOutputSender</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandOutputSender</span>
<span class="line">{</span>
<span class="line">  CommandOutputSender_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Automation::AutomationClient *mAutomationClient;</span>
<span class="line">  std::function&lt;void __cdecl(AutomationCmdOutput &amp;)&gt; mEmplaceTestCommandOutputCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandoutputsender-vtbl" tabindex="-1"><a class="header-anchor" href="#commandoutputsender-vtbl"><span><code>CommandOutputSender_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CommandOutputSender_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CommandOutputSender)(CommandOutputSender *this);</span>
<span class="line">  void (__fastcall *send)(CommandOutputSender *this, const CommandOrigin *, const CommandOutput *);</span>
<span class="line">  void (__fastcall *registerOutputCallback)(CommandOutputSender *this, const std::function&lt;void __cdecl(AutomationCmdOutput &amp;)&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-automation-automationobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-observer-automation-automationobserver-core-singlethreadedlock"><span><code>Core::Observer&lt;Automation::AutomationObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;Automation::AutomationObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;Automation::AutomationObserver,Core::SingleThreadedLock&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;Automation::AutomationObserver,Core::SingleThreadedLock&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-automation-automationobserver-core-singlethreadedlock-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-automation-automationobserver-core-singlethreadedlock-vtbl"><span><code>Core::Observer&lt;Automation::AutomationObserver,Core::SingleThreadedLock&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;Automation::AutomationObserver,Core::SingleThreadedLock&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;Automation::AutomationObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;Automation::AutomationObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;Automation::AutomationObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-subject-automation-automationobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-subject-automation-automationobserver-core-singlethreadedlock"><span><code>Core::Subject&lt;Automation::AutomationObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Subject&lt;Automation::AutomationObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::SingleThreadedLock mLock;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;Automation::AutomationObserver *&gt;&gt; mObservers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="command" tabindex="-1"><a class="header-anchor" href="#command"><span><code>Command</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) Command</span>
<span class="line">{</span>
<span class="line">  Command_vtbl *__vftable /*VFT*/;</span>
<span class="line">  int mVersion;</span>
<span class="line">  const CommandRegistry *mRegistry;</span>
<span class="line">  int mCommandSymbol;</span>
<span class="line">  _BYTE mPermissionLevel[1];</span>
<span class="line">  CommandFlag mFlags;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="command-vtbl" tabindex="-1"><a class="header-anchor" href="#command-vtbl"><span><code>Command_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Command_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblobcache-server-activetransfersmanager" tabindex="-1"><a class="header-anchor" href="#clientblobcache-server-activetransfersmanager"><span><code>ClientBlobCache::Server::ActiveTransfersManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlobCache::Server::ActiveTransfersManager</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;NetworkIdentifier,std::unique_ptr&lt;ClientBlobCache::Server::ActiveTransfersManager::TransferTracker&gt;&gt; mTransferTrackerMap;</span>
<span class="line">  std::map&lt;unsigned __int64,std::weak_ptr&lt;ClientBlobCache::Server::Blob&gt;&gt; mSentBlobs;</span>
<span class="line">  unsigned __int64 mCacheSizeBytes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblobcache-server-activetransfersmanager-transfertracker" tabindex="-1"><a class="header-anchor" href="#clientblobcache-server-activetransfersmanager-transfertracker"><span><code>ClientBlobCache::Server::ActiveTransfersManager::TransferTracker</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ClientBlobCache::Server::ActiveTransfersManager::TransferTracker</span>
<span class="line">{</span>
<span class="line">  ClientBlobCache::Server::ActiveTransfersManager *mCache;</span>
<span class="line">  const NetworkIdentifier mOwner;</span>
<span class="line">  std::vector&lt;ClientBlobCache::Server::ActiveTransfer&gt; mTransfers;</span>
<span class="line">  unsigned int mMaxConcurrentTransfers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="classroommodenetworkhandler" tabindex="-1"><a class="header-anchor" href="#classroommodenetworkhandler"><span><code>ClassroomModeNetworkHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ClassroomModeNetworkHandler : NetEventCallback, Bedrock::Threading::EnableQueueForMainThread</span>
<span class="line">{</span>
<span class="line">  Automation::AutomationClient *mAutomationClient;</span>
<span class="line">  std::unique_ptr&lt;RoleChecker&gt; mRoleChecker;</span>
<span class="line">  std::string mTenantId;</span>
<span class="line">  std::string mLastRequestAddress;</span>
<span class="line">  bool mIsDedicatedServer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-filestdstreambuf-vtbl" tabindex="-1"><a class="header-anchor" href="#core-filestdstreambuf-vtbl"><span><code>Core::FileStdStreamBuf_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::FileStdStreamBuf_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~basic_streambuf&lt;char,std::char_traits&lt;char&gt; &gt;)(std::streambuf *this);</span>
<span class="line">  void (__fastcall *_Lock)(std::streambuf *this);</span>
<span class="line">  void (__fastcall *_Unlock)(std::streambuf *this);</span>
<span class="line">  int (__fastcall *overflow)(std::streambuf *this, int);</span>
<span class="line">  int (__fastcall *pbackfail)(std::streambuf *this, int);</span>
<span class="line">  __int64 (__fastcall *showmanyc)(std::streambuf *this);</span>
<span class="line">  int (__fastcall *underflow)(std::streambuf *this);</span>
<span class="line">  int (__fastcall *uflow)(std::streambuf *this);</span>
<span class="line">  __int64 (__fastcall *xsgetn)(std::streambuf *this, char *, __int64);</span>
<span class="line">  __int64 (__fastcall *xsputn)(std::streambuf *this, const char *, __int64);</span>
<span class="line">  std::fpos&lt;_Mbstatet&gt; *(__fastcall *seekoff)(std::streambuf *this, std::fpos&lt;_Mbstatet&gt; *result, __int64, int, int);</span>
<span class="line">  std::fpos&lt;_Mbstatet&gt; *(__fastcall *seekpos)(std::streambuf *this, std::fpos&lt;_Mbstatet&gt; *result, std::fpos&lt;_Mbstatet&gt;, int);</span>
<span class="line">  std::streambuf *(__fastcall *setbuf)(std::streambuf *this, char *, __int64);</span>
<span class="line">  int (__fastcall *sync)(std::streambuf *this);</span>
<span class="line">  void (__fastcall *imbue)(std::streambuf *this, const std::locale *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-filestream-vtbl" tabindex="-1"><a class="header-anchor" href="#core-filestream-vtbl"><span><code>Core::FileStream_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::FileStream_vtbl</span>
<span class="line">{</span>
<span class="line">  void *(__fastcall *__vecDelDtor)(Core::FileStream *this, unsigned int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-outputfilestream-vtbl" tabindex="-1"><a class="header-anchor" href="#core-outputfilestream-vtbl"><span><code>Core::OutputFileStream_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::OutputFileStream_vtbl</span>
<span class="line">{</span>
<span class="line">  void *(__fastcall *__vecDelDtor)(Core::OutputFileStream *this, unsigned int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="catalogbackend" tabindex="-1"><a class="header-anchor" href="#catalogbackend"><span><code>CatalogBackend</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CatalogBackend</span>
<span class="line">{</span>
<span class="line">  CatalogBackend_vtbl *__vftable /*VFT*/;</span>
<span class="line">  CatalogProviderId mProviderId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="catalogbackend-vtbl" tabindex="-1"><a class="header-anchor" href="#catalogbackend-vtbl"><span><code>CatalogBackend_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CatalogBackend_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CatalogBackend)(CatalogBackend *this);</span>
<span class="line">  const std::string *(__fastcall *getCachedFilePrefix)(CatalogBackend *this);</span>
<span class="line">  bool (__fastcall *usePascalCase)(CatalogBackend *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customdocumentmodifier" tabindex="-1"><a class="header-anchor" href="#customdocumentmodifier"><span><code>CustomDocumentModifier</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CustomDocumentModifier</span>
<span class="line">{</span>
<span class="line">  gsl::not_null&lt;Bedrock::NonOwnerPointer&lt;DateManager const &gt; &gt; mDateManager;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commoncontent" tabindex="-1"><a class="header-anchor" href="#commoncontent"><span><code>CommonContent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommonContent</span>
<span class="line">{</span>
<span class="line">  std::string id;</span>
<span class="line">  std::string url;</span>
<span class="line">  std::string type;</span>
<span class="line">  std::string maxClientVersion;</span>
<span class="line">  std::string minClientVersion;</span>
<span class="line">  std::vector&lt;std::string&gt; tags;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commonimage" tabindex="-1"><a class="header-anchor" href="#commonimage"><span><code>CommonImage</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommonImage</span>
<span class="line">{</span>
<span class="line">  std::string id;</span>
<span class="line">  std::string tag;</span>
<span class="line">  std::string type;</span>
<span class="line">  std::string url;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentcatalogpacksource" tabindex="-1"><a class="header-anchor" href="#contentcatalogpacksource"><span><code>ContentCatalogPackSource</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ContentCatalogPackSource : PackSource</span>
<span class="line">{</span>
<span class="line">  gsl::not_null&lt;Bedrock::NonOwnerPointer&lt;ContentCatalogService&gt; &gt; mCatalogService;</span>
<span class="line">  IEntitlementManager *mEntitlementManager;</span>
<span class="line">  bool mEnabled;</span>
<span class="line">  std::shared_ptr&lt;bool&gt; mExistenceTracker;</span>
<span class="line">  int mIconFetchesRemaining;</span>
<span class="line">  ContentCatalogPackSource::FetchingState mFetchingCatalogEntries;</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;Pack&gt;&gt; mPacks;</span>
<span class="line">  std::vector&lt;DurableDocument&gt; mDocuments;</span>
<span class="line">  std::function&lt;void __cdecl(bool)&gt; mOnAsyncLoadComplete;</span>
<span class="line">  bool mHighPriorityIconRequests;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentcatalogpacksource-vtbl" tabindex="-1"><a class="header-anchor" href="#contentcatalogpacksource-vtbl"><span><code>ContentCatalogPackSource_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContentCatalogPackSource_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~PackSource)(PackSource *this);</span>
<span class="line">  void (__fastcall *forEachPackConst)(PackSource *this, std::function&lt;void __cdecl(Pack const &amp;)&gt;);</span>
<span class="line">  void (__fastcall *forEachPack)(PackSource *this, std::function&lt;void __cdecl(Pack &amp;)&gt;);</span>
<span class="line">  PackOrigin (__fastcall *getPackOrigin)(PackSource *this);</span>
<span class="line">  PackType (__fastcall *getPackType)(PackSource *this);</span>
<span class="line">  PackSourceReport *(__fastcall *load)(PackSource *this, PackSourceReport *result, PackManifestFactory *, const IContentKeyProvider *);</span>
<span class="line">  void (__fastcall *addPackSource)(PackSource *this, PackSource *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="catalogcollection" tabindex="-1"><a class="header-anchor" href="#catalogcollection"><span><code>CatalogCollection</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CatalogCollection</span>
<span class="line">{</span>
<span class="line">  StoreCatalogRepository *mStoreCatalog;</span>
<span class="line">  gsl::not_null&lt;Bedrock::NonOwnerPointer&lt;ContentCatalogService&gt; &gt; mContentCatalogService;</span>
<span class="line">  IEntitlementManager *mEntitlementManager;</span>
<span class="line">  StoreCatalogItem *mInvalidItem;</span>
<span class="line">  std::shared_ptr&lt;bool&gt; mExistenceTracker;</span>
<span class="line">  std::shared_ptr&lt;CatalogCollection::CatalogCollectionListener&gt; mEntitlementChangeListener;</span>
<span class="line">  __int64 mSaleExpirationTime;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;StoreCatalogItem *&gt;&gt; mContents;</span>
<span class="line">  std::unordered_set&lt;std::string&gt; mContentProductIds;</span>
<span class="line">  std::function&lt;bool __cdecl(StoreCatalogItem const &amp;)&gt; mFilterOutIfTrue;</span>
<span class="line">  int mItemLimit;</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;SearchQuery&gt;&gt; mQueries;</span>
<span class="line">  std::vector&lt;CatalogCollection::QueryContentInfo&gt; mContentCountPerQuery;</span>
<span class="line">  bool mFetchingItems;</span>
<span class="line">  bool mHasUpcomingSale;</span>
<span class="line">  bool mFilterOwnedToBack;</span>
<span class="line">  bool mFilterOutInvalidOffers;</span>
<span class="line">  bool mClientSortEnabled;</span>
<span class="line">  bool mTotalNumberOffersSent;</span>
<span class="line">  bool mSent;</span>
<span class="line">  bool mIsPromoRow;</span>
<span class="line">  bool mDirty;</span>
<span class="line">  bool mReady;</span>
<span class="line">  int mQueryIndex;</span>
<span class="line">  int mContentFetchLimit;</span>
<span class="line">  int mVisibleItemsPerPage;</span>
<span class="line">  int mFirstVisibleItemIndex;</span>
<span class="line">  std::mutex mContentCheck;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="catalogcollection-catalogcollectionlistener" tabindex="-1"><a class="header-anchor" href="#catalogcollection-catalogcollectionlistener"><span><code>CatalogCollection::CatalogCollectionListener</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CatalogCollection::CatalogCollectionListener : EntitlementChangeListener</span>
<span class="line">{</span>
<span class="line">  CatalogCollection *mCollection;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="catalogcollection-catalogcollectionlistener-vtbl" tabindex="-1"><a class="header-anchor" href="#catalogcollection-catalogcollectionlistener-vtbl"><span><code>CatalogCollection::CatalogCollectionListener_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CatalogCollection::CatalogCollectionListener_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~EntitlementChangeListener)(EntitlementChangeListener *this);</span>
<span class="line">  void (__fastcall *_onEntitlementChanged)(EntitlementChangeListener *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="catalogcollection-querycontentinfo" tabindex="-1"><a class="header-anchor" href="#catalogcollection-querycontentinfo"><span><code>CatalogCollection::QueryContentInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) CatalogCollection::QueryContentInfo</span>
<span class="line">{</span>
<span class="line">  int mTotalContentCount;</span>
<span class="line">  int mFilteredContent;</span>
<span class="line">  int mSkipAmount;</span>
<span class="line">  int mPossibleContent;</span>
<span class="line">  bool mHasCheckedContentCount;</span>
<span class="line">  bool mHasExhaustedQuery;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="carouselcomponent" tabindex="-1"><a class="header-anchor" href="#carouselcomponent"><span><code>CarouselComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CarouselComponent : StoreUIComponent</span>
<span class="line">{</span>
<span class="line">  bool mShouldCarouselCycle;</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;StoreVisualStyle&gt;&gt; mCarouselStyles;</span>
<span class="line">  int mCurrentCarouselPage;</span>
<span class="line">  float mCarouselTimer;</span>
<span class="line">  int mCarouselTimerDuration;</span>
<span class="line">  std::chrono::time_point&lt;std::chrono::steady_clock,std::chrono::duration&lt;__int64,std::ratio&lt;1,1000000000&gt; &gt; &gt; mTimeLastChecked;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="carouselcomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#carouselcomponent-vtbl"><span><code>CarouselComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CarouselComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~StoreUIComponent)(StoreUIComponent *this);</span>
<span class="line">  void (__fastcall *tick)(StoreUIComponent *this, ui::DirtyFlag *);</span>
<span class="line">  bool (__fastcall *canRemove)(StoreUIComponent *this);</span>
<span class="line">  int (__fastcall *getReadyCount)(StoreUIComponent *this);</span>
<span class="line">  void (__fastcall *parseData)(StoreUIComponent *this, const struct web::json::value *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentcatalogservice" tabindex="-1"><a class="header-anchor" href="#contentcatalogservice"><span><code>ContentCatalogService</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentCatalogService : ServiceClient, Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;CatalogBackend&gt; mCatalogBackendPlayFab;</span>
<span class="line">  std::shared_ptr&lt;CatalogBackend&gt; mCatalogBackendXforge;</span>
<span class="line">  std::shared_ptr&lt;CatalogBackend&gt; mCatalogBackendPersonaService;</span>
<span class="line">  gsl::not_null&lt;Bedrock::NonOwnerPointer&lt;DateManager const &gt; &gt; mDateManager;</span>
<span class="line">  CustomDocumentModifier mCustomModifier;</span>
<span class="line">  std::unique_ptr&lt;OwnedDurablesPagingCache&gt; mOwnedDurablesPagingInterface;</span>
<span class="line">  std::string mAcceptLanguage;</span>
<span class="line">  const Core::PathBuffer&lt;std::string &gt; mDefaultCacheLocation;</span>
<span class="line">  std::unordered_map&lt;enum CatalogRequestType,Core::PathBuffer&lt;std::string &gt;&gt; mCacheLocationPerType;</span>
<span class="line">  std::string mPlatformOverride;</span>
<span class="line">  std::shared_ptr&lt;bool&gt; mExistenceTracker;</span>
<span class="line">  unsigned int mCacheDurationSeconds;</span>
<span class="line">  int mCacheExpirationOffsetSec;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentcatalogservice-vtbl" tabindex="-1"><a class="header-anchor" href="#contentcatalogservice-vtbl"><span><code>ContentCatalogService_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContentCatalogService_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ServiceClient)(ServiceClient *this);</span>
<span class="line">  void (__fastcall *update)(ServiceClient *this);</span>
<span class="line">  void (__fastcall *_submitRequest)(ServiceClient *this, std::shared_ptr&lt;RequestHandler&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controlleridtoclientmap" tabindex="-1"><a class="header-anchor" href="#controlleridtoclientmap"><span><code>ControllerIDtoClientMap</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ControllerIDtoClientMap</span>
<span class="line">{</span>
<span class="line">  std::map&lt;int,std::weak_ptr&lt;IClientInstance&gt;&gt; controllerIDtoClientMap;</span>
<span class="line">  bool useGameControllerId;</span>
<span class="line">  bool onScreenAcceptingAllControllerInput;</span>
<span class="line">  bool acceptInputFromAllControllers;</span>
<span class="line">  bool inGame;</span>
<span class="line">  int primaryUserControllerId;</span>
<span class="line">  int lastInputUserControllerId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-levellocationobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-observer-levellocationobserver-core-singlethreadedlock"><span><code>Core::Observer&lt;LevelLocationObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;LevelLocationObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;LevelLocationObserver,Core::SingleThreadedLock&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;LevelLocationObserver,Core::SingleThreadedLock&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-levellocationobserver-core-singlethreadedlock-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-levellocationobserver-core-singlethreadedlock-vtbl"><span><code>Core::Observer&lt;LevelLocationObserver,Core::SingleThreadedLock&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;LevelLocationObserver,Core::SingleThreadedLock&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;LevelLocationObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;LevelLocationObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;LevelLocationObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-subject-levellocationobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-subject-levellocationobserver-core-singlethreadedlock"><span><code>Core::Subject&lt;LevelLocationObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Subject&lt;LevelLocationObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::SingleThreadedLock mLock;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;LevelLocationObserver *&gt;&gt; mObservers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-blockschematicpart" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-blockschematicpart"><span><code>ClientBlockPipeline::BlockSchematicPart</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::BlockSchematicPart</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ClientBlockPipeline::BoxSchematic&gt; mBoxes;</span>
<span class="line">  std::string mName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-blockschematic" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-blockschematic"><span><code>ClientBlockPipeline::BlockSchematic</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::BlockSchematic</span>
<span class="line">{</span>
<span class="line">  Matrix mModelToGridTransform;</span>
<span class="line">  std::vector&lt;ClientBlockPipeline::BlockSchematicPart&gt; mParts;</span>
<span class="line">  std::vector&lt;std::string&gt; mMaterialNames;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-material" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-material"><span><code>ClientBlockPipeline::Material</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(8)) ClientBlockPipeline::Material : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  const TerrainLayer *mTerrainLayer;</span>
<span class="line">  TextureUVCoordinateSet mUvSet;</span>
<span class="line">  bool mAmbientOcclusion;</span>
<span class="line">  bool mFaceDimming;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-materialrepository" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-materialrepository"><span><code>ClientBlockPipeline::MaterialRepository</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::MaterialRepository</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;ClientBlockPipeline::Material const &gt;&gt; mMaterials;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-schematicsrepository" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-schematicsrepository"><span><code>ClientBlockPipeline::SchematicsRepository</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::SchematicsRepository</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;HashedString,std::shared_ptr&lt;ClientBlockPipeline::BlockSchematic&gt;&gt; mSchematicNameMap;</span>
<span class="line">  std::shared_ptr&lt;ClientBlockPipeline::MaterialRepository&gt; mMaterialRepository;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="callbacktokencontext-std-function-void-cdecl-enum-social-userplatformconnectionresult" tabindex="-1"><a class="header-anchor" href="#callbacktokencontext-std-function-void-cdecl-enum-social-userplatformconnectionresult"><span><code>CallbackTokenContext&lt;std::function&lt;void __cdecl(enum Social::UserPlatformConnectionResult)&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CallbackTokenContext&lt;std::function&lt;void __cdecl(enum Social::UserPlatformConnectionResult)&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::function&lt;void __cdecl(enum Social::UserPlatformConnectionResult)&gt;&gt; mCallbacks;</span>
<span class="line">  std::shared_ptr&lt;CallbackTokenCancelState&gt; mCancelState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="callbacktokencontext-std-function-void-cdecl-core-result" tabindex="-1"><a class="header-anchor" href="#callbacktokencontext-std-function-void-cdecl-core-result"><span><code>CallbackTokenContext&lt;std::function&lt;void __cdecl(Core::Result)&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CallbackTokenContext&lt;std::function&lt;void __cdecl(Core::Result)&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::function&lt;void __cdecl(Core::Result)&gt;&gt; mCallbacks;</span>
<span class="line">  std::shared_ptr&lt;CallbackTokenCancelState&gt; mCancelState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-remotestorageprovider" tabindex="-1"><a class="header-anchor" href="#core-remotestorageprovider"><span><code>Core::RemoteStorageProvider</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::RemoteStorageProvider</span>
<span class="line">{</span>
<span class="line">  Core::RemoteStorageProvider_vtbl *__vftable /*VFT*/;</span>
<span class="line">  std::map&lt;std::string,std::string&gt; mContainerRoots;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-remotestoragemanifest-blobsequence" tabindex="-1"><a class="header-anchor" href="#core-remotestoragemanifest-blobsequence"><span><code>Core::RemoteStorageManifest::BlobSequence</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Core::RemoteStorageManifest::BlobSequence</span>
<span class="line">{</span>
<span class="line">  std::string mName;</span>
<span class="line">  int mNumber;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-remotestoragemanifest-blobrecord" tabindex="-1"><a class="header-anchor" href="#core-remotestoragemanifest-blobrecord"><span><code>Core::RemoteStorageManifest::BlobRecord</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::RemoteStorageManifest::BlobRecord</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;Core::RemoteStorageManifest::BlobSequence&gt; mBlobSequences;</span>
<span class="line">  std::string mDecodedName;</span>
<span class="line">  unsigned __int64 mChunkSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-remotestoragemanifest" tabindex="-1"><a class="header-anchor" href="#core-remotestoragemanifest"><span><code>Core::RemoteStorageManifest</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::RemoteStorageManifest</span>
<span class="line">{</span>
<span class="line">  std::map&lt;std::string,Core::RemoteStorageManifest::BlobRecord&gt; mCorrelationTable;</span>
<span class="line">  Core::RemoteStorageManifest::State mState;</span>
<span class="line">  std::string mContainerName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-remotestorageprovider-vtbl" tabindex="-1"><a class="header-anchor" href="#core-remotestorageprovider-vtbl"><span><code>Core::RemoteStorageProvider_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::RemoteStorageProvider_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~RemoteStorageProvider)(Core::RemoteStorageProvider *this);</span>
<span class="line">  void (__fastcall *shutdown)(Core::RemoteStorageProvider *this);</span>
<span class="line">  const std::string *(__fastcall *getWorldsPrefix)(Core::RemoteStorageProvider *this);</span>
<span class="line">  std::string *(__fastcall *encodeWorldName)(Core::RemoteStorageProvider *this, std::string *result, const std::string *);</span>
<span class="line">  std::string *(__fastcall *encodeFileName)(Core::RemoteStorageProvider *this, std::string *result, const std::string *);</span>
<span class="line">  void (__fastcall *tick)(Core::RemoteStorageProvider *this);</span>
<span class="line">  void (__fastcall *onAppSuspend)(Core::RemoteStorageProvider *this);</span>
<span class="line">  void (__fastcall *onAppResume)(Core::RemoteStorageProvider *this);</span>
<span class="line">  void (__fastcall *onSignOut)(Core::RemoteStorageProvider *this);</span>
<span class="line">  CallbackToken *(__fastcall *onSignIn)(Core::RemoteStorageProvider *this, CallbackToken *result, std::shared_ptr&lt;CallbackTokenContext&lt;std::function&lt;void __cdecl(Core::Result)&gt; &gt; &gt;);</span>
<span class="line">  CallbackToken *(__fastcall *deleteContainer)(Core::RemoteStorageProvider *this, CallbackToken *result, std::shared_ptr&lt;CallbackTokenContext&lt;std::function&lt;void __cdecl(Core::Result)&gt; &gt; &gt;, const std::string *);</span>
<span class="line">  CallbackToken *(__fastcall *commit)(Core::RemoteStorageProvider *this, CallbackToken *result, std::shared_ptr&lt;CallbackTokenContext&lt;std::function&lt;void __cdecl(Core::Result)&gt; &gt; &gt;, const std::string *, const std::set&lt;std::string&gt; *, std::set&lt;std::string&gt; *, std::set&lt;std::string&gt; *);</span>
<span class="line">  CallbackToken *(__fastcall *sync)(Core::RemoteStorageProvider *this, CallbackToken *result, const std::string *, const std::string *, std::shared_ptr&lt;CallbackTokenContext&lt;std::function&lt;void __cdecl(Core::Result)&gt; &gt; &gt;, std::function&lt;void __cdecl(std::string const &amp;,bool)&gt;);</span>
<span class="line">  CallbackToken *(__fastcall *syncMeta)(Core::RemoteStorageProvider *this, CallbackToken *result, const std::string *, const std::string *, std::shared_ptr&lt;CallbackTokenContext&lt;std::function&lt;void __cdecl(Core::Result)&gt; &gt; &gt;);</span>
<span class="line">  CallbackToken *(__fastcall *syncContainerManifest)(Core::RemoteStorageProvider *this, CallbackToken *result, const std::string *, const std::string *, std::shared_ptr&lt;CallbackTokenContext&lt;std::function&lt;void __cdecl(Core::Result)&gt; &gt; &gt;);</span>
<span class="line">  Core::RemoteStorageManifest *(__fastcall *getManifest)(Core::RemoteStorageProvider *this, Core::RemoteStorageManifest *result, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cloudsavesystemwrapper" tabindex="-1"><a class="header-anchor" href="#cloudsavesystemwrapper"><span><code>CloudSaveSystemWrapper</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CloudSaveSystemWrapper : OptionsObserver</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;GameSaveSystem&gt; mGameSaveSystem;</span>
<span class="line">  std::weak_ptr&lt;Social::User&gt; mOwningUser;</span>
<span class="line">  std::function&lt;void __cdecl(std::function&lt;void __cdecl(void)&gt;)&gt; mInitRemoteSystemCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cloudsavesystemwrapper-vtbl" tabindex="-1"><a class="header-anchor" href="#cloudsavesystemwrapper-vtbl"><span><code>CloudSaveSystemWrapper_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CloudSaveSystemWrapper_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;OptionsObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *onForceCloudSave)(OptionsObserver *this);</span>
<span class="line">  void (__fastcall *onOptionsLoadBegin)(OptionsObserver *this);</span>
<span class="line">  void (__fastcall *onOptionsLoadComplete)(OptionsObserver *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-resourcemanager-std-shared-ptr-mce-image-resourcelocation-imagetrackertemplate-imageresourcemanager-std-shared-ptr-mce-image-std-unordered-map" tabindex="-1"><a class="header-anchor" href="#cg-resourcemanager-std-shared-ptr-mce-image-resourcelocation-imagetrackertemplate-imageresourcemanager-std-shared-ptr-mce-image-std-unordered-map"><span><code>cg::ResourceManager&lt;std::shared_ptr&lt;mce::Image&gt;,ResourceLocation,ImageTrackerTemplate&lt;ImageResourceManager&gt;,std::shared_ptr&lt;mce::Image&gt;,std::unordered_map&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::ResourceManager&lt;std::shared_ptr&lt;mce::Image&gt;,ResourceLocation,ImageTrackerTemplate&lt;ImageResourceManager&gt;,std::shared_ptr&lt;mce::Image&gt;,std::unordered_map&gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;ResourceLocation,std::shared_ptr&lt;mce::Image&gt;&gt; mContainer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-resourcemanager-std-shared-ptr-mce-image-enum-mce-dynamictexture-imagetrackertemplate-dynamicimageresourcemanager-std-shared-ptr-mce-image-std-map" tabindex="-1"><a class="header-anchor" href="#cg-resourcemanager-std-shared-ptr-mce-image-enum-mce-dynamictexture-imagetrackertemplate-dynamicimageresourcemanager-std-shared-ptr-mce-image-std-map"><span><code>cg::ResourceManager&lt;std::shared_ptr&lt;mce::Image&gt;,enum mce::DynamicTexture,ImageTrackerTemplate&lt;DynamicImageResourceManager&gt;,std::shared_ptr&lt;mce::Image&gt;,std::map&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::ResourceManager&lt;std::shared_ptr&lt;mce::Image&gt;,enum mce::DynamicTexture,ImageTrackerTemplate&lt;DynamicImageResourceManager&gt;,std::shared_ptr&lt;mce::Image&gt;,std::map&gt;</span>
<span class="line">{</span>
<span class="line">  std::map&lt;enum mce::DynamicTexture,std::shared_ptr&lt;mce::Image&gt;&gt; mContainer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-resourcemanager-std-shared-ptr-mce-clienttexture-enum-mce-dynamictexture-void-std-shared-ptr-mce-clienttexture-std-map" tabindex="-1"><a class="header-anchor" href="#cg-resourcemanager-std-shared-ptr-mce-clienttexture-enum-mce-dynamictexture-void-std-shared-ptr-mce-clienttexture-std-map"><span><code>cg::ResourceManager&lt;std::shared_ptr&lt;mce::ClientTexture&gt;,enum mce::DynamicTexture,void,std::shared_ptr&lt;mce::ClientTexture&gt;,std::map&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::ResourceManager&lt;std::shared_ptr&lt;mce::ClientTexture&gt;,enum mce::DynamicTexture,void,std::shared_ptr&lt;mce::ClientTexture&gt;,std::map&gt;</span>
<span class="line">{</span>
<span class="line">  std::map&lt;enum mce::DynamicTexture,std::shared_ptr&lt;mce::ClientTexture&gt;&gt; mContainer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="channelservice" tabindex="-1"><a class="header-anchor" href="#channelservice"><span><code>ChannelService</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChannelService : ServiceClient</span>
<span class="line">{</span>
<span class="line">  const WorldTemplateManager *mWorldTemplateManager;</span>
<span class="line">  gsl::not_null&lt;Bedrock::NonOwnerPointer&lt;DateManager const &gt; &gt; mDateManager;</span>
<span class="line">  std::string mAcceptLanguage;</span>
<span class="line">  const Core::PathBuffer&lt;std::string &gt; mDefaultCacheLocation;</span>
<span class="line">  const std::string mHostUrl;</span>
<span class="line">  unsigned int mCacheDurationHours;</span>
<span class="line">  std::string mUserToken;</span>
<span class="line">  std::shared_ptr&lt;LessonItemCache&gt; mItemCache;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="channelservice-vtbl" tabindex="-1"><a class="header-anchor" href="#channelservice-vtbl"><span><code>ChannelService_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChannelService_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ServiceClient)(ServiceClient *this);</span>
<span class="line">  void (__fastcall *update)(ServiceClient *this);</span>
<span class="line">  void (__fastcall *_submitRequest)(ServiceClient *this, std::shared_ptr&lt;RequestHandler&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controlscreenaction-vtbl" tabindex="-1"><a class="header-anchor" href="#controlscreenaction-vtbl"><span><code>ControlScreenAction_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ControlScreenAction_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ControlScreenAction)(ControlScreenAction *this);</span>
<span class="line">  bool (__fastcall *getDirty)(ControlScreenAction *this, ui::DirtyFlag);</span>
<span class="line">  bool (__fastcall *getDirty)(ControlScreenAction *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *getDirtyValue)(ControlScreenAction *this);</span>
<span class="line">  void (__fastcall *addDirtyFlag)(ControlScreenAction *this, ui::DirtyFlag);</span>
<span class="line">  void (__fastcall *measureControls)(ControlScreenAction *this, UIControl *);</span>
<span class="line">  void (__fastcall *markToRemoveDeadDependencies)(ControlScreenAction *this, std::shared_ptr&lt;UIControl&gt;);</span>
<span class="line">  void (__fastcall *updateControlCollection)(ControlScreenAction *this, std::shared_ptr&lt;UIControl&gt;);</span>
<span class="line">  void (__fastcall *updateControlCollectionFromRoot)(ControlScreenAction *this);</span>
<span class="line">  void (__fastcall *removeFromControlCollection)(ControlScreenAction *this, std::shared_ptr&lt;UIControl&gt;);</span>
<span class="line">  void (__fastcall *updateControlBinds)(ControlScreenAction *this, std::shared_ptr&lt;UIControl&gt;);</span>
<span class="line">  void (__fastcall *updateBindsFromRoot)(ControlScreenAction *this);</span>
<span class="line">  void (__fastcall *markTextEditFocusChanged)(ControlScreenAction *this);</span>
<span class="line">  void (__fastcall *markTextEditAlwaysListeningChanged)(ControlScreenAction *this);</span>
<span class="line">  std::shared_ptr&lt;UIControl&gt; *(__fastcall *getControlWithName)(ControlScreenAction *this, std::shared_ptr&lt;UIControl&gt; *result, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="caretmeasuredata" tabindex="-1"><a class="header-anchor" href="#caretmeasuredata"><span><code>CaretMeasureData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj __declspec(align(4)) CaretMeasureData</span>
<span class="line">{</span>
<span class="line">  const int position;</span>
<span class="line">  const bool shouldRender;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cachedscene" tabindex="-1"><a class="header-anchor" href="#cachedscene"><span><code>CachedScene</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CachedScene</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;VisualTree&gt; mVisualTree;</span>
<span class="line">  std::shared_ptr&lt;UIControlFactory&gt; mControlFactory;</span>
<span class="line">  std::unique_ptr&lt;LayoutManager&gt; mLayoutManager;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cachedscenes" tabindex="-1"><a class="header-anchor" href="#cachedscenes"><span><code>CachedScenes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CachedScenes</span>
<span class="line">{</span>
<span class="line">  bool mLowMemoryDevice;</span>
<span class="line">  std::unique_ptr&lt;TaskGroup&gt; mDestroyScreenTaskGroup;</span>
<span class="line">  std::map&lt;Json::Value,std::unique_ptr&lt;CachedScene&gt;&gt; mCachedScene;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customrendercomponent" tabindex="-1"><a class="header-anchor" href="#customrendercomponent"><span><code>CustomRenderComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CustomRenderComponent : RenderableComponent</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; mRenderer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentrenderbatch" tabindex="-1"><a class="header-anchor" href="#componentrenderbatch"><span><code>ComponentRenderBatch</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentRenderBatch</span>
<span class="line">{</span>
<span class="line">  BatchKey mBatchKey;</span>
<span class="line">  bool mIsDirty;</span>
<span class="line">  bool mRequiresPreRenderSetup;</span>
<span class="line">  int mRenderPass;</span>
<span class="line">  std::vector&lt;CustomRenderComponent *&gt; mCustomRenderInstances;</span>
<span class="line">  std::vector&lt;SpriteComponent *&gt; mSpriteInstances;</span>
<span class="line">  std::vector&lt;TextComponent *&gt; mTextInstances;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customrendercomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#customrendercomponent-vtbl"><span><code>CustomRenderComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CustomRenderComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UIComponent)(UIComponent *this);</span>
<span class="line">  void (__fastcall *OnScreenPop)(UIComponent *this);</span>
<span class="line">  std::unique_ptr&lt;UIComponent&gt; *(__fastcall *clone)(UIComponent *this, std::unique_ptr&lt;UIComponent&gt; *result, UIControl *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, const ScreenEvent *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, VisualTree *, ScreenInputContext *, UIAnimationController *, const ScreenEvent *);</span>
<span class="line">  void (__fastcall *onNotifyChildAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onNotifyChildRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UIComponent *this, bool);</span>
<span class="line">  void (__fastcall *onEnabledChanged)(UIComponent *this, bool);</span>
<span class="line">  bool (__fastcall *isRenderableComponent)(UIComponent *this);</span>
<span class="line">  bool (__fastcall *onLayoutChange)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reset)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reload)(UIComponent *this, const UIComponent *);</span>
<span class="line">  const std::string *(__fastcall *getTextToSpeechComponentValue)(UIComponent *this);</span>
<span class="line">  void (__fastcall *updateUI)(RenderableComponent *this, const UIMeasureStrategy *);</span>
<span class="line">  bool (__fastcall *overridesLayoutAxisOffset)(RenderableComponent *this, const LayoutVariableType);</span>
<span class="line">  float (__fastcall *getLayoutAxisOffsetOverride)(RenderableComponent *this, const LayoutVariableType);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(CustomRenderComponent *this);</span>
<span class="line">  int (__fastcall *getCustomId)(CustomRenderComponent *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(CustomRenderComponent *this);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(CustomRenderComponent *this, int);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(CustomRenderComponent *this, ResourceLocation *result, int, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(CustomRenderComponent *this, int);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(CustomRenderComponent *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentitem" tabindex="-1"><a class="header-anchor" href="#contentitem"><span><code>ContentItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentItem</span>
<span class="line">{</span>
<span class="line">  ContentItem_vtbl *__vftable /*VFT*/;</span>
<span class="line">  unsigned __int64 mId;</span>
<span class="line">  std::string mName;</span>
<span class="line">  std::string mDescription;</span>
<span class="line">  unsigned __int64 mSize;</span>
<span class="line">  bool mIsDescriptionExpanded;</span>
<span class="line">  __declspec(align(8)) _BYTE mType[8];</span>
<span class="line">  _BYTE mItemType[8];</span>
<span class="line">  _BYTE mFlags[8];</span>
<span class="line">  ContentSource *mSource;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentitem-vtbl" tabindex="-1"><a class="header-anchor" href="#contentitem-vtbl"><span><code>ContentItem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContentItem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContentItem)(ContentItem *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentsource-vtbl" tabindex="-1"><a class="header-anchor" href="#contentsource-vtbl"><span><code>ContentSource_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContentSource_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContentSource)(ContentSource *this);</span>
<span class="line">  void (__fastcall *load)(ContentSource *this);</span>
<span class="line">  void (__fastcall *generateItems)(ContentSource *this, std::vector&lt;std::unique_ptr&lt;ContentItem&gt;&gt; *);</span>
<span class="line">  void (__fastcall *save)(ContentSource *this);</span>
<span class="line">  void (__fastcall *deleteContentFiles)(ContentSource *this, std::vector&lt;ContentItem const *&gt;);</span>
<span class="line">  void (__fastcall *postDeleteContent)(ContentSource *this, std::vector&lt;ContentItem const *&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentmanager" tabindex="-1"><a class="header-anchor" href="#contentmanager"><span><code>ContentManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentManager : LevelLocationObserver, std::enable_shared_from_this&lt;ContentManager&gt;</span>
<span class="line">{</span>
<span class="line">  Core::FilePathManager *mFilePathManager;</span>
<span class="line">  LevelListCache *mLevelListCache;</span>
<span class="line">  WorldTemplateManager *mWorldTemplateManager;</span>
<span class="line">  ResourcePackRepository *mResourcePackRepository;</span>
<span class="line">  ResourcePackManager *mResourcePackManager;</span>
<span class="line">  PackManifestFactory *mPackManifestFactory;</span>
<span class="line">  IEntitlementManager *mEntitlementManager;</span>
<span class="line">  const ContentTierManager *mContentTierManager;</span>
<span class="line">  gsl::not_null&lt;Bedrock::NonOwnerPointer&lt;StoreCatalogRepository&gt; &gt; mStoreCatalog;</span>
<span class="line">  gsl::not_null&lt;Bedrock::NonOwnerPointer&lt;ContentCatalogService&gt; &gt; mContentCatalogService;</span>
<span class="line">  PackSourceFactory *mPackSourceFactory;</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;ContentItem&gt;&gt; mContent;</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;ContentSource&gt;&gt; mContentSources;</span>
<span class="line">  std::vector&lt;ContentManagerContext *&gt; mContexts;</span>
<span class="line">  unsigned __int64 mContentId;</span>
<span class="line">  ContentCatalogPackSource *mCatalogResourcePackSource;</span>
<span class="line">  std::unique_ptr&lt;ContentManagerProxy&gt; mProxy;</span>
<span class="line">  bool mInitialized;</span>
<span class="line">  const std::string WORLD_RESOURCE_PACK_FILENAME;</span>
<span class="line">  const std::string WORLD_BEHAVIOR_PACK_FILENAME;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentview-itemcollection" tabindex="-1"><a class="header-anchor" href="#contentview-itemcollection"><span><code>ContentView::ItemCollection</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentView::ItemCollection</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;ContentItem&gt; mItemProxy;</span>
<span class="line">  std::vector&lt;ContentItem *&gt; mItems;</span>
<span class="line">  std::function&lt;bool __cdecl(ContentItem const *)&gt; mPredicate;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentview" tabindex="-1"><a class="header-anchor" href="#contentview"><span><code>ContentView</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentView</span>
<span class="line">{</span>
<span class="line">  ContentManager *mContentManager;</span>
<span class="line">  std::vector&lt;ContentItem *&gt; mItems;</span>
<span class="line">  std::function&lt;bool __cdecl(ContentItem const *)&gt; mPredicate;</span>
<span class="line">  std::function&lt;bool __cdecl(ContentItem *,ContentItem *)&gt; mSortFunction;</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; mOnReload;</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;ContentView::ItemCollection&gt;&gt; mItemCollections;</span>
<span class="line">  std::vector&lt;ContentView const *&gt; mContentViewSources;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentmanagercontext" tabindex="-1"><a class="header-anchor" href="#contentmanagercontext"><span><code>ContentManagerContext</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentManagerContext</span>
<span class="line">{</span>
<span class="line">  std::function&lt;bool __cdecl(ContentItem const *)&gt; mContextPredicate;</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;ContentView&gt;&gt; mContentViews;</span>
<span class="line">  ContentManager *mManager;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentmanagerproxycallbacks" tabindex="-1"><a class="header-anchor" href="#contentmanagerproxycallbacks"><span><code>ContentManagerProxyCallbacks</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentManagerProxyCallbacks</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ContentItem * __cdecl(PackManifest &amp;)&gt; mGetContentItemByManifest;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentmanagerproxy" tabindex="-1"><a class="header-anchor" href="#contentmanagerproxy"><span><code>ContentManagerProxy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentManagerProxy</span>
<span class="line">{</span>
<span class="line">  ContentManagerProxyCallbacks mCallbacks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentmanager-vtbl" tabindex="-1"><a class="header-anchor" href="#contentmanager-vtbl"><span><code>ContentManager_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContentManager_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;LevelLocationObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;LevelLocationObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;LevelLocationObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *onLevelAdded)(LevelLocationObserver *this, const std::string *);</span>
<span class="line">  void (__fastcall *onLevelUpdated)(LevelLocationObserver *this, const std::string *);</span>
<span class="line">  void (__fastcall *onLevelDeleted)(LevelLocationObserver *this, const std::string *);</span>
<span class="line">  void (__fastcall *onStorageChanged)(LevelLocationObserver *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientmodel" tabindex="-1"><a class="header-anchor" href="#clientmodel"><span><code>ClientModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientModel</span>
<span class="line">{</span>
<span class="line">  ClientModel_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientmodel-vtbl" tabindex="-1"><a class="header-anchor" href="#clientmodel-vtbl"><span><code>ClientModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ClientModel)(ClientModel *this);</span>
<span class="line">  bool (__fastcall *hasCommandsEnabled)(ClientModel *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedHoverText)(ClientModel *this, std::string *result, const ItemStackBase *, const bool);</span>
<span class="line">  bool (__fastcall *achievementsWillBeDisabledOnLoad)(ClientModel *this);</span>
<span class="line">  bool (__fastcall *hasAchievementsDisabled)(ClientModel *this);</span>
<span class="line">  std::string *(__fastcall *getLevelName)(ClientModel *this, std::string *result);</span>
<span class="line">  int (__fastcall *getGameDifficulty)(ClientModel *this);</span>
<span class="line">  int (__fastcall *getGameType)(ClientModel *this);</span>
<span class="line">  void (__fastcall *setGameType)(ClientModel *this, GameType);</span>
<span class="line">  int (__fastcall *getGenerator)(ClientModel *this);</span>
<span class="line">  bool (__fastcall *getStartWithMap)(ClientModel *this);</span>
<span class="line">  bool (__fastcall *isAlwaysDay)(ClientModel *this);</span>
<span class="line">  bool (__fastcall *isGameRule)(ClientModel *this, GameRuleId);</span>
<span class="line">  bool (__fastcall *isImmutableWorld)(ClientModel *this);</span>
<span class="line">  std::unique_ptr&lt;PlayerCommandOrigin&gt; *(__fastcall *makePlayerCommandOrigin)(ClientModel *this, std::unique_ptr&lt;PlayerCommandOrigin&gt; *result);</span>
<span class="line">  void (__fastcall *setCommandsEnabled)(ClientModel *this, bool);</span>
<span class="line">  void (__fastcall *disableAchievements)(ClientModel *this);</span>
<span class="line">  float (__fastcall *getGuiScale)(ClientModel *this);</span>
<span class="line">  const Option *(__fastcall *getGuiScaleOption)(ClientModel *this);</span>
<span class="line">  void (__fastcall *setGuiScaleOffset)(ClientModel *this, int);</span>
<span class="line">  void (__fastcall *notifyForLeaveGame)(ClientModel *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstancemodel" tabindex="-1"><a class="header-anchor" href="#clientinstancemodel"><span><code>ClientInstanceModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstanceModel : ClientModel</span>
<span class="line">{</span>
<span class="line">  IClientInstance *mClient;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstancemodel-vtbl" tabindex="-1"><a class="header-anchor" href="#clientinstancemodel-vtbl"><span><code>ClientInstanceModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientInstanceModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ClientModel)(ClientModel *this);</span>
<span class="line">  bool (__fastcall *hasCommandsEnabled)(ClientModel *this);</span>
<span class="line">  std::string *(__fastcall *getFormattedHoverText)(ClientModel *this, std::string *result, const ItemStackBase *, const bool);</span>
<span class="line">  bool (__fastcall *achievementsWillBeDisabledOnLoad)(ClientModel *this);</span>
<span class="line">  bool (__fastcall *hasAchievementsDisabled)(ClientModel *this);</span>
<span class="line">  std::string *(__fastcall *getLevelName)(ClientModel *this, std::string *result);</span>
<span class="line">  int (__fastcall *getGameDifficulty)(ClientModel *this);</span>
<span class="line">  int (__fastcall *getGameType)(ClientModel *this);</span>
<span class="line">  void (__fastcall *setGameType)(ClientModel *this, GameType);</span>
<span class="line">  int (__fastcall *getGenerator)(ClientModel *this);</span>
<span class="line">  bool (__fastcall *getStartWithMap)(ClientModel *this);</span>
<span class="line">  bool (__fastcall *isAlwaysDay)(ClientModel *this);</span>
<span class="line">  bool (__fastcall *isGameRule)(ClientModel *this, GameRuleId);</span>
<span class="line">  bool (__fastcall *isImmutableWorld)(ClientModel *this);</span>
<span class="line">  std::unique_ptr&lt;PlayerCommandOrigin&gt; *(__fastcall *makePlayerCommandOrigin)(ClientModel *this, std::unique_ptr&lt;PlayerCommandOrigin&gt; *result);</span>
<span class="line">  void (__fastcall *setCommandsEnabled)(ClientModel *this, bool);</span>
<span class="line">  void (__fastcall *disableAchievements)(ClientModel *this);</span>
<span class="line">  float (__fastcall *getGuiScale)(ClientModel *this);</span>
<span class="line">  const Option *(__fastcall *getGuiScaleOption)(ClientModel *this);</span>
<span class="line">  void (__fastcall *setGuiScaleOffset)(ClientModel *this, int);</span>
<span class="line">  void (__fastcall *notifyForLeaveGame)(ClientModel *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-social-userlistobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-observer-social-userlistobserver-core-singlethreadedlock"><span><code>Core::Observer&lt;Social::UserListObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;Social::UserListObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;Social::UserListObserver,Core::SingleThreadedLock&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;Social::UserListObserver,Core::SingleThreadedLock&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-social-userlistobserver-core-singlethreadedlock-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-social-userlistobserver-core-singlethreadedlock-vtbl"><span><code>Core::Observer&lt;Social::UserListObserver,Core::SingleThreadedLock&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;Social::UserListObserver,Core::SingleThreadedLock&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;Social::UserListObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;Social::UserListObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;Social::UserListObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-subject-social-userlistobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-subject-social-userlistobserver-core-singlethreadedlock"><span><code>Core::Subject&lt;Social::UserListObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Subject&lt;Social::UserListObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::SingleThreadedLock mLock;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;Social::UserListObserver *&gt;&gt; mObservers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="channeltransform" tabindex="-1"><a class="header-anchor" href="#channeltransform"><span><code>ChannelTransform</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChannelTransform</span>
<span class="line">{</span>
<span class="line">  ExpressionNode mXYZ[3];</span>
<span class="line">  Vec3 mAxis;</span>
<span class="line">  ChannelTransformAxisType mTransformDataType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="channeltransform-float" tabindex="-1"><a class="header-anchor" href="#channeltransform-float"><span><code>ChannelTransform_Float</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChannelTransform_Float</span>
<span class="line">{</span>
<span class="line">  float mXYZ[3];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkvisibilitycacheelement" tabindex="-1"><a class="header-anchor" href="#chunkvisibilitycacheelement"><span><code>ChunkVisibilityCacheElement</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChunkVisibilityCacheElement</span>
<span class="line">{</span>
<span class="line">  unsigned __int8 mVisibility[6];</span>
<span class="line">  unsigned __int16 mLatticeLookup;</span>
<span class="line">  float mDistance;</span>
<span class="line">  unsigned __int8 mCanSeeChunkBitfield;</span>
<span class="line">  unsigned __int8 mChunkIsEmpty : 1;</span>
<span class="line">  unsigned __int8 mChunkVisible : 1;</span>
<span class="line">  unsigned __int8 mChunkAccessBitX : 1;</span>
<span class="line">  unsigned __int8 mChunkAccessBitY : 1;</span>
<span class="line">  unsigned __int8 mChunkAccessBitZ : 1;</span>
<span class="line">  unsigned __int8 mIsSkyLit : 1;</span>
<span class="line">  unsigned __int8 mAllSidesCanSeeAllSides : 1;</span>
<span class="line">  unsigned __int8 mForceRequery : 1;</span>
<span class="line">  unsigned __int8 mUpdateCounter;</span>
<span class="line">  unsigned __int8 mInitted;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkvisibilitycache" tabindex="-1"><a class="header-anchor" href="#chunkvisibilitycache"><span><code>ChunkVisibilityCache</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) ChunkVisibilityCache</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ChunkVisibilityCacheElement&gt; mCache;</span>
<span class="line">  int mCacheSideMask;</span>
<span class="line">  unsigned __int8 mCacheSideShift;</span>
<span class="line">  unsigned __int8 mCacheDoubleSideShift;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-simplemesh" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-simplemesh"><span><code>ClientBlockPipeline::SimpleMesh</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::SimpleMesh</span>
<span class="line">{</span>
<span class="line">  mce::MeshData mMeshData;</span>
<span class="line">  std::vector&lt;TessellatorQuadInfo&gt; mQuadInfoList;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-namedmeshstreams" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-namedmeshstreams"><span><code>ClientBlockPipeline::NamedMeshStreams</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::NamedMeshStreams</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;TerrainLayer const *,ClientBlockPipeline::SimpleMesh&gt; mStreams;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-blocktessellatorpipeline" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-blocktessellatorpipeline"><span><code>ClientBlockPipeline::BlockTessellatorPipeline</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::BlockTessellatorPipeline</span>
<span class="line">{</span>
<span class="line">  ClientBlockPipeline::NamedMeshStreams mMeshStreams;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-step" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-step"><span><code>ClientBlockPipeline::Step</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">  ClientBlockPipeline::Step_vtbl *__vftable /*VFT*/;</span>
<span class="line">  unsigned __int64 mStepId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-pipelineerror" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-pipelineerror"><span><code>ClientBlockPipeline::PipelineError</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::PipelineError</span>
<span class="line">{</span>
<span class="line">  std::string mError;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-stepresult" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-stepresult"><span><code>ClientBlockPipeline::StepResult</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::StepResult</span>
<span class="line">{</span>
<span class="line">  std::variant&lt;ClientBlockPipeline::PipelineError,std::vector&lt;std::any&gt; &gt; mResults;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-step-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-step-vtbl"><span><code>ClientBlockPipeline::Step_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::Step_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-description" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-description"><span><code>ClientBlockPipeline::Description</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::Description</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;ClientBlockPipeline::Step const &gt;&gt; mSteps;</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;ClientBlockPipeline::Step const &gt;&gt; mOutputs;</span>
<span class="line">  std::vector&lt;ClientBlockPipeline::Description::BakedStep&gt; mBakedSteps;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandlistbase" tabindex="-1"><a class="header-anchor" href="#commandlistbase"><span><code>CommandListBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandListBase</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-details-lambdaexecutorcontextcontainer-std-nullptr-t-0" tabindex="-1"><a class="header-anchor" href="#cg-details-lambdaexecutorcontextcontainer-std-nullptr-t-0"><span><code>cg::details::LambdaExecutorContextContainer&lt;std::nullptr_t,0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) cg::details::LambdaExecutorContextContainer&lt;std::nullptr_t,0&gt;</span>
<span class="line">{</span>
<span class="line">  __int16 mContext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1" tabindex="-1"><a class="header-anchor" href="#cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1"><span><code>cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;Bedrock::Threading::Burst::WorkQueue&lt;std::function&lt;void __cdecl(std::nullptr_t &amp;)&gt;,Bedrock::Threading::Burst::Strategy::Console,Bedrock::Threading::Burst::Strategy::Execution::GreedyExecution&gt;&gt; mWorkQueue;</span>
<span class="line">  __int16 *mContext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const" tabindex="-1"><a class="header-anchor" href="#cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const"><span><code>cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt;</span>
<span class="line">{</span>
<span class="line">  cg::details::LambdaExecutorContextContainer&lt;std::nullptr_t,0&gt; mContextContainer;</span>
<span class="line">  __int16 *mContext;</span>
<span class="line">  cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt; mExecutionPolicy;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const" tabindex="-1"><a class="header-anchor" href="#cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const"><span><code>cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt;&gt; mExecutionContext;</span>
<span class="line">  std::atomic&lt;int&gt; mPendingWorkCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const" tabindex="-1"><a class="header-anchor" href="#cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const"><span><code>cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;</span>
<span class="line">{</span>
<span class="line">  cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; mScheduler;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-details-scopedframebase-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution" tabindex="-1"><a class="header-anchor" href="#cg-details-scopedframebase-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution"><span><code>cg::details::ScopedFrameBase&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::details::ScopedFrameBase&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-details-scopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-0" tabindex="-1"><a class="header-anchor" href="#cg-details-scopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-0"><span><code>cg::details::ScopedFrame&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution,0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::details::ScopedFrame&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution,0&gt; : cg::details::ScopedFrameBase&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution&gt;</span>
<span class="line">{</span>
<span class="line">  cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt; *mDispatcher;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-details-specializedscopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-void" tabindex="-1"><a class="header-anchor" href="#cg-details-specializedscopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-void"><span><code>cg::details::SpecializedScopedFrame&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution,void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::details::SpecializedScopedFrame&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution,void&gt; : cg::details::ScopedFrame&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution,0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandlistqueue" tabindex="-1"><a class="header-anchor" href="#commandlistqueue"><span><code>CommandListQueue</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandListQueue</span>
<span class="line">{</span>
<span class="line">  CommandListTaskContext mGlobalContext;</span>
<span class="line">  bool mIsAsync;</span>
<span class="line">  mce::RenderContext *mGlobalRenderContext;</span>
<span class="line">  cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt; mDragonDispatcher;</span>
<span class="line">  std::unique_ptr&lt;cg::details::SpecializedScopedFrame&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution,void&gt;&gt; mDragonDispatcherScope;</span>
<span class="line">  Bedrock::Threading::InstancedThreadLocal&lt;ThreadedFrameConstantsContainer,std::allocator&lt;ThreadedFrameConstantsContainer&gt; &gt; mPerThreadContextConstants;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-hbui-routerobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-observer-hbui-routerobserver-core-singlethreadedlock"><span><code>Core::Observer&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-hbui-routerobserver-core-singlethreadedlock-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-hbui-routerobserver-core-singlethreadedlock-vtbl"><span><code>Core::Observer&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-subject-hbui-routerobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-subject-hbui-routerobserver-core-singlethreadedlock"><span><code>Core::Subject&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Subject&lt;hbui::RouterObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::SingleThreadedLock mLock;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;hbui::RouterObserver *&gt;&gt; mObservers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentdiscovery" tabindex="-1"><a class="header-anchor" href="#contentdiscovery"><span><code>ContentDiscovery</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentDiscovery</span>
<span class="line">{</span>
<span class="line">  IContentDiscoveryListener *mContentDiscoveryListener;</span>
<span class="line">  gsl::not_null&lt;Bedrock::NonOwnerPointer&lt;ContentCatalogService&gt; &gt; mCatalogService;</span>
<span class="line">  PackSourceFactory *mPackSourceFactory;</span>
<span class="line">  const int SEARCH_BATCH_SIZE;</span>
<span class="line">  const int SEARCH_PAGE_SIZE;</span>
<span class="line">  std::shared_ptr&lt;bool&gt; mExistenceTracker;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contenttracker" tabindex="-1"><a class="header-anchor" href="#contenttracker"><span><code>ContentTracker</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentTracker</span>
<span class="line">{</span>
<span class="line">  bool mUsePersonaService;</span>
<span class="line">  IContentEventListener *mEventListener;</span>
<span class="line">  gsl::not_null&lt;Bedrock::NonOwnerPointer&lt;ContentCatalogService&gt; &gt; mCatalogService;</span>
<span class="line">  ExternalContentManager *mExternalContentManager;</span>
<span class="line">  Bedrock::NonOwnerPointer&lt;SoundEngine&gt; mSoundEngine;</span>
<span class="line">  std::function&lt;std::shared_ptr&lt;DlcImportContext&gt; __cdecl(bool,Core::Path const &amp;,std::function&lt;void __cdecl(bool)&gt;,std::function&lt;void __cdecl(bool,PackManifest const *)&gt;)&gt; mDlcImportContextFactory;</span>
<span class="line">  PropertyBag mProperties;</span>
<span class="line">  int mPropertyChangeVersion;</span>
<span class="line">  std::string mContentUrl;</span>
<span class="line">  std::string mTitle;</span>
<span class="line">  unsigned __int64 mFileSize;</span>
<span class="line">  bool mTitleLocked;</span>
<span class="line">  bool mHasHydrated;</span>
<span class="line">  std::shared_ptr&lt;TaskGroup&gt; mIOTaskGroup;</span>
<span class="line">  std::shared_ptr&lt;FileDownloadManager&gt; mFileDownloadManager;</span>
<span class="line">  std::shared_ptr&lt;DlcImportContext&gt; mImportContext;</span>
<span class="line">  std::shared_ptr&lt;bool&gt; mExistenceTracker;</span>
<span class="line">  bool mReleaseDownloader;</span>
<span class="line">  int mDownloadRetryAttempts;</span>
<span class="line">  std::chrono::duration&lt;__int64,std::ratio&lt;1,1&gt; &gt; mDownloadRetryDelay;</span>
<span class="line">  std::chrono::time_point&lt;std::chrono::steady_clock,std::chrono::duration&lt;__int64,std::ratio&lt;1,1000000000&gt; &gt; &gt; mDownloadFailureTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentacquisition-packimportcallbackinfo" tabindex="-1"><a class="header-anchor" href="#contentacquisition-packimportcallbackinfo"><span><code>ContentAcquisition::PackImportCallbackInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentAcquisition::PackImportCallbackInfo</span>
<span class="line">{</span>
<span class="line">  bool mShouldCheckExistence;</span>
<span class="line">  std::weak_ptr&lt;bool&gt; mExistenceTracker;</span>
<span class="line">  std::function&lt;void __cdecl(PackImportStateObject &amp;)&gt; mCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentacquisition" tabindex="-1"><a class="header-anchor" href="#contentacquisition"><span><code>ContentAcquisition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentAcquisition : IContentEventListener, IContentDiscoveryListener, IContentAcquisition, Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  gsl::not_null&lt;Bedrock::NonOwnerPointer&lt;ContentCatalogService&gt; &gt; mCatalogService;</span>
<span class="line">  ExternalContentManager *mExternalContentManager;</span>
<span class="line">  ResourcePackRepository *mResourcePackRepository;</span>
<span class="line">  ResourcePackManager *mResourcePackManager;</span>
<span class="line">  WorldTemplateManager *mTemplateManager;</span>
<span class="line">  IMinecraftEventing *mEventing;</span>
<span class="line">  ToastManager *mToastManager;</span>
<span class="line">  Bedrock::NonOwnerPointer&lt;SoundEngine&gt; mSoundEngine;</span>
<span class="line">  bool mStarted;</span>
<span class="line">  __declspec(align(4)) RetryDelay mAutoSaveRetry;</span>
<span class="line">  RetryDelay mContentDiscoveryRetry;</span>
<span class="line">  Json::Value mSerializedState;</span>
<span class="line">  AutoUpdateMode mAutoUpdateMode;</span>
<span class="line">  std::unique_ptr&lt;ContentDiscovery&gt; mContentDiscovery;</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;ContentTracker&gt;&gt; mContentTrackers;</span>
<span class="line">  std::vector&lt;ContentAcquisition::DownloadCallback&gt; mDownloadCallbacks;</span>
<span class="line">  std::function&lt;void __cdecl(std::string const &amp;,DurableDocument const &amp;)&gt; mUpdateFoundCallback;</span>
<span class="line">  std::vector&lt;ContentAcquisition::PackImportCallbackInfo&gt; mPackImportCallbacks;</span>
<span class="line">  std::unordered_map&lt;DlcId,ContentAcquisition::DownloadHistory&gt; mDownloadHistory;</span>
<span class="line">  std::unordered_map&lt;std::string,DlcId&gt; mCachedProductIdLookup;</span>
<span class="line">  std::shared_ptr&lt;TaskGroup&gt; mIOTaskGroup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentacquisition-vtbl" tabindex="-1"><a class="header-anchor" href="#contentacquisition-vtbl"><span><code>ContentAcquisition_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContentAcquisition_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IContentEventListener)(IContentEventListener *this);</span>
<span class="line">  void (__fastcall *onDownloadEvent)(IContentEventListener *this, ContentEventType, InitiatorCategory, const DlcId *, const std::string *, const std::vector&lt;PackIdVersion&gt; *, unsigned __int64, long double, bool);</span>
<span class="line">  void (__fastcall *onImportEvent)(IContentEventListener *this, ContentEventType, InitiatorCategory, const DlcId *, const std::string *, const std::vector&lt;PackIdVersion&gt; *, bool, bool);</span>
<span class="line">  void (__fastcall *onPackImportEvent)(IContentEventListener *this, const std::string *, const PackManifest *, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#componentdescription-vtbl"><span><code>ComponentDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ComponentDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  const char *(__fastcall *getJsonName)(Description *this);</span>
<span class="line">  void (__fastcall *~Description)(Description *this);</span>
<span class="line">  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);</span>
<span class="line">  void (__fastcall *serializeData)(Description *this, Json::Value *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-activedirectoryidentityobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-observer-activedirectoryidentityobserver-core-singlethreadedlock"><span><code>Core::Observer&lt;ActiveDirectoryIdentityObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;ActiveDirectoryIdentityObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;ActiveDirectoryIdentityObserver,Core::SingleThreadedLock&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;ActiveDirectoryIdentityObserver,Core::SingleThreadedLock&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-activedirectoryidentityobserver-core-singlethreadedlock-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-activedirectoryidentityobserver-core-singlethreadedlock-vtbl"><span><code>Core::Observer&lt;ActiveDirectoryIdentityObserver,Core::SingleThreadedLock&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;ActiveDirectoryIdentityObserver,Core::SingleThreadedLock&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;ActiveDirectoryIdentityObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;ActiveDirectoryIdentityObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;ActiveDirectoryIdentityObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-subject-activedirectoryidentityobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-subject-activedirectoryidentityobserver-core-singlethreadedlock"><span><code>Core::Subject&lt;ActiveDirectoryIdentityObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Subject&lt;ActiveDirectoryIdentityObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::SingleThreadedLock mLock;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;ActiveDirectoryIdentityObserver *&gt;&gt; mObservers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-i18nobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-observer-i18nobserver-core-singlethreadedlock"><span><code>Core::Observer&lt;I18nObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;I18nObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;I18nObserver,Core::SingleThreadedLock&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;I18nObserver,Core::SingleThreadedLock&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-i18nobserver-core-singlethreadedlock-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-i18nobserver-core-singlethreadedlock-vtbl"><span><code>Core::Observer&lt;I18nObserver,Core::SingleThreadedLock&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;I18nObserver,Core::SingleThreadedLock&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;I18nObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;I18nObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;I18nObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-deferredtask" tabindex="-1"><a class="header-anchor" href="#core-deferredtask"><span><code>Core::DeferredTask</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Core::DeferredTask</span>
<span class="line">{</span>
<span class="line">  std::atomic&lt;enum Core::DeferredTask::State&gt; mState;</span>
<span class="line">  std::condition_variable mCondition;</span>
<span class="line">  std::mutex mExecutionMutex;</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; mCallback;</span>
<span class="line">  const bool mCanSkipExecution;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-details-lambdaexecutorcontextcontainer-dragon-rendering-rendercontext-0" tabindex="-1"><a class="header-anchor" href="#cg-details-lambdaexecutorcontextcontainer-dragon-rendering-rendercontext-0"><span><code>cg::details::LambdaExecutorContextContainer&lt;dragon::rendering::RenderContext,0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::details::LambdaExecutorContextContainer&lt;dragon::rendering::RenderContext,0&gt;</span>
<span class="line">{</span>
<span class="line">  dragon::rendering::RenderContext mContext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1" tabindex="-1"><a class="header-anchor" href="#cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1"><span><code>cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;Bedrock::Threading::Burst::WorkQueue&lt;std::function&lt;void __cdecl(dragon::rendering::RenderContext &amp;)&gt;,Bedrock::Threading::Burst::Strategy::Console,Bedrock::Threading::Burst::Strategy::Execution::GreedyExecution&gt;&gt; mWorkQueue;</span>
<span class="line">  dragon::rendering::RenderContext *mContext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const" tabindex="-1"><a class="header-anchor" href="#cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const"><span><code>cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt;</span>
<span class="line">{</span>
<span class="line">  cg::details::LambdaExecutorContextContainer&lt;dragon::rendering::RenderContext,0&gt; mContextContainer;</span>
<span class="line">  dragon::rendering::RenderContext *mContext;</span>
<span class="line">  cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt; mExecutionPolicy;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const" tabindex="-1"><a class="header-anchor" href="#cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const"><span><code>cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt;&gt; mExecutionContext;</span>
<span class="line">  std::atomic&lt;int&gt; mPendingWorkCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const" tabindex="-1"><a class="header-anchor" href="#cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const"><span><code>cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;</span>
<span class="line">{</span>
<span class="line">  cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; mScheduler;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource" tabindex="-1"><a class="header-anchor" href="#core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource"><span><code>Core::Cache&lt;unsigned __int64,dragon::rendering::BufferResourceManager&lt;dragon::mesh::VertexBufferType&gt;::BufferResource,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::mesh::VertexBufferType&gt;::BufferResource&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Cache&lt;unsigned __int64,dragon::rendering::BufferResourceManager&lt;dragon::mesh::VertexBufferType&gt;::BufferResource,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::mesh::VertexBufferType&gt;::BufferResource&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_mutex mAccess;</span>
<span class="line">  std::unordered_map&lt;unsigned __int64,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::mesh::VertexBufferType&gt;::BufferResource&gt;&gt; mContent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource" tabindex="-1"><a class="header-anchor" href="#core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource"><span><code>Core::Cache&lt;unsigned __int64,dragon::rendering::BufferResourceManager&lt;dragon::mesh::IndexBufferType&gt;::BufferResource,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::mesh::IndexBufferType&gt;::BufferResource&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Cache&lt;unsigned __int64,dragon::rendering::BufferResourceManager&lt;dragon::mesh::IndexBufferType&gt;::BufferResource,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::mesh::IndexBufferType&gt;::BufferResource&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_mutex mAccess;</span>
<span class="line">  std::unordered_map&lt;unsigned __int64,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::mesh::IndexBufferType&gt;::BufferResource&gt;&gt; mContent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cpuringbufferallocation-buffer-buffer" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocation-buffer-buffer"><span><code>Core::CpuRingBufferAllocation_Buffer::Buffer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CpuRingBufferAllocation_Buffer::Buffer</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;unsigned char&gt; mBuffer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cpuringbufferallocation-buffer" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocation-buffer"><span><code>Core::CpuRingBufferAllocation_Buffer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CpuRingBufferAllocation_Buffer</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-checkedringbuffer-2-0"><span><code>Core::CheckedRingBuffer&lt;2,0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CheckedRingBuffer&lt;2,0&gt;</span>
<span class="line">{</span>
<span class="line">  FencedDynamicRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,2,0&gt; *mBuffer;</span>
<span class="line">  unsigned __int64 mFence;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cpuringbufferallocator-unsigned-char-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-cpuringbufferallocator-unsigned-char-2-0-core-checkedringbuffer-2-0"><span><code>Core::CpuRingBufferAllocator&lt;unsigned char,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CpuRingBufferAllocator&lt;unsigned char,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  Core::CheckedRingBuffer&lt;2,0&gt; *mBufferInstance;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-sharedmemorytracker" tabindex="-1"><a class="header-anchor" href="#core-sharedmemorytracker"><span><code>Core::SharedMemoryTracker</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::SharedMemoryTracker</span>
<span class="line">{</span>
<span class="line">  MPMCQueue&lt;std::shared_ptr&lt;Core::SharedMemoryTracker::SharedMemoryTrackerBase&gt; &gt; mTrackedMemory;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0-allocationscope" tabindex="-1"><a class="header-anchor" href="#core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0-allocationscope"><span><code>Core::RingAllocatorContainer&lt;unsigned char,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::AllocationScope</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::RingAllocatorContainer&lt;unsigned char,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;::AllocationScope</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; mFinalizer;</span>
<span class="line">  Core::CpuRingBufferAllocator&lt;unsigned char,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt; mAllocator;</span>
<span class="line">  FencedDynamicRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,2,0&gt; *mRing;</span>
<span class="line">  Core::CheckedRingBuffer&lt;2,0&gt; mCheckedRing;</span>
<span class="line">  const unsigned __int64 mFence;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0" tabindex="-1"><a class="header-anchor" href="#core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0"><span><code>Core::RingAllocatorContainer&lt;unsigned char,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::RingAllocatorContainer&lt;unsigned char,2,0,Core::CheckedRingBuffer&lt;2,0&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mCurrentFence;</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; mLastCompletedFence;</span>
<span class="line">  std::atomic&lt;bool&gt; mHasLastCompletedFence;</span>
<span class="line">  std::shared_ptr&lt;Core::CpuRingBufferAllocation_Buffer&gt; mBuffer;</span>
<span class="line">  FencedDynamicRingBuffer&lt;Core::CpuRingBufferAllocation_Buffer,2,0&gt; mRing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-details-scopedframebase-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution" tabindex="-1"><a class="header-anchor" href="#cg-details-scopedframebase-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution"><span><code>cg::details::ScopedFrameBase&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::details::ScopedFrameBase&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-details-scopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-0" tabindex="-1"><a class="header-anchor" href="#cg-details-scopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-0"><span><code>cg::details::ScopedFrame&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution,0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::details::ScopedFrame&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution,0&gt; : cg::details::ScopedFrameBase&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution&gt;</span>
<span class="line">{</span>
<span class="line">  cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt; *mDispatcher;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-details-specializedscopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-void" tabindex="-1"><a class="header-anchor" href="#cg-details-specializedscopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-void"><span><code>cg::details::SpecializedScopedFrame&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution,void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::details::SpecializedScopedFrame&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution,void&gt; : cg::details::ScopedFrame&lt;cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution,0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-resourcemanager-std-unique-ptr-dragon-materials-compiledmaterialdefinition-std-string-void-std-unique-ptr-dragon-materials-compiledmaterialdefinition-std-unordered-map" tabindex="-1"><a class="header-anchor" href="#cg-resourcemanager-std-unique-ptr-dragon-materials-compiledmaterialdefinition-std-string-void-std-unique-ptr-dragon-materials-compiledmaterialdefinition-std-unordered-map"><span><code>cg::ResourceManager&lt;std::unique_ptr&lt;dragon::materials::CompiledMaterialDefinition&gt;,std::string,void,std::unique_ptr&lt;dragon::materials::CompiledMaterialDefinition&gt; *,std::unordered_map&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::ResourceManager&lt;std::unique_ptr&lt;dragon::materials::CompiledMaterialDefinition&gt;,std::string,void,std::unique_ptr&lt;dragon::materials::CompiledMaterialDefinition&gt; *,std::unordered_map&gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,std::unique_ptr&lt;dragon::materials::CompiledMaterialDefinition&gt;&gt; mContainer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-resourcemanager-std-unique-ptr-dragon-materials-material-dragon-materials-materiallocation-void-std-unique-ptr-dragon-materials-material-std-unordered-map" tabindex="-1"><a class="header-anchor" href="#cg-resourcemanager-std-unique-ptr-dragon-materials-material-dragon-materials-materiallocation-void-std-unique-ptr-dragon-materials-material-std-unordered-map"><span><code>cg::ResourceManager&lt;std::unique_ptr&lt;dragon::materials::Material&gt;,dragon::materials::MaterialLocation,void,std::unique_ptr&lt;dragon::materials::Material&gt; *,std::unordered_map&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::ResourceManager&lt;std::unique_ptr&lt;dragon::materials::Material&gt;,dragon::materials::MaterialLocation,void,std::unique_ptr&lt;dragon::materials::Material&gt; *,std::unordered_map&gt;</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;dragon::materials::MaterialLocation,std::unique_ptr&lt;dragon::materials::Material&gt;&gt; mContainer;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-ifilesystem" tabindex="-1"><a class="header-anchor" href="#core-ifilesystem"><span><code>Core::IFileSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::IFileSystem</span>
<span class="line">{</span>
<span class="line">  Core::IFileSystem_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-ifile" tabindex="-1"><a class="header-anchor" href="#core-ifile"><span><code>Core::IFile</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::IFile</span>
<span class="line">{</span>
<span class="line">  Core::IFile_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-ifile-vtbl" tabindex="-1"><a class="header-anchor" href="#core-ifile-vtbl"><span><code>Core::IFile_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::IFile_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFile)(Core::IFile *this);</span>
<span class="line">  Core::Result *(__fastcall *readExactly)(Core::IFile *this, Core::Result *result, void *, unsigned __int64);</span>
<span class="line">  Core::Result *(__fastcall *readAtPosition)(Core::IFile *this, Core::Result *result, unsigned __int64, void *, unsigned __int64, unsigned __int64 *);</span>
<span class="line">  Core::Result *(__fastcall *getSize)(Core::IFile *this, Core::Result *result, unsigned __int64 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-ifilesystem-vtbl" tabindex="-1"><a class="header-anchor" href="#core-ifilesystem-vtbl"><span><code>Core::IFileSystem_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::IFileSystem_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFileSystem)(Core::IFileSystem *this);</span>
<span class="line">  std::unique_ptr&lt;Core::IFile&gt; *(__fastcall *openFile)(Core::IFileSystem *this, std::unique_ptr&lt;Core::IFile&gt; *result, Core::Path, Core::FileOpenMode, Core::FileBufferingMode);</span>
<span class="line">  bool (__fastcall *fileExists)(Core::IFileSystem *this, Core::Path);</span>
<span class="line">  Core::Result *(__fastcall *iterateOverDirectory)(Core::IFileSystem *this, Core::Result *result, Core::Path, Core::DirectoryIterationFlags, std::function&lt;Core::Result __cdecl(Core::DirectoryIterationItem const &amp;)&gt;);</span>
<span class="line">  Core::Result *(__fastcall *getDirectoryFiles)(Core::IFileSystem *this, Core::Result *result, std::vector&lt;Core::PathBuffer&lt;std::string &gt;&gt; *, Core::Path);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlog-threadspecificdata-scopedata" tabindex="-1"><a class="header-anchor" href="#contentlog-threadspecificdata-scopedata"><span><code>ContentLog::ThreadSpecificData::ScopeData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentLog::ThreadSpecificData::ScopeData</span>
<span class="line">{</span>
<span class="line">  std::string mMessage;</span>
<span class="line">  gsl::not_null&lt;ContentLog::ContentLogScope const *&gt; mContentLogScope;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contextmessagelogger-vtbl" tabindex="-1"><a class="header-anchor" href="#contextmessagelogger-vtbl"><span><code>ContextMessageLogger_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContextMessageLogger_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContextMessageLogger)(ContextMessageLogger *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contextmessage" tabindex="-1"><a class="header-anchor" href="#contextmessage"><span><code>ContextMessage</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContextMessage</span>
<span class="line">{</span>
<span class="line">  LogArea mArea;</span>
<span class="line">  LogLevel mLevel;</span>
<span class="line">  std::string mMessage;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlog-threadspecificdata" tabindex="-1"><a class="header-anchor" href="#contentlog-threadspecificdata"><span><code>ContentLog::ThreadSpecificData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentLog::ThreadSpecificData</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ContentLog::ThreadSpecificData::ScopeData&gt; mScope;</span>
<span class="line">  std::vector&lt;ContextMessageLogger *&gt; mMessageLoggers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlog-scopehandler" tabindex="-1"><a class="header-anchor" href="#contentlog-scopehandler"><span><code>ContentLog::ScopeHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentLog::ScopeHandler : std::enable_shared_from_this&lt;ContentLog::ScopeHandler&gt;</span>
<span class="line">{</span>
<span class="line">  Bedrock::Threading::InstancedThreadLocal&lt;ContentLog::ThreadSpecificData,std::allocator&lt;ContentLog::ThreadSpecificData&gt; &gt; mThreadSpecificData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlog" tabindex="-1"><a class="header-anchor" href="#contentlog"><span><code>ContentLog</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentLog : Bedrock::EnableNonOwnerReferences, DisableServiceLocatorOverride</span>
<span class="line">{</span>
<span class="line">  bool mEnabled;</span>
<span class="line">  std::map&lt;typeid_t&lt;ContentLog&gt;,ContentLog::ContentLogEndPointData,std::less&lt;typeid_t&lt;ContentLog&gt; &gt;,std::allocator&lt;std::pair&lt;typeid_t&lt;ContentLog&gt; const ,ContentLog::ContentLogEndPointData&gt; &gt; &gt; mEndPoints;</span>
<span class="line">  std::mutex mEndpointMutex;</span>
<span class="line">  std::shared_ptr&lt;ContentLog::ScopeHandler&gt; mScopeHandler;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlogfileendpoint" tabindex="-1"><a class="header-anchor" href="#contentlogfileendpoint"><span><code>ContentLogFileEndPoint</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) ContentLogFileEndPoint : ContentLogEndPoint</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;Core::OutputFileStream&gt; mFileStream;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mDebugLogDirectory;</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mFilePath;</span>
<span class="line">  unsigned int mNumTimesOpened;</span>
<span class="line">  bool mIsEnabled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlogfileendpoint-vtbl" tabindex="-1"><a class="header-anchor" href="#contentlogfileendpoint-vtbl"><span><code>ContentLogFileEndPoint_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContentLogFileEndPoint_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~LogEndPoint)(Bedrock::LogEndPoint *this);</span>
<span class="line">  void (__fastcall *log)(Bedrock::LogEndPoint *this, const char *);</span>
<span class="line">  void (__fastcall *flush)(Bedrock::LogEndPoint *this);</span>
<span class="line">  void (__fastcall *setEnabled)(Bedrock::LogEndPoint *this, bool);</span>
<span class="line">  bool (__fastcall *isEnabled)(Bedrock::LogEndPoint *this);</span>
<span class="line">  void (__fastcall *log)(ContentLogEndPoint *this, const LogArea, const LogLevel, const char *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-lrucache-core-pathbuffer-std-string-fmod-sound-std-shared-ptr-fmod-sound-cacheitem" tabindex="-1"><a class="header-anchor" href="#core-lrucache-core-pathbuffer-std-string-fmod-sound-std-shared-ptr-fmod-sound-cacheitem"><span><code>Core::LRUCache&lt;Core::PathBuffer&lt;std::string &gt;,FMOD::Sound,std::shared_ptr&lt;FMOD::Sound&gt; &gt;::CacheItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::LRUCache&lt;Core::PathBuffer&lt;std::string &gt;,FMOD::Sound,std::shared_ptr&lt;FMOD::Sound&gt; &gt;::CacheItem</span>
<span class="line">{</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mKey;</span>
<span class="line">  std::shared_ptr&lt;FMOD::Sound&gt; mValue;</span>
<span class="line">  unsigned __int64 mSizeInBytes;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-lrucache-core-pathbuffer-std-string-fmod-sound-std-shared-ptr-fmod-sound" tabindex="-1"><a class="header-anchor" href="#core-lrucache-core-pathbuffer-std-string-fmod-sound-std-shared-ptr-fmod-sound"><span><code>Core::LRUCache&lt;Core::PathBuffer&lt;std::string &gt;,FMOD::Sound,std::shared_ptr&lt;FMOD::Sound&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::LRUCache&lt;Core::PathBuffer&lt;std::string &gt;,FMOD::Sound,std::shared_ptr&lt;FMOD::Sound&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_mutex mAccess;</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; mCurrentSizeInBytes;</span>
<span class="line">  const unsigned __int64 mCapacityInBytes;</span>
<span class="line">  std::list&lt;Core::LRUCache&lt;Core::PathBuffer&lt;std::string &gt;,FMOD::Sound,std::shared_ptr&lt;FMOD::Sound&gt; &gt;::CacheItem,std::allocator&lt;Core::LRUCache&lt;Core::PathBuffer&lt;std::string &gt;,FMOD::Sound,std::shared_ptr&lt;FMOD::Sound&gt; &gt;::CacheItem&gt; &gt; mCacheList;</span>
<span class="line">  std::unordered_map&lt;Core::PathBuffer&lt;std::string &gt;,std::_List_iterator&lt;std::_List_val&lt;std::_List_simple_types&lt;Core::LRUCache&lt;Core::PathBuffer&lt;std::string &gt;,FMOD::Sound,std::shared_ptr&lt;FMOD::Sound&gt; &gt;::CacheItem&gt; &gt; &gt;,std::hash&lt;Core::PathBuffer&lt;std::string &gt; &gt;,std::equal_to&lt;Core::PathBuffer&lt;std::string &gt; &gt;,std::allocator&lt;std::pair&lt;Core::PathBuffer&lt;std::string &gt; const ,std::_List_iterator&lt;std::_List_val&lt;std::_List_simple_types&lt;Core::LRUCache&lt;Core::PathBuffer&lt;std::string &gt;,FMOD::Sound,std::shared_ptr&lt;FMOD::Sound&gt; &gt;::CacheItem&gt; &gt; &gt; &gt; &gt; &gt; mCacheMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="custommusic-queuedmusicitem" tabindex="-1"><a class="header-anchor" href="#custommusic-queuedmusicitem"><span><code>CustomMusic::QueuedMusicItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CustomMusic::QueuedMusicItem</span>
<span class="line">{</span>
<span class="line">  std::string mEventName;</span>
<span class="line">  float mVolume;</span>
<span class="line">  float mFadeoutSeconds;</span>
<span class="line">  _BYTE mPlayMode[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="custommusic" tabindex="-1"><a class="header-anchor" href="#custommusic"><span><code>CustomMusic</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CustomMusic : Music</span>
<span class="line">{</span>
<span class="line">  _BYTE mCurrentPlayMode[1];</span>
<span class="line">  std::queue&lt;CustomMusic::QueuedMusicItem&gt; mMusicQueue;</span>
<span class="line">  bool _mIsActive;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="custommusic-vtbl" tabindex="-1"><a class="header-anchor" href="#custommusic-vtbl"><span><code>CustomMusic_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CustomMusic_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Music)(Music *this);</span>
<span class="line">  bool (__fastcall *hasTracks)(Music *this);</span>
<span class="line">  void (__fastcall *nextTrack)(Music *this);</span>
<span class="line">  void (__fastcall *setActive)(Music *this, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientassetcachecontroller-unloadcallback" tabindex="-1"><a class="header-anchor" href="#clientassetcachecontroller-unloadcallback"><span><code>ClientAssetCacheController::UnloadCallback</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ClientAssetCacheController::UnloadCallback</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; mCallback;</span>
<span class="line">  bool mResourceCached;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientassetcachecontroller" tabindex="-1"><a class="header-anchor" href="#clientassetcachecontroller"><span><code>ClientAssetCacheController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientAssetCacheController</span>
<span class="line">{</span>
<span class="line">  bool mIsInGame;</span>
<span class="line">  bool mCacheInvalid;</span>
<span class="line">  std::vector&lt;std::string&gt; mPackIds;</span>
<span class="line">  std::map&lt;enum AssetCacheCategory,ClientAssetCacheController::UnloadCallback&gt; mUnloadCallbacks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clubsservice" tabindex="-1"><a class="header-anchor" href="#clubsservice"><span><code>ClubsService</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClubsService : ServiceClient</span>
<span class="line">{</span>
<span class="line">  IMinecraftEventing *mMinecraftEventing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clubsservice-vtbl" tabindex="-1"><a class="header-anchor" href="#clubsservice-vtbl"><span><code>ClubsService_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClubsService_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ServiceClient)(ServiceClient *this);</span>
<span class="line">  void (__fastcall *update)(ServiceClient *this);</span>
<span class="line">  void (__fastcall *_submitRequest)(ServiceClient *this, std::shared_ptr&lt;RequestHandler&gt;);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cubemapbackgroundresources" tabindex="-1"><a class="header-anchor" href="#cubemapbackgroundresources"><span><code>CubemapBackgroundResources</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CubemapBackgroundResources</span>
<span class="line">{</span>
<span class="line">  std::array&lt;mce::TexturePtr,6&gt; mPanoramaImages;</span>
<span class="line">  std::array&lt;ResourceLocation,6&gt; mPanormaResourceLocations;</span>
<span class="line">  mce::ClientTexture mCubemapTexture;</span>
<span class="line">  ResourceLocation mOverlayLocation;</span>
<span class="line">  mce::TexturePtr mOverlayTexture;</span>
<span class="line">  int mTextureRefCount;</span>
<span class="line">  bool mPrimaryClientUnloaded;</span>
<span class="line">  bool mPendingRecreateCubemap;</span>
<span class="line">  mce::Color mFadeInColor;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstanceeventlistener" tabindex="-1"><a class="header-anchor" href="#clientinstanceeventlistener"><span><code>ClientInstanceEventListener</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstanceEventListener</span>
<span class="line">{</span>
<span class="line">  ClientInstanceEventListener_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance" tabindex="-1"><a class="header-anchor" href="#clientinstance"><span><code>ClientInstance</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance : IClientInstance, Core::StorageAreaStateListener, GameCallbacks, PlayerListener, std::enable_shared_from_this&lt;ClientInstance&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstanceState mClientState;</span>
<span class="line">  IMinecraftApp *mApp;</span>
<span class="line">  LevelListener *mLevelListener;</span>
<span class="line">  IMinecraftGame *mMinecraftGame;</span>
<span class="line">  std::unique_ptr&lt;Minecraft&gt; mMinecraft;</span>
<span class="line">  bool mIsFullVanillaPackOnStack;</span>
<span class="line">  std::unique_ptr&lt;LevelRenderer&gt; mLevelRenderer;</span>
<span class="line">  std::unique_ptr&lt;LightTexture&gt; mLightTexture;</span>
<span class="line">  std::unique_ptr&lt;LoopbackPacketSender&gt; mPacketSender;</span>
<span class="line">  std::unique_ptr&lt;HolographicPlatform&gt; mHoloInput;</span>
<span class="line">  std::unique_ptr&lt;VoiceSystem&gt; mVoiceSystem;</span>
<span class="line">  std::unique_ptr&lt;MoveInputHandler&gt; mClientMoveInputHandler;</span>
<span class="line">  std::unique_ptr&lt;ClientInputHandler&gt; mClientInputHandler;</span>
<span class="line">  std::unique_ptr&lt;MinecraftKeyboardManager&gt; mKeyboardManager;</span>
<span class="line">  std::unique_ptr&lt;HitDetectSystem&gt; mHitDetectSystem;</span>
<span class="line">  std::shared_ptr&lt;UserAuthentication&gt; mUserAuthentication;</span>
<span class="line">  std::unique_ptr&lt;SceneFactory&gt; mSceneFactory;</span>
<span class="line">  std::unique_ptr&lt;CachedScenes&gt; mCachesScenes;</span>
<span class="line">  std::unique_ptr&lt;CameraManager&gt; mCameraManager;</span>
<span class="line">  Actor *mCameraEntity;</span>
<span class="line">  Actor *mCameraTargetEntity;</span>
<span class="line">  LocalPlayer *mPlayer;</span>
<span class="line">  ActorUniqueID mCameraTargetEntityId;</span>
<span class="line">  std::unique_ptr&lt;BuildActionIntention&gt; mInProgressBai;</span>
<span class="line">  int mLastBuildActionTick;</span>
<span class="line">  float mHoloviewerScale;</span>
<span class="line">  float mRealityModeFrameFactor;</span>
<span class="line">  bool mRealityModeToggleTriggered;</span>
<span class="line">  ClientPlayMode mPlayMode;</span>
<span class="line">  bool mTickedLastFrame;</span>
<span class="line">  std::atomic&lt;bool&gt; mOpenControllerDisconnectScreen;</span>
<span class="line">  std::atomic&lt;bool&gt; mHandlingControllerDisconnect;</span>
<span class="line">  std::atomic&lt;bool&gt; mConnectGamepadScreenActive;</span>
<span class="line">  PlayScreenDefaultTab mDefaultPlayscreenTab;</span>
<span class="line">  bool mIsInUpdate;</span>
<span class="line">  bool mLivingRoomCredits;</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; mCreditsCallback;</span>
<span class="line">  std::chrono::time_point&lt;std::chrono::steady_clock,std::chrono::duration&lt;__int64,std::ratio&lt;1,1000000000&gt; &gt; &gt; mNoBlockBreakUntil;</span>
<span class="line">  bool mNewDictationString;</span>
<span class="line">  std::string mDictation;</span>
<span class="line">  mce::ViewportInfo mViewportInfo;</span>
<span class="line">  ClientInstance::ClientRenderResources mClientRenderResources;</span>
<span class="line">  mce::Texture *mLevelTexture;</span>
<span class="line">  mce::Camera mCamera;</span>
<span class="line">  ShaderColor mShaderColor;</span>
<span class="line">  ShaderColor mDarkShaderColor;</span>
<span class="line">  Vec3 mLastPointerLocation;</span>
<span class="line">  std::unique_ptr&lt;SceneStack&gt; mSceneStack;</span>
<span class="line">  std::unique_ptr&lt;hbui::Router&gt; mUIRouter;</span>
<span class="line">  std::unique_ptr&lt;ContentCatalogService&gt; mServerService;</span>
<span class="line">  std::unique_ptr&lt;UIProfanityContext&gt; mUIProfanityContext;</span>
<span class="line">  std::shared_ptr&lt;TextToSpeechClient&gt; mTextToSpeechClient;</span>
<span class="line">  std::shared_ptr&lt;TTSEventManager&gt; mTTSEventManager;</span>
<span class="line">  std::unique_ptr&lt;TaskGroup&gt; mTaskGroup;</span>
<span class="line">  std::unique_ptr&lt;BlockTessellator&gt; mBlockTessellator;</span>
<span class="line">  std::unique_ptr&lt;BlockActorRenderDispatcher&gt; mBlockEntityRenderDispatcher;</span>
<span class="line">  std::unique_ptr&lt;ActorRenderDispatcher&gt; mEntityRenderDispatcher;</span>
<span class="line">  std::unique_ptr&lt;ActorBlockRenderer&gt; mEntityBlockRenderer;</span>
<span class="line">  std::unique_ptr&lt;ItemInHandRenderer&gt; mItemInHandRenderer;</span>
<span class="line">  std::unique_ptr&lt;ItemRenderer&gt; mItemRenderer;</span>
<span class="line">  std::unique_ptr&lt;GuiData&gt; mGuiData;</span>
<span class="line">  std::unique_ptr&lt;GuidedFlowManager&gt; mGuidedFlowManager;</span>
<span class="line">  std::unique_ptr&lt;MobEffectsLayout&gt; mMobEffectsLayout;</span>
<span class="line">  std::unique_ptr&lt;ToastManager&gt; mToastManager;</span>
<span class="line">  const unsigned __int8 mClientSubId;</span>
<span class="line">  std::unique_ptr&lt;SkinRepositoryClientInterface&gt; mSkinRepositoryClientInterface;</span>
<span class="line">  std::shared_ptr&lt;persona::PersonaPieceCollectionModel&gt; mPersonaPieceCollectionModel;</span>
<span class="line">  ClientHMDState mHMDState;</span>
<span class="line">  bool mIsSceneStackChanging;</span>
<span class="line">  std::unique_ptr&lt;FogDefinitionRegistry&gt; mFogDefinitionRegistry;</span>
<span class="line">  std::unique_ptr&lt;FogManager&gt; mFogManager;</span>
<span class="line">  bool mHasSwitchedScreen;</span>
<span class="line">  bool mShouldLeaveGame;</span>
<span class="line">  bool mPreparingToLeaveGame;</span>
<span class="line">  bool mIsLeavingGame;</span>
<span class="line">  bool mSyncLeaveGame;</span>
<span class="line">  bool mDestroyingGame;</span>
<span class="line">  bool mShuttingDown;</span>
<span class="line">  bool mUsingTripodNow;</span>
<span class="line">  std::chrono::time_point&lt;std::chrono::steady_clock,std::chrono::duration&lt;__int64,std::ratio&lt;1,1000000000&gt; &gt; &gt; mServerConnectionTime;</span>
<span class="line">  unsigned int mServerPingTime;</span>
<span class="line">  std::deque&lt;std::string&gt; mSentMessageHistory;</span>
<span class="line">  std::deque&lt;std::string&gt; mDevConsoleMessageHistory;</span>
<span class="line">  std::function&lt;void __cdecl(std::string const &amp;,enum BehaviorStatus)&gt; mBehaviorCommandStatusCallback;</span>
<span class="line">  std::unique_ptr&lt;UIEventCoordinator&gt; mUIEventCoordinator;</span>
<span class="line">  std::unique_ptr&lt;ClientHitDetectCoordinator&gt; mHitEventCoordinator;</span>
<span class="line">  std::unordered_map&lt;std::string,int&gt; mProfanityExactMap;</span>
<span class="line">  std::unordered_set&lt;std::string&gt; mProfanityContainsSet;</span>
<span class="line">  std::unique_ptr&lt;EducationOptions&gt; mEducationOptions;</span>
<span class="line">  glm::tvec2&lt;float,0&gt; mPrevCursorPos;</span>
<span class="line">  glm::tvec2&lt;float,0&gt; mCurrentCursorPos;</span>
<span class="line">  float mCursorPosAlpha;</span>
<span class="line">  LatencyGraphDisplay *mLatencyGraphDisplay;</span>
<span class="line">  std::unique_ptr&lt;GameModuleClient&gt; mGameModule;</span>
<span class="line">  gsl::not_null&lt;Bedrock::NonOwnerPointer&lt;ClientInstanceEventCoordinator&gt; &gt; mEventCoordinator;</span>
<span class="line">  std::unique_ptr&lt;MinecraftClientScriptEngine&gt; mScriptEngine;</span>
<span class="line">  int mGameControllerId;</span>
<span class="line">  bool mHideSnakeGUI;</span>
<span class="line">  bool mHookMouse;</span>
<span class="line">  bool mResponse;</span>
<span class="line">  Actor *mHovered;</span>
<span class="line">  std::vector&lt;std::string&gt; mAddOnList;</span>
<span class="line">  int mSendCreateUiFinished;</span>
<span class="line">  bool mLoadFinished;</span>
<span class="line">  bool mHudScreenFinish;</span>
<span class="line">  std::unique_ptr&lt;hbui::SceneProvider&gt; mSceneProvider;</span>
<span class="line">  hbui::Telemetry mHBUITelemetry;</span>
<span class="line">  std::shared_ptr&lt;ClientRequirementVerifier&gt; mClientRequirementVerifier;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputhandler" tabindex="-1"><a class="header-anchor" href="#clientinputhandler"><span><code>ClientInputHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputHandler</span>
<span class="line">{</span>
<span class="line">  IClientInstance *mClient;</span>
<span class="line">  InputHandler *mInputHandler;</span>
<span class="line">  std::unique_ptr&lt;ClientBindingFactory&gt; mBindingFactory;</span>
<span class="line">  std::unique_ptr&lt;ClientInputMappingFactory&gt; mMappingFactory;</span>
<span class="line">  std::string mLastGameMode;</span>
<span class="line">  std::string mLastHoloUIMode;</span>
<span class="line">  bool mIsFlying;</span>
<span class="line">  bool mIsSneaking;</span>
<span class="line">  bool mIsSwimming;</span>
<span class="line">  bool mIsInWater;</span>
<span class="line">  bool mIsInScaffolding;</span>
<span class="line">  bool mIsOnScaffolding;</span>
<span class="line">  bool mIsCreativeMode;</span>
<span class="line">  bool mInteractActive;</span>
<span class="line">  bool mHasMobEffects;</span>
<span class="line">  bool mShowJumpButton;</span>
<span class="line">  bool mShowSneakButton;</span>
<span class="line">  std::unique_ptr&lt;ClientInputHandlerProxy&gt; mProxy;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientbindingfactory-vtbl" tabindex="-1"><a class="header-anchor" href="#clientbindingfactory-vtbl"><span><code>ClientBindingFactory_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBindingFactory_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BindingFactory)(BindingFactory *this);</span>
<span class="line">  std::function&lt;bool __cdecl(void)&gt; *(__fastcall *getBooleanBinding)(BindingFactory *this, std::function&lt;bool __cdecl(void)&gt; *result, const std::string *);</span>
<span class="line">  std::function&lt;std::string __cdecl(void)&gt; *(__fastcall *getStringBinding)(BindingFactory *this, std::function&lt;std::string __cdecl(void)&gt; *result, const std::string *);</span>
<span class="line">  std::function&lt;glm::tvec2&lt;float,0&gt; __cdecl(void)&gt; *(__fastcall *getPointBinding)(BindingFactory *this, std::function&lt;glm::tvec2&lt;float,0&gt; __cdecl(void)&gt; *result, const std::string *);</span>
<span class="line">  std::function&lt;RectangleArea __cdecl(void)&gt; *(__fastcall *getAreaBinding)(BindingFactory *this, std::function&lt;RectangleArea __cdecl(void)&gt; *result, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chordbuttonmapping" tabindex="-1"><a class="header-anchor" href="#chordbuttonmapping"><span><code>ChordButtonMapping</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChordButtonMapping</span>
<span class="line">{</span>
<span class="line">  std::string generatedButtonName;</span>
<span class="line">  std::vector&lt;std::string&gt; sourceButtonNames;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputmappingfactory" tabindex="-1"><a class="header-anchor" href="#clientinputmappingfactory"><span><code>ClientInputMappingFactory</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputMappingFactory : InputMappingFactory</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,InputMapping&gt; mActiveInputMappings;</span>
<span class="line">  std::unordered_map&lt;std::string,InputMapping&gt; mInputMappingTemplates;</span>
<span class="line">  bool mInvertYAxis;</span>
<span class="line">  bool mSwapGamepadButtonsXY;</span>
<span class="line">  bool mSwapGamepadButtonsAB;</span>
<span class="line">  float mSensitivity;</span>
<span class="line">  GamePadRemappingLayout mGameControllerRemappingLayout;</span>
<span class="line">  GamePadRemappingLayout mMotionControllerRemappingLayout;</span>
<span class="line">  std::weak_ptr&lt;KeyboardRemappingLayout&gt; mKeyboardRemappingLayout;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputmappingfactory-vtbl" tabindex="-1"><a class="header-anchor" href="#clientinputmappingfactory-vtbl"><span><code>ClientInputMappingFactory_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientInputMappingFactory_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~InputMappingFactory)(InputMappingFactory *this);</span>
<span class="line">  const InputMapping *(__fastcall *getMapping)(InputMappingFactory *this, const std::string *);</span>
<span class="line">  void (__fastcall *createInputMappingTemplates)(ClientInputMappingFactory *this, Options *);</span>
<span class="line">  TouchInputMapping *(__fastcall *_createScreenTouchMapping)(ClientInputMappingFactory *this, TouchInputMapping *result);</span>
<span class="line">  std::vector&lt;DeviceButtonMapping&gt; *(__fastcall *_createScreenDeviceButtonMapping)(ClientInputMappingFactory *this, std::vector&lt;DeviceButtonMapping&gt; *result);</span>
<span class="line">  void (__fastcall *_updateKeyboardAndMouseControls)(ClientInputMappingFactory *this);</span>
<span class="line">  void (__fastcall *_updateGameControllerControls)(ClientInputMappingFactory *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputhandlerproxycallbacks" tabindex="-1"><a class="header-anchor" href="#clientinputhandlerproxycallbacks"><span><code>ClientInputHandlerProxyCallbacks</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj ClientInputHandlerProxyCallbacks</span>
<span class="line">{</span>
<span class="line">  std::function&lt;unsigned int __cdecl(std::string const &amp;)&gt; mGetNameId;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputhandlerproxy" tabindex="-1"><a class="header-anchor" href="#clientinputhandlerproxy"><span><code>ClientInputHandlerProxy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputHandlerProxy</span>
<span class="line">{</span>
<span class="line">  const ClientInputHandlerProxyCallbacks mCallbacks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clienthitdetectlistener" tabindex="-1"><a class="header-anchor" href="#clienthitdetectlistener"><span><code>ClientHitDetectListener</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientHitDetectListener</span>
<span class="line">{</span>
<span class="line">  ClientHitDetectListener_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clienthitdetectlistener-vtbl" tabindex="-1"><a class="header-anchor" href="#clienthitdetectlistener-vtbl"><span><code>ClientHitDetectListener_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientHitDetectListener_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ClientHitDetectListener)(ClientHitDetectListener *this);</span>
<span class="line">  EventResult (__fastcall *onChangedHitResult)(ClientHitDetectListener *this, HitResult *);</span>
<span class="line">  EventResult (__fastcall *onContinuousHitResult)(ClientHitDetectListener *this, HitResult *);</span>
<span class="line">  EventResult (__fastcall *onChangedPickHitResult)(ClientHitDetectListener *this, HitResult *);</span>
<span class="line">  EventResult (__fastcall *onContinuousPickHitResult)(ClientHitDetectListener *this, HitResult *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clienthitdetectcoordinator" tabindex="-1"><a class="header-anchor" href="#clienthitdetectcoordinator"><span><code>ClientHitDetectCoordinator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientHitDetectCoordinator : EventCoordinator&lt;ClientHitDetectListener&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cameraloader" tabindex="-1"><a class="header-anchor" href="#cameraloader"><span><code>CameraLoader</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CameraLoader</span>
<span class="line">{</span>
<span class="line">  CameraLoader_vtbl *__vftable /*VFT*/;</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;CameraBehaviorLoader&gt;&gt; mRegisteredBehaviorLoaders;</span>
<span class="line">  std::unordered_map&lt;HashedString,std::unique_ptr&lt;ActivationRule&gt;&gt; mRegisteredActivationRules;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cameraloader-vtbl" tabindex="-1"><a class="header-anchor" href="#cameraloader-vtbl"><span><code>CameraLoader_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraLoader_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CameraLoader)(CameraLoader *this);</span>
<span class="line">  void (__fastcall *setupFallbackCamera)(CameraLoader *this, CameraDirector *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehaviorloader" tabindex="-1"><a class="header-anchor" href="#camerabehaviorloader"><span><code>CameraBehaviorLoader</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CameraBehaviorLoader</span>
<span class="line">{</span>
<span class="line">  CameraBehaviorLoader_vtbl *__vftable /*VFT*/;</span>
<span class="line">  HashedString mId;</span>
<span class="line">  std::string mName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehaviorloader-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehaviorloader-vtbl"><span><code>CameraBehaviorLoader_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehaviorLoader_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CameraBehaviorLoader)(CameraBehaviorLoader *this);</span>
<span class="line">  std::unique_ptr&lt;ICameraBehavior&gt; *(__fastcall *create)(CameraBehaviorLoader *this, std::unique_ptr&lt;ICameraBehavior&gt; *result);</span>
<span class="line">  void (__fastcall *parse)(CameraBehaviorLoader *this, Json::Value *, ICameraBehavior *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerapairhasher" tabindex="-1"><a class="header-anchor" href="#camerapairhasher"><span><code>CameraPairHasher</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CameraPairHasher</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerablend" tabindex="-1"><a class="header-anchor" href="#camerablend"><span><code>CameraBlend</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBlend</span>
<span class="line">{</span>
<span class="line">  HashedString mCameraFromId;</span>
<span class="line">  HashedString mCameraToId;</span>
<span class="line">  float mPercentage;</span>
<span class="line">  float mFieldOfViewOffset;</span>
<span class="line">  Vec3 mPositionOffset;</span>
<span class="line">  glm::tquat&lt;float,0&gt; mRotationOffset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cameramanager" tabindex="-1"><a class="header-anchor" href="#cameramanager"><span><code>CameraManager</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) CameraManager</span>
<span class="line">{</span>
<span class="line">  bool mIsDebugCameraActive;</span>
<span class="line">  bool mIsDebugCameraControlActive;</span>
<span class="line">  float mPreviousUpdateTime;</span>
<span class="line">  std::unique_ptr&lt;CameraLoader&gt; mCameraLoader;</span>
<span class="line">  std::unordered_map&lt;HashedString,CameraDirector&gt; mAvailableCameras;</span>
<span class="line">  std::unordered_map&lt;std::pair&lt;HashedString,HashedString&gt;,CameraBlendSettings,CameraPairHasher,std::equal_to&lt;std::pair&lt;HashedString,HashedString&gt; &gt;,std::allocator&lt;std::pair&lt;std::pair&lt;HashedString,HashedString&gt; const ,CameraBlendSettings&gt; &gt; &gt; mCameraBlends;</span>
<span class="line">  CameraDirector mFallbackCamera;</span>
<span class="line">  HashedString mOverrideCamera;</span>
<span class="line">  HashedString mForceActivateCamera;</span>
<span class="line">  CameraBlend mCameraBlend;</span>
<span class="line">  Camera mCamera;</span>
<span class="line">  bool mDebugRenderFlagActiveCamera;</span>
<span class="line">  bool mDebugRenderFlagAvoidance;</span>
<span class="line">  bool mDebugRenderFlagFraming;</span>
<span class="line">  bool mDebugRenderFlagSpline;</span>
<span class="line">  bool mDebugRenderFlagAll;</span>
<span class="line">  bool mIsBindingEntity;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-clientrenderresources" tabindex="-1"><a class="header-anchor" href="#clientinstance-clientrenderresources"><span><code>ClientInstance::ClientRenderResources</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::ClientRenderResources</span>
<span class="line">{</span>
<span class="line">  mce::Texture *mUITexture;</span>
<span class="line">  mce::TexturePtr mUICursorTexture;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chestblockactor" tabindex="-1"><a class="header-anchor" href="#chestblockactor"><span><code>ChestBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ChestBlockActor : RandomizableBlockActorFillingContainer</span>
<span class="line">{</span>
<span class="line">  float mSpeed;</span>
<span class="line">  bool mIsGlobalChest;</span>
<span class="line">  bool mUsesLegacyBlockDetection;</span>
<span class="line">  float mObstructionHeight;</span>
<span class="line">  __int8 mPairLead : 1;</span>
<span class="line">  float mOpenness;</span>
<span class="line">  float mOldOpenness;</span>
<span class="line">  bool mIsOpen;</span>
<span class="line">  int mTickInterval;</span>
<span class="line">  __int8 mPairingChanged : 1;</span>
<span class="line">  __int8 mAlongX : 1;</span>
<span class="line">  __int8 mDeferredPairLoad : 1;</span>
<span class="line">  __int8 mConverted : 1;</span>
<span class="line">  int mDeferredPairX;</span>
<span class="line">  int mDeferredPairZ;</span>
<span class="line">  ChestBlockActor *mLargeChestPaired;</span>
<span class="line">  BlockPos mLargeChestPairedPosition;</span>
<span class="line">  bool mIsTrappedChest;</span>
<span class="line">  bool mIsFindable;</span>
<span class="line">  std::unordered_set&lt;ActorUniqueID&gt; mOpenedByIds;</span>
<span class="line">  bool mNotifyPlayersOnChange;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conduitblockactor" tabindex="-1"><a class="header-anchor" href="#conduitblockactor"><span><code>ConduitBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ConduitBlockActor : BlockActor</span>
<span class="line">{</span>
<span class="line">  bool mIsActive;</span>
<span class="line">  bool mIsHunting;</span>
<span class="line">  int mBlockRefreshCounter;</span>
<span class="line">  unsigned __int64 mNextAmbientSound;</span>
<span class="line">  float mAnimationValue;</span>
<span class="line">  float mRotation;</span>
<span class="line">  int mRotationTickCount;</span>
<span class="line">  int mWindLevel;</span>
<span class="line">  int mEffectRange;</span>
<span class="line">  ActorUniqueID mTarget;</span>
<span class="line">  std::vector&lt;BlockPos&gt; mBlockPositions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clienthmdstate-vrrotationresetstate" tabindex="-1"><a class="header-anchor" href="#clienthmdstate-vrrotationresetstate"><span><code>ClientHMDState::VRRotationResetState</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientHMDState::VRRotationResetState</span>
<span class="line">{</span>
<span class="line">  bool mPendingReset;</span>
<span class="line">  bool mForceNextReset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clienthmdstate" tabindex="-1"><a class="header-anchor" href="#clienthmdstate"><span><code>ClientHMDState</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ClientHMDState</span>
<span class="line">{</span>
<span class="line">  ClientInstance *mClientInstance;</span>
<span class="line">  HoloHudDriftDynamics mHoloHudDriftDynamics;</span>
<span class="line">  mce::RenderStage *mUIStage;</span>
<span class="line">  mce::RenderStage *mLevelStage;</span>
<span class="line">  mce::Texture *mLevelTexture;</span>
<span class="line">  mce::Texture *mUITexture;</span>
<span class="line">  std::shared_ptr&lt;mce::Texture&gt; mUILayersTexture;</span>
<span class="line">  float mHoloScreenCursorXCoordNorm;</span>
<span class="line">  float mHoloScreenCursorYCoordNorm;</span>
<span class="line">  Matrix mLastLevelViewMatrix;</span>
<span class="line">  Matrix mLastLevelViewMatrixAbsolute;</span>
<span class="line">  Matrix mLastLevelProjMatrix;</span>
<span class="line">  Matrix mLastLevelWorldMatrix;</span>
<span class="line">  Matrix mHUDMatrixPatch;</span>
<span class="line">  Matrix mVRTransitionMatrixPatch;</span>
<span class="line">  float mLastLevelViewMatrixVerticalShift;</span>
<span class="line">  float mLastVRPitchAngle;</span>
<span class="line">  float mVRRotationAdjustment;</span>
<span class="line">  float mVRRotAdjYawTweak;</span>
<span class="line">  float mGazeCursorPitchBoostAngle;</span>
<span class="line">  float mFadeScreenAlpha;</span>
<span class="line">  float mDesiredFadeScreenAlpha;</span>
<span class="line">  float mRealityFrameModeWorldScale;</span>
<span class="line">  float mHeadSetDirForSleeping;</span>
<span class="line">  __int16 mPointerX;</span>
<span class="line">  __int16 mPointerY;</span>
<span class="line">  bool mHoloCursorOn;</span>
<span class="line">  bool mAppJustResumed;</span>
<span class="line">  ClientHMDState::VRRotationResetState mVRRotationResetState;</span>
<span class="line">  bool mHoloTransformsHaveBeenUpdated;</span>
<span class="line">  HoloUIToPoseSource mLastHoloUIToPoseSource;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientrequirementverifier" tabindex="-1"><a class="header-anchor" href="#clientrequirementverifier"><span><code>ClientRequirementVerifier</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ClientRequirementVerifier : std::enable_shared_from_this&lt;ClientRequirementVerifier&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;FlightingService&gt; mFlightingServiceExistenceTracker;</span>
<span class="line">  bool mTreatmentsReady;</span>
<span class="line">  std::vector&lt;std::string&gt; mTreatments;</span>
<span class="line">  unsigned int mFlightingMonitorHandle;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstanceeventlistener-vtbl" tabindex="-1"><a class="header-anchor" href="#clientinstanceeventlistener-vtbl"><span><code>ClientInstanceEventListener_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientInstanceEventListener_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ClientInstanceEventListener)(ClientInstanceEventListener *this);</span>
<span class="line">  EventResult (__fastcall *onClientInitializeStart)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">  EventResult (__fastcall *onClientInitializeEnd)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">  EventResult (__fastcall *onClientMinecraftInitialized)(ClientInstanceEventListener *this, ClientInstance *, Minecraft *);</span>
<span class="line">  EventResult (__fastcall *onClientCreatedLevel)(ClientInstanceEventListener *this, ClientInstance *, Level *);</span>
<span class="line">  EventResult (__fastcall *onClientUpdateStart)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">  EventResult (__fastcall *onClientUpdateEnd)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">  EventResult (__fastcall *onClientSuspend)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">  EventResult (__fastcall *onClientEnteredWorld)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">  EventResult (__fastcall *onStartLeaveGame)(ClientInstanceEventListener *this, ClientInstance *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstanceeventcoordinator" tabindex="-1"><a class="header-anchor" href="#clientinstanceeventcoordinator"><span><code>ClientInstanceEventCoordinator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstanceEventCoordinator : EventCoordinator&lt;ClientInstanceEventListener&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compactionlistenerenv" tabindex="-1"><a class="header-anchor" href="#compactionlistenerenv"><span><code>CompactionListenerEnv</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompactionListenerEnv : leveldb::EnvWrapper</span>
<span class="line">{</span>
<span class="line">  leveldb::Env *mTarget;</span>
<span class="line">  std::mutex mLock;</span>
<span class="line">  bool mCompactionRunning;</span>
<span class="line">  std::function&lt;void __cdecl(enum CompactionStatus)&gt; mCompactionCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compactionlistenerenv-vtbl" tabindex="-1"><a class="header-anchor" href="#compactionlistenerenv-vtbl"><span><code>CompactionListenerEnv_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CompactionListenerEnv_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Env)(leveldb::Env *this);</span>
<span class="line">  leveldb::Status *(__fastcall *NewSequentialFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::SequentialFile **);</span>
<span class="line">  leveldb::Status *(__fastcall *NewRandomAccessFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::RandomAccessFile **);</span>
<span class="line">  leveldb::Status *(__fastcall *NewWritableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);</span>
<span class="line">  leveldb::Status *(__fastcall *NewAppendableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);</span>
<span class="line">  bool (__fastcall *FileExists)(leveldb::Env *this, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *GetChildren)(leveldb::Env *this, leveldb::Status *result, const std::string *, std::vector&lt;std::string&gt; *);</span>
<span class="line">  leveldb::Status *(__fastcall *DeleteFileA)(leveldb::Env *this, leveldb::Status *result, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *CreateDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *DeleteDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *GetFileSize)(leveldb::Env *this, leveldb::Status *result, const std::string *, unsigned __int64 *);</span>
<span class="line">  leveldb::Status *(__fastcall *RenameFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, const std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *LockFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::FileLock **);</span>
<span class="line">  leveldb::Status *(__fastcall *UnlockFile)(leveldb::Env *this, leveldb::Status *result, leveldb::FileLock *);</span>
<span class="line">  void (__fastcall *Schedule)(leveldb::Env *this, void (__fastcall *)(void *), void *);</span>
<span class="line">  void (__fastcall *StartThread)(leveldb::Env *this, void (__fastcall *)(void *), void *);</span>
<span class="line">  leveldb::Status *(__fastcall *GetTestDirectory)(leveldb::Env *this, leveldb::Status *result, std::string *);</span>
<span class="line">  leveldb::Status *(__fastcall *NewLogger)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::Logger **);</span>
<span class="line">  unsigned __int64 (__fastcall *NowMicros)(leveldb::Env *this);</span>
<span class="line">  void (__fastcall *SleepForMicroseconds)(leveldb::Env *this, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblobcache-cache" tabindex="-1"><a class="header-anchor" href="#clientblobcache-cache"><span><code>ClientBlobCache::Cache</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlobCache::Cache : AppPlatformListener</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;DBStorage&gt; mDB;</span>
<span class="line">  TaskGroup mTaskGroup;</span>
<span class="line">  std::mutex mTimestampMutex;</span>
<span class="line">  std::unordered_map&lt;unsigned __int64,unsigned __int64&gt; mTimestamps;</span>
<span class="line">  unsigned __int64 mBaseTimestamp;</span>
<span class="line">  std::chrono::time_point&lt;std::chrono::steady_clock,std::chrono::duration&lt;__int64,std::ratio&lt;1,1000000000&gt; &gt; &gt; mCacheLoadingTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblobcache-cache-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblobcache-cache-vtbl"><span><code>ClientBlobCache::Cache_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlobCache::Cache_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~AppPlatformListener)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onLowMemory)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppUnpaused)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppPreSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppSuspended)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppResumed)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusLost)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppFocusGained)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onAppTerminated)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onOperationModeChanged)(AppPlatformListener *this, const OperationMode);</span>
<span class="line">  void (__fastcall *onPerformanceModeChanged)(AppPlatformListener *this, const bool);</span>
<span class="line">  void (__fastcall *onPushNotificationReceived)(AppPlatformListener *this, const PushNotificationMessage *);</span>
<span class="line">  void (__fastcall *onResizeBegin)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onResizeEnd)(AppPlatformListener *this);</span>
<span class="line">  void (__fastcall *onDeviceLost)(AppPlatformListener *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-edudiscovery-discoveryobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-observer-edudiscovery-discoveryobserver-core-singlethreadedlock"><span><code>Core::Observer&lt;EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-edudiscovery-discoveryobserver-core-singlethreadedlock-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-edudiscovery-discoveryobserver-core-singlethreadedlock-vtbl"><span><code>Core::Observer&lt;EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock&gt;)(Core::Observer&lt;EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-subject-edudiscovery-discoveryobserver-core-singlethreadedlock" tabindex="-1"><a class="header-anchor" href="#core-subject-edudiscovery-discoveryobserver-core-singlethreadedlock"><span><code>Core::Subject&lt;EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Subject&lt;EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock&gt;</span>
<span class="line">{</span>
<span class="line">  Core::SingleThreadedLock mLock;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;EDUDiscovery::DiscoveryObserver *&gt;&gt; mObservers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkperformancedata-atomictimeaccumulator" tabindex="-1"><a class="header-anchor" href="#chunkperformancedata-atomictimeaccumulator"><span><code>ChunkPerformanceData::AtomicTimeAccumulator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChunkPerformanceData::AtomicTimeAccumulator</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mCount;</span>
<span class="line">  std::chrono::duration&lt;__int64,std::ratio&lt;1,1000000000&gt; &gt; mTimeSum;</span>
<span class="line">  std::mutex mTimeSumMutex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkperformancedata-atomicmemoryaccumulator" tabindex="-1"><a class="header-anchor" href="#chunkperformancedata-atomicmemoryaccumulator"><span><code>ChunkPerformanceData::AtomicMemoryAccumulator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChunkPerformanceData::AtomicMemoryAccumulator</span>
<span class="line">{</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; mCount;</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; mMemorySum;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkperformancedata" tabindex="-1"><a class="header-anchor" href="#chunkperformancedata"><span><code>ChunkPerformanceData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChunkPerformanceData : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  ChunkPerformanceData::AtomicTimeAccumulator mRenderChunkBuildPerformanceData;</span>
<span class="line">  ChunkPerformanceData::AtomicTimeAccumulator mRenderChunkVisibilityPerformanceData;</span>
<span class="line">  ChunkPerformanceData::AtomicTimeAccumulator mClientLevelChunkInitialLightingPerformanceData;</span>
<span class="line">  ChunkPerformanceData::AtomicTimeAccumulator mServerLevelChunkLoadChunkPerformanceData;</span>
<span class="line">  ChunkPerformanceData::AtomicTimeAccumulator mServerLevelChunkPostProcessingPerformanceData;</span>
<span class="line">  ChunkPerformanceData::AtomicTimeAccumulator mServerLevelChunkCheckForReplacementDataPerformanceData;</span>
<span class="line">  ChunkPerformanceData::AtomicTimeAccumulator mServerLevelChunkInitialLightingPerformanceData;</span>
<span class="line">  ChunkPerformanceData::AtomicMemoryAccumulator mRenderChunkMemorySizePerformanceData;</span>
<span class="line">  ChunkPerformanceData::AtomicTimeAccumulator mBiomeDecorationSystemDecorateTimeData;</span>
<span class="line">  ChunkPerformanceData::AtomicTimeAccumulator mScatterFeaturePlaceTimeData;</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; mBiomeFeaturePlaceCallsCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkbuildorderpolicybase" tabindex="-1"><a class="header-anchor" href="#chunkbuildorderpolicybase"><span><code>ChunkBuildOrderPolicyBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChunkBuildOrderPolicyBase</span>
<span class="line">{</span>
<span class="line">  ChunkBuildOrderPolicyBase_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkbuildorderpolicybase-vtbl" tabindex="-1"><a class="header-anchor" href="#chunkbuildorderpolicybase-vtbl"><span><code>ChunkBuildOrderPolicyBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChunkBuildOrderPolicyBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ChunkBuildOrderPolicyBase)(ChunkBuildOrderPolicyBase *this);</span>
<span class="line">  int (__fastcall *getChunkRebuildPriority)(ChunkBuildOrderPolicyBase *this, const ChunkPos *);</span>
<span class="line">  unsigned int (__fastcall *registerForUpdates)(ChunkBuildOrderPolicyBase *this);</span>
<span class="line">  void (__fastcall *unregisterForUpdates)(ChunkBuildOrderPolicyBase *this, unsigned int);</span>
<span class="line">  void (__fastcall *setBuildOrderInfluence)(ChunkBuildOrderPolicyBase *this, unsigned int, const ChunkPos *, const Vec3 *);</span>
<span class="line">  void (__fastcall *updateInfluences)(ChunkBuildOrderPolicyBase *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="circuitscenegraph" tabindex="-1"><a class="header-anchor" href="#circuitscenegraph"><span><code>CircuitSceneGraph</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CircuitSceneGraph</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;BlockPos,std::unique_ptr&lt;BaseCircuitComponent&gt;&gt; mAllComponents;</span>
<span class="line">  CircuitComponentList mActiveComponents;</span>
<span class="line">  std::unordered_map&lt;BlockPos,CircuitComponentList&gt; mActiveComponentsPerChunk;</span>
<span class="line">  std::unordered_map&lt;BlockPos,CircuitComponentList&gt; mPowerAssociationMap;</span>
<span class="line">  std::unordered_map&lt;BlockPos,CircuitSceneGraph::PendingEntry&gt; mPendingAdds;</span>
<span class="line">  std::unordered_map&lt;BlockPos,CircuitSceneGraph::PendingEntry&gt; mPendingUpdates;</span>
<span class="line">  std::unordered_map&lt;BlockPos,std::vector&lt;BlockPos&gt;&gt; mComponentsToReEvaluate;</span>
<span class="line">  std::vector&lt;CircuitSceneGraph::PendingEntry&gt; mPendingRemoves;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="circuitsystem" tabindex="-1"><a class="header-anchor" href="#circuitsystem"><span><code>CircuitSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CircuitSystem</span>
<span class="line">{</span>
<span class="line">  bool mLockGraph;</span>
<span class="line">  CircuitSceneGraph mSceneGraph;</span>
<span class="line">  std::vector&lt;CircuitSystem::LevelChunkTracking&gt; mAddedLevelChunk;</span>
<span class="line">  bool mHasBeenEvaluated;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="circuitsystem-levelchunktracking" tabindex="-1"><a class="header-anchor" href="#circuitsystem-levelchunktracking"><span><code>CircuitSystem::LevelChunkTracking</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CircuitSystem::LevelChunkTracking</span>
<span class="line">{</span>
<span class="line">  BlockPos mChunkPos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunkloadactionlist" tabindex="-1"><a class="header-anchor" href="#chunkloadactionlist"><span><code>ChunkLoadActionList</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ChunkLoadActionList</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;ChunkLoadedRequest&gt; mChunkLoadedRequests;</span>
<span class="line">  std::vector&lt;ChunkLoadedRequest&gt; mChunkLoadedRequestsWaitForTicking;</span>
<span class="line">  unsigned int mRequestSaveCounter;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandorigin-vtbl" tabindex="-1"><a class="header-anchor" href="#commandorigin-vtbl"><span><code>CommandOrigin_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CommandOrigin_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CommandOrigin)(CommandOrigin *this);</span>
<span class="line">  const std::string *(__fastcall *getRequestId)(CommandOrigin *this);</span>
<span class="line">  std::string *(__fastcall *getName)(CommandOrigin *this, std::string *result);</span>
<span class="line">  BlockPos *(__fastcall *getBlockPosition)(CommandOrigin *this, BlockPos *result);</span>
<span class="line">  Vec3 *(__fastcall *getWorldPosition)(CommandOrigin *this, Vec3 *result);</span>
<span class="line">  Level *(__fastcall *getLevel)(CommandOrigin *this);</span>
<span class="line">  Dimension *(__fastcall *getDimension)(CommandOrigin *this);</span>
<span class="line">  Actor *(__fastcall *getEntity)(CommandOrigin *this);</span>
<span class="line">  CommandPermissionLevel (__fastcall *getPermissionsLevel)(CommandOrigin *this);</span>
<span class="line">  std::unique_ptr&lt;CommandOrigin&gt; *(__fastcall *clone)(CommandOrigin *this, std::unique_ptr&lt;CommandOrigin&gt; *result);</span>
<span class="line">  std::optional&lt;BlockPos&gt; *(__fastcall *getCursorHitBlockPos)(CommandOrigin *this, std::optional&lt;BlockPos&gt; *result);</span>
<span class="line">  std::optional&lt;Vec3&gt; *(__fastcall *getCursorHitPos)(CommandOrigin *this, std::optional&lt;Vec3&gt; *result);</span>
<span class="line">  bool (__fastcall *hasChatPerms)(CommandOrigin *this);</span>
<span class="line">  bool (__fastcall *hasTellPerms)(CommandOrigin *this);</span>
<span class="line">  bool (__fastcall *canUseAbility)(CommandOrigin *this, AbilitiesIndex);</span>
<span class="line">  bool (__fastcall *isWorldBuilder)(CommandOrigin *this);</span>
<span class="line">  bool (__fastcall *canUseCommandsWithoutCheatsEnabled)(CommandOrigin *this);</span>
<span class="line">  bool (__fastcall *isSelectorExpansionAllowed)(CommandOrigin *this);</span>
<span class="line">  const NetworkIdentifier *(__fastcall *getSourceId)(CommandOrigin *this);</span>
<span class="line">  unsigned __int8 (__fastcall *getSourceSubId)(CommandOrigin *this);</span>
<span class="line">  const CommandOrigin *(__fastcall *getOutputReceiver)(CommandOrigin *this);</span>
<span class="line">  CommandOriginType (__fastcall *getOriginType)(CommandOrigin *this);</span>
<span class="line">  CommandOriginData *(__fastcall *toCommandOriginData)(CommandOrigin *this, CommandOriginData *result);</span>
<span class="line">  const mce::UUID *(__fastcall *getUUID)(CommandOrigin *this);</span>
<span class="line">  void (__fastcall *handleCommandOutputCallback)(CommandOrigin *this, Json::Value *);</span>
<span class="line">  void (__fastcall *_setUUID)(CommandOrigin *this, const mce::UUID *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-enum" tabindex="-1"><a class="header-anchor" href="#commandregistry-enum"><span><code>CommandRegistry::Enum</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::Enum</span>
<span class="line">{</span>
<span class="line">  std::string name;</span>
<span class="line">  typeid_t&lt;CommandRegistry&gt; type;</span>
<span class="line">  bool (__fastcall *parse)(CommandRegistry *this, void *, const CommandRegistry::ParseToken *, const CommandOrigin *, int, std::string *, std::vector&lt;std::string&gt; *);</span>
<span class="line">  std::vector&lt;std::pair&lt;unsigned __int64,unsigned __int64&gt;&gt; values;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-factorization" tabindex="-1"><a class="header-anchor" href="#commandregistry-factorization"><span><code>CommandRegistry::Factorization</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::Factorization</span>
<span class="line">{</span>
<span class="line">  CommandRegistry::Symbol commandSymbol;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-overload" tabindex="-1"><a class="header-anchor" href="#commandregistry-overload"><span><code>CommandRegistry::Overload</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CommandRegistry::Overload</span>
<span class="line">{</span>
<span class="line">  CommandVersion version;</span>
<span class="line">  std::unique_ptr&lt;Command&gt; *(__fastcall *alloc)(std::unique_ptr&lt;Command&gt; *result);</span>
<span class="line">  std::vector&lt;CommandParameterData&gt; params;</span>
<span class="line">  int versionOffset;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-constrainedvalue" tabindex="-1"><a class="header-anchor" href="#commandregistry-constrainedvalue"><span><code>CommandRegistry::ConstrainedValue</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::ConstrainedValue</span>
<span class="line">{</span>
<span class="line">  CommandRegistry::Symbol mValue;</span>
<span class="line">  CommandRegistry::Symbol mEnum;</span>
<span class="line">  std::vector&lt;unsigned char&gt; mConstraints;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-softenum" tabindex="-1"><a class="header-anchor" href="#commandregistry-softenum"><span><code>CommandRegistry::SoftEnum</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::SoftEnum</span>
<span class="line">{</span>
<span class="line">  std::string mName;</span>
<span class="line">  std::vector&lt;std::string&gt; mValues;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-paramsymbols" tabindex="-1"><a class="header-anchor" href="#commandregistry-paramsymbols"><span><code>CommandRegistry::ParamSymbols</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::ParamSymbols</span>
<span class="line">{</span>
<span class="line">  CommandRegistry::Symbol x;</span>
<span class="line">  CommandRegistry::Symbol y;</span>
<span class="line">  CommandRegistry::Symbol z;</span>
<span class="line">  CommandRegistry::Symbol dx;</span>
<span class="line">  CommandRegistry::Symbol dy;</span>
<span class="line">  CommandRegistry::Symbol dz;</span>
<span class="line">  CommandRegistry::Symbol r;</span>
<span class="line">  CommandRegistry::Symbol rm;</span>
<span class="line">  CommandRegistry::Symbol rx;</span>
<span class="line">  CommandRegistry::Symbol rxm;</span>
<span class="line">  CommandRegistry::Symbol ry;</span>
<span class="line">  CommandRegistry::Symbol rym;</span>
<span class="line">  CommandRegistry::Symbol l;</span>
<span class="line">  CommandRegistry::Symbol lm;</span>
<span class="line">  CommandRegistry::Symbol c;</span>
<span class="line">  CommandRegistry::Symbol m;</span>
<span class="line">  CommandRegistry::Symbol name;</span>
<span class="line">  CommandRegistry::Symbol type;</span>
<span class="line">  CommandRegistry::Symbol family;</span>
<span class="line">  CommandRegistry::Symbol score;</span>
<span class="line">  CommandRegistry::Symbol tag;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chalkboardblockactor" tabindex="-1"><a class="header-anchor" href="#chalkboardblockactor"><span><code>ChalkboardBlockActor</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChalkboardBlockActor : BlockActor</span>
<span class="line">{</span>
<span class="line">  std::string mText;</span>
<span class="line">  std::string mTextObjectString;</span>
<span class="line">  TextObjectRoot mTextObjectMessage;</span>
<span class="line">  ChalkboardBlockActor::CachedMessageData mCachedMessage;</span>
<span class="line">  BlockPos mBasePos;</span>
<span class="line">  _BYTE mSize[1];</span>
<span class="line">  bool mIsOnGround;</span>
<span class="line">  bool mIsLocked;</span>
<span class="line">  ActorUniqueID mOwner;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cameracallbacks" tabindex="-1"><a class="header-anchor" href="#cameracallbacks"><span><code>CameraCallbacks</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CameraCallbacks</span>
<span class="line">{</span>
<span class="line">  CameraCallbacks_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cameracallbacks-vtbl" tabindex="-1"><a class="header-anchor" href="#cameracallbacks-vtbl"><span><code>CameraCallbacks_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraCallbacks_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *onTakePictureNow)(CameraCallbacks *this, Player *, Actor *, Actor *);</span>
<span class="line">  void (__fastcall *onStartTakingPicture)(CameraCallbacks *this, Player *);</span>
<span class="line">  void (__fastcall *onEndTakingPicture)(CameraCallbacks *this, Player *, Actor *, Actor *);</span>
<span class="line">  void (__fastcall *~CameraCallbacks)(CameraCallbacks *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="componentitem" tabindex="-1"><a class="header-anchor" href="#componentitem"><span><code>ComponentItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComponentItem : Item</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;std::unordered_map&lt;std::string,DefinitionEvent&gt;&gt; mEventHandlers;</span>
<span class="line">  __int8 mExcludeUserDataDiffCheck : 1;</span>
<span class="line">  __int8 mCanDestroyInCreative : 1;</span>
<span class="line">  __int8 mRequiresInteract : 1;</span>
<span class="line">  __int8 mIsLiquidClipped : 1;</span>
<span class="line">  int mLevel;</span>
<span class="line">  int mUses;</span>
<span class="line">  float mSpeed;</span>
<span class="line">  int mDamage;</span>
<span class="line">  _BYTE mEnchantSlot[4];</span>
<span class="line">  int mEnchantValue;</span>
<span class="line">  std::vector&lt;std::string&gt; mAlias;</span>
<span class="line">  Json::Value mOffsetList;</span>
<span class="line">  std::map&lt;HashedString,std::shared_ptr&lt;ItemComponent&gt;&gt; mItemComponents;</span>
<span class="line">  std::map&lt;std::string,std::shared_ptr&lt;ItemComponent&gt;&gt; mRegisteredCerealComponents;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cameraitemcomponentlegacy-vtbl" tabindex="-1"><a class="header-anchor" href="#cameraitemcomponentlegacy-vtbl"><span><code>CameraItemComponentLegacy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraItemComponentLegacy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraItemComponent)(ICameraItemComponent *this);</span>
<span class="line">  float (__fastcall *blackBarsDuration)(ICameraItemComponent *this);</span>
<span class="line">  float (__fastcall *blackBarsScreenRatio)(ICameraItemComponent *this);</span>
<span class="line">  float (__fastcall *shutterScreenRatio)(ICameraItemComponent *this);</span>
<span class="line">  float (__fastcall *shutterDuration)(ICameraItemComponent *this);</span>
<span class="line">  float (__fastcall *pictureDuration)(ICameraItemComponent *this);</span>
<span class="line">  float (__fastcall *slideAwayDuration)(ICameraItemComponent *this);</span>
<span class="line">  bool (__fastcall *canPlace)(ICameraItemComponent *this, const ItemStack *, Actor *, const BlockPos *, unsigned __int8);</span>
<span class="line">  void (__fastcall *takePictureNow)(ICameraItemComponent *this, Player *, Actor *, Actor *);</span>
<span class="line">  void (__fastcall *registerCallbacks)(ICameraItemComponent *this, CameraCallbacks *);</span>
<span class="line">  void (__fastcall *use)(ICameraItemComponent *this, ItemStack *, Player *);</span>
<span class="line">  void (__fastcall *releaseUsing)(ICameraItemComponent *this, ItemStack *, Player *, int);</span>
<span class="line">  bool (__fastcall *useOn)(ICameraItemComponent *this, ItemStack *, Actor *, const BlockPos *, unsigned __int8, const Vec3 *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="control" tabindex="-1"><a class="header-anchor" href="#control"><span><code>Control</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Control</span>
<span class="line">{</span>
<span class="line">  Control_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="control-vtbl" tabindex="-1"><a class="header-anchor" href="#control-vtbl"><span><code>Control_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Control_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Control)(Control *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containermanagermodel" tabindex="-1"><a class="header-anchor" href="#containermanagermodel"><span><code>ContainerManagerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerManagerModel : IContainerManager</span>
<span class="line">{</span>
<span class="line">  Player *mPlayer;</span>
<span class="line">  std::vector&lt;ItemStack&gt; mLastSlots;</span>
<span class="line">  ContainerID mContainerId;</span>
<span class="line">  ContainerType mContainerType;</span>
<span class="line">  std::function&lt;void __cdecl(ContainerManagerModel &amp;)&gt; mInformControllerOfDestructionCallback;</span>
<span class="line">  std::unordered_map&lt;std::string,std::shared_ptr&lt;ContainerModel&gt;&gt; mContainers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containermodel" tabindex="-1"><a class="header-anchor" href="#containermodel"><span><code>ContainerModel</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerModel : ContainerContentChangeListener</span>
<span class="line">{</span>
<span class="line">  const bool mIsClientSide;</span>
<span class="line">  std::string mContainerStringName;</span>
<span class="line">  const ContainerEnumName mContainerEnumName;</span>
<span class="line">  std::vector&lt;std::function&lt;void __cdecl(int,ItemStack const &amp;,ItemStack const &amp;)&gt;&gt; mOnContainerChangedCallbacks;</span>
<span class="line">  std::function&lt;void __cdecl(int,ItemStack const &amp;,ItemStack const &amp;)&gt; mPlayerNotificationCallbacks;</span>
<span class="line">  ContainerCategory mContainerCategory;</span>
<span class="line">  std::vector&lt;SlotData&gt; mItemSource;</span>
<span class="line">  SparseContainer *mClientUIContainer;</span>
<span class="line">  std::vector&lt;ItemStack&gt; mItems;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containerenumnamehasher" tabindex="-1"><a class="header-anchor" href="#containerenumnamehasher"><span><code>ContainerEnumNameHasher</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerEnumNameHasher</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containermodel-vtbl" tabindex="-1"><a class="header-anchor" href="#containermodel-vtbl"><span><code>ContainerModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);</span>
<span class="line">  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);</span>
<span class="line">  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *postInit)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *releaseResources)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *getContainerSize)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *getFilteredContainerSize)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *tick)(ContainerModel *this, int);</span>
<span class="line">  ContainerWeakRef *(__fastcall *getContainerWeakRef)(ContainerModel *this, ContainerWeakRef *result);</span>
<span class="line">  const ItemStack *(__fastcall *getItemStack)(ContainerModel *this, int);</span>
<span class="line">  const std::vector&lt;ItemStack&gt; *(__fastcall *getItems)(ContainerModel *this);</span>
<span class="line">  const ItemInstance *(__fastcall *getItemInstance)(ContainerModel *this, int);</span>
<span class="line">  const ItemStackBase *(__fastcall *getItemStackBase)(ContainerModel *this, int);</span>
<span class="line">  bool (__fastcall *isItemInstanceBased)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *setItem)(ContainerModel *this, int, const ItemStack *);</span>
<span class="line">  bool (__fastcall *isValid)(ContainerModel *this);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerModel *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isExpanableItemFiltered)(ContainerModel *this, int);</span>
<span class="line">  ContainerExpandStatus (__fastcall *getItemExpandStatus)(ContainerModel *this, int);</span>
<span class="line">  const std::string *(__fastcall *getItemGroupName)(ContainerModel *this, int);</span>
<span class="line">  void (__fastcall *switchItemExpando)(ContainerModel *this, int);</span>
<span class="line">  Container *(__fastcall *_getContainer)(ContainerModel *this);</span>
<span class="line">  int (__fastcall *_getContainerOffset)(ContainerModel *this);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerModel *this, int, const ItemStack *, const ItemStack *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containermanagermodel-vtbl" tabindex="-1"><a class="header-anchor" href="#containermanagermodel-vtbl"><span><code>ContainerManagerModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerManagerModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IContainerManager)(IContainerManager *this);</span>
<span class="line">  ContainerID (__fastcall *getContainerId)(IContainerManager *this);</span>
<span class="line">  void (__fastcall *setContainerId)(IContainerManager *this, ContainerID);</span>
<span class="line">  ContainerType (__fastcall *getContainerType)(IContainerManager *this);</span>
<span class="line">  void (__fastcall *setContainerType)(IContainerManager *this, ContainerType);</span>
<span class="line">  void (__fastcall *serverInitItemStackIds)(IContainerManager *this);</span>
<span class="line">  std::vector&lt;ItemStack&gt; *(__fastcall *getItemCopies)(IContainerManager *this, std::vector&lt;ItemStack&gt; *result);</span>
<span class="line">  void (__fastcall *setSlot)(IContainerManager *this, int, const ItemStack *, bool);</span>
<span class="line">  const ItemStack *(__fastcall *getSlot)(IContainerManager *this, int);</span>
<span class="line">  void (__fastcall *setData)(IContainerManager *this, int, int);</span>
<span class="line">  void (__fastcall *broadcastChanges)(IContainerManager *this);</span>
<span class="line">  bool (__fastcall *validateContainer)(IContainerManager *this);</span>
<span class="line">  bool (__fastcall *isValid)(ContainerManagerModel *this, float);</span>
<span class="line">  ContainerScreenContext *(__fastcall *_postInit)(ContainerManagerModel *this, ContainerScreenContext *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cache-unsigned-short-block-const-block-const" tabindex="-1"><a class="header-anchor" href="#core-cache-unsigned-short-block-const-block-const"><span><code>Core::Cache&lt;unsigned short,Block const *,Block const *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Cache&lt;unsigned short,Block const *,Block const *&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_mutex mAccess;</span>
<span class="line">  std::unordered_map&lt;unsigned short,Block const *&gt; mContent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contextaccessor-typebase" tabindex="-1"><a class="header-anchor" href="#contextaccessor-typebase"><span><code>ContextAccessor::TypeBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContextAccessor::TypeBase</span>
<span class="line">{</span>
<span class="line">  ContextAccessor::TypeBase_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contextaccessor-typebase-vtbl" tabindex="-1"><a class="header-anchor" href="#contextaccessor-typebase-vtbl"><span><code>ContextAccessor::TypeBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContextAccessor::TypeBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~TypeBase)(ContextAccessor::TypeBase *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customentitytypedescription" tabindex="-1"><a class="header-anchor" href="#customentitytypedescription"><span><code>CustomEntityTypeDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CustomEntityTypeDescription : ComponentDescription</span>
<span class="line">{</span>
<span class="line">  std::string mCustomEntityType;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customentitytypedescription-vtbl" tabindex="-1"><a class="header-anchor" href="#customentitytypedescription-vtbl"><span><code>CustomEntityTypeDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CustomEntityTypeDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  const char *(__fastcall *getJsonName)(Description *this);</span>
<span class="line">  void (__fastcall *~Description)(Description *this);</span>
<span class="line">  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);</span>
<span class="line">  void (__fastcall *serializeData)(Description *this, Json::Value *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandblockdescription" tabindex="-1"><a class="header-anchor" href="#commandblockdescription"><span><code>CommandBlockDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CommandBlockDescription : ComponentDescription</span>
<span class="line">{</span>
<span class="line">  int mCurrentTickCount;</span>
<span class="line">  int mTicksPerCommand;</span>
<span class="line">  bool mTicking;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandblockdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#commandblockdescription-vtbl"><span><code>CommandBlockDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CommandBlockDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  const char *(__fastcall *getJsonName)(Description *this);</span>
<span class="line">  void (__fastcall *~Description)(Description *this);</span>
<span class="line">  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);</span>
<span class="line">  void (__fastcall *serializeData)(Description *this, Json::Value *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containerdescription-vtbl" tabindex="-1"><a class="header-anchor" href="#containerdescription-vtbl"><span><code>ContainerDescription_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerDescription_vtbl</span>
<span class="line">{</span>
<span class="line">  const char *(__fastcall *getJsonName)(Description *this);</span>
<span class="line">  void (__fastcall *~Description)(Description *this);</span>
<span class="line">  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);</span>
<span class="line">  void (__fastcall *serializeData)(Description *this, Json::Value *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changedimensionrequest" tabindex="-1"><a class="header-anchor" href="#changedimensionrequest"><span><code>ChangeDimensionRequest</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChangeDimensionRequest</span>
<span class="line">{</span>
<span class="line">  ChangeDimensionRequest::State mState;</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; mFromDimensionId;</span>
<span class="line">  AutomaticID&lt;Dimension,int&gt; mToDimensionId;</span>
<span class="line">  Vec3 mPosition;</span>
<span class="line">  bool mUsePortal;</span>
<span class="line">  bool mRespawn;</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; mAgentTag;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayereventcoordinator" tabindex="-1"><a class="header-anchor" href="#clientplayereventcoordinator"><span><code>ClientPlayerEventCoordinator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientPlayerEventCoordinator : PlayerEventCoordinator</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientleveleventcoordinator" tabindex="-1"><a class="header-anchor" href="#clientleveleventcoordinator"><span><code>ClientLevelEventCoordinator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientLevelEventCoordinator : LevelEventCoordinator</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chunksourceviewmgr" tabindex="-1"><a class="header-anchor" href="#chunksourceviewmgr"><span><code>ChunkSourceViewMgr</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChunkSourceViewMgr : LevelListener</span>
<span class="line">{</span>
<span class="line">  std::unordered_map&lt;std::string,std::pair&lt;__int64,std::unique_ptr&lt;GridArea&lt;std::shared_ptr&lt;LevelChunk&gt; &gt;&gt; &gt;&gt; mViewPtrs;</span>
<span class="line">  std::unordered_map&lt;std::string,std::unique_ptr&lt;GridArea&lt;std::shared_ptr&lt;LevelChunk&gt; &gt;&gt;&gt; mPermanentViewPtrs;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-string" tabindex="-1"><a class="header-anchor" href="#core-string"><span><code>Core::String</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::String</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-stringspan" tabindex="-1"><a class="header-anchor" href="#core-stringspan"><span><code>Core::StringSpan</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::StringSpan</span>
<span class="line">{</span>
<span class="line">  gsl::basic_string_span&lt;char const ,-1&gt; mStringSpan;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-path-path-less" tabindex="-1"><a class="header-anchor" href="#core-path-path-less"><span><code>Core::Path::path_less</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Path::path_less</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-pathcontainerconversions-std-string" tabindex="-1"><a class="header-anchor" href="#core-pathcontainerconversions-std-string"><span><code>Core::PathContainerConversions&lt;std::string &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::PathContainerConversions&lt;std::string &gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-storageareastree-treechild" tabindex="-1"><a class="header-anchor" href="#core-storageareastree-treechild"><span><code>Core::StorageAreasTree::TreeChild</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::StorageAreasTree::TreeChild</span>
<span class="line">{</span>
<span class="line">  HashedString mKey;</span>
<span class="line">  std::unique_ptr&lt;Core::StorageAreasTree::TreeNode&gt; mNode;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-networkchangeobserver-std-mutex" tabindex="-1"><a class="header-anchor" href="#core-observer-networkchangeobserver-std-mutex"><span><code>Core::Observer&lt;NetworkChangeObserver,std::mutex&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Observer&lt;NetworkChangeObserver,std::mutex&gt;</span>
<span class="line">{</span>
<span class="line">  Core::Observer&lt;NetworkChangeObserver,std::mutex&gt;_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Core::Subject&lt;NetworkChangeObserver,std::mutex&gt; *mpSubject;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-observer-networkchangeobserver-std-mutex-vtbl" tabindex="-1"><a class="header-anchor" href="#core-observer-networkchangeobserver-std-mutex-vtbl"><span><code>Core::Observer&lt;NetworkChangeObserver,std::mutex&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::Observer&lt;NetworkChangeObserver,std::mutex&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Observer&lt;NetworkChangeObserver,std::mutex&gt;)(Core::Observer&lt;NetworkChangeObserver,std::mutex&gt; *this);</span>
<span class="line">  void (__fastcall *_onSubjectDestroyed)(Core::Observer&lt;NetworkChangeObserver,std::mutex&gt; *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-subject-networkchangeobserver-std-mutex" tabindex="-1"><a class="header-anchor" href="#core-subject-networkchangeobserver-std-mutex"><span><code>Core::Subject&lt;NetworkChangeObserver,std::mutex&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Subject&lt;NetworkChangeObserver,std::mutex&gt;</span>
<span class="line">{</span>
<span class="line">  std::mutex mLock;</span>
<span class="line">  std::vector&lt;gsl::not_null&lt;NetworkChangeObserver *&gt;&gt; mObservers;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-inputfilestream-vtbl" tabindex="-1"><a class="header-anchor" href="#core-inputfilestream-vtbl"><span><code>Core::InputFileStream_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::InputFileStream_vtbl</span>
<span class="line">{</span>
<span class="line">  void *(__fastcall *__vecDelDtor)(Core::InputFileStream *this, unsigned int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-igraphicsdeviceplatformprovider" tabindex="-1"><a class="header-anchor" href="#cg-igraphicsdeviceplatformprovider"><span><code>cg::IGraphicsDevicePlatformProvider</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::IGraphicsDevicePlatformProvider : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  cg::IGraphicsDevicePlatformProvider_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-igraphicsdeviceplatformprovider-vtbl" tabindex="-1"><a class="header-anchor" href="#cg-igraphicsdeviceplatformprovider-vtbl"><span><code>cg::IGraphicsDevicePlatformProvider_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ cg::IGraphicsDevicePlatformProvider_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IGraphicsDevicePlatformProvider)(cg::IGraphicsDevicePlatformProvider *this);</span>
<span class="line">  std::string *(__fastcall *getDriverVersion)(cg::IGraphicsDevicePlatformProvider *this, std::string *result);</span>
<span class="line">  Json::Value *(__fastcall *getDeviceInfoJson)(cg::IGraphicsDevicePlatformProvider *this, Json::Value *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-loadtimedata" tabindex="-1"><a class="header-anchor" href="#core-loadtimedata"><span><code>Core::LoadTimeData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::LoadTimeData</span>
<span class="line">{</span>
<span class="line">  const std::string mName;</span>
<span class="line">  int mScope;</span>
<span class="line">  long double mTotalTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-scopedloadtimesection" tabindex="-1"><a class="header-anchor" href="#core-scopedloadtimesection"><span><code>Core::ScopedLoadTimeSection</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::ScopedLoadTimeSection</span>
<span class="line">{</span>
<span class="line">  long double mStartTime;</span>
<span class="line">  Core::LoadTimeData mProfileData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-loadtimeprofiler" tabindex="-1"><a class="header-anchor" href="#core-loadtimeprofiler"><span><code>Core::LoadTimeProfiler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Core::LoadTimeProfiler : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;Core::ScopedLoadTimeSection *&gt; mSections;</span>
<span class="line">  unsigned int mCurrentFrame;</span>
<span class="line">  std::vector&lt;Core::LoadTimeData&gt; mFinishedSections;</span>
<span class="line">  Core::OutputFileStream mLogFile;</span>
<span class="line">  bool mEnabled;</span>
<span class="line">  bool mCloseLogOnUpdate;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientnetworkhandler" tabindex="-1"><a class="header-anchor" href="#clientnetworkhandler"><span><code>ClientNetworkHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientNetworkHandler : NetEventCallback</span>
<span class="line">{</span>
<span class="line">  std::chrono::time_point&lt;std::chrono::steady_clock,std::chrono::duration&lt;__int64,std::ratio&lt;1,1000000000&gt; &gt; &gt; mLastBossRemoved;</span>
<span class="line">  std::shared_ptr&lt;ClientBlobCache::Cache&gt; mBlobCache;</span>
<span class="line">  IClientInstance *mClient;</span>
<span class="line">  NetworkHandler *mNetworkHandler;</span>
<span class="line">  PacketSender *mPacketSender;</span>
<span class="line">  PrivateKeyManager *mClientKeys;</span>
<span class="line">  MinecraftCommands *mMinecraftCommands;</span>
<span class="line">  Level *mLevel;</span>
<span class="line">  bool mHasMessage;</span>
<span class="line">  bool mIsLoggedIn;</span>
<span class="line">  std::shared_ptr&lt;bool&gt; mExistenceTracker;</span>
<span class="line">  std::unordered_map&lt;std::pair&lt;Dimension const *,ChunkPos&gt;,unsigned __int64,mce::Math::PairHash,std::equal_to&lt;std::pair&lt;Dimension const *,ChunkPos&gt; &gt;,std::allocator&lt;std::pair&lt;std::pair&lt;Dimension const *,ChunkPos&gt; const ,unsigned __int64&gt; &gt; &gt; mPendingChunks;</span>
<span class="line">  std::unordered_map&lt;std::tuple&lt;NetworkIdentifier,Dimension const *,ChunkPos&gt;,std::function&lt;void __cdecl(BlockSource &amp;)&gt;,mce::Math::Tuple3Hash,std::equal_to&lt;std::tuple&lt;NetworkIdentifier,Dimension const *,ChunkPos&gt; &gt;,std::allocator&lt;std::pair&lt;std::tuple&lt;NetworkIdentifier,Dimension const *,ChunkPos&gt; const ,std::function&lt;void __cdecl(BlockSource &amp;)&gt; &gt; &gt; &gt; mConnectionPausedCallbacks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-lambda-f6e4b0d87d4d949bdaea4c283d4c6cc0" tabindex="-1"><a class="header-anchor" href="#clientinstance-lambda-f6e4b0d87d4d949bdaea4c283d4c6cc0"><span><code>ClientInstance::&lt;lambda_f6e4b0d87d4d949bdaea4c283d4c6cc0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::&lt;lambda_f6e4b0d87d4d949bdaea4c283d4c6cc0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-lambda-57e1ebedf9bd0f5ca98bc6185e1f58e3" tabindex="-1"><a class="header-anchor" href="#clientinstance-lambda-57e1ebedf9bd0f5ca98bc6185e1f58e3"><span><code>ClientInstance::&lt;lambda_57e1ebedf9bd0f5ca98bc6185e1f58e3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::&lt;lambda_57e1ebedf9bd0f5ca98bc6185e1f58e3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandselectorresults-actor" tabindex="-1"><a class="header-anchor" href="#commandselectorresults-actor"><span><code>CommandSelectorResults&lt;Actor&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandSelectorResults&lt;Actor&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;std::vector&lt;Actor *&gt; &gt; mTargets;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandposition" tabindex="-1"><a class="header-anchor" href="#commandposition"><span><code>CommandPosition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandPosition</span>
<span class="line">{</span>
<span class="line">  Vec3 mOffset;</span>
<span class="line">  bool mRelativeX;</span>
<span class="line">  bool mRelativeY;</span>
<span class="line">  bool mRelativeZ;</span>
<span class="line">  bool mLocal;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandselectorbase" tabindex="-1"><a class="header-anchor" href="#commandselectorbase"><span><code>CommandSelectorBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) CommandSelectorBase</span>
<span class="line">{</span>
<span class="line">  int mVersion;</span>
<span class="line">  CommandSelectionType mType;</span>
<span class="line">  _BYTE mOrder[4];</span>
<span class="line">  std::vector&lt;InvertableFilter&lt;std::string &gt;&gt; mNameFilters;</span>
<span class="line">  std::vector&lt;InvertableFilter&lt;ActorDefinitionIdentifier&gt;&gt; mTypeFilters;</span>
<span class="line">  std::vector&lt;InvertableFilter&lt;std::string &gt;&gt; mFamilyFilters;</span>
<span class="line">  std::vector&lt;InvertableFilter&lt;std::string &gt;&gt; mTagFilters;</span>
<span class="line">  std::vector&lt;std::function&lt;bool __cdecl(CommandOrigin const &amp;,Actor const &amp;)&gt;&gt; mFilterChain;</span>
<span class="line">  CommandPosition mPosition;</span>
<span class="line">  BlockPos mBoxDeltas;</span>
<span class="line">  float mRadiusMin;</span>
<span class="line">  float mRadiusMax;</span>
<span class="line">  unsigned __int64 mCount;</span>
<span class="line">  bool mIncludeDeadPlayers;</span>
<span class="line">  bool mIsPositionBound;</span>
<span class="line">  bool mDistanceFiltered;</span>
<span class="line">  bool mHaveDeltas;</span>
<span class="line">  bool mForcePlayer;</span>
<span class="line">  bool mIsExplicitIdSelector;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="customtabstorage" tabindex="-1"><a class="header-anchor" href="#customtabstorage"><span><code>CustomTabStorage</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CustomTabStorage</span>
<span class="line">{</span>
<span class="line">  int index;</span>
<span class="line">  std::string name;</span>
<span class="line">  std::string path;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-comfortmovebehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-comfortmovebehavior"><span><code>CameraBehavior&lt;ComfortMoveBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;ComfortMoveBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-comfortmovebehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-comfortmovebehavior-vtbl"><span><code>CameraBehavior&lt;ComfortMoveBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;ComfortMoveBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="comfortmovebehavior" tabindex="-1"><a class="header-anchor" href="#comfortmovebehavior"><span><code>ComfortMoveBehavior</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ComfortMoveBehavior : CameraBehavior&lt;ComfortMoveBehavior&gt;</span>
<span class="line">{</span>
<span class="line">  float mLinearYRemap;</span>
<span class="line">  float mMaxLinearYRemap;</span>
<span class="line">  float mStartYPos;</span>
<span class="line">  float mAccumulatedDT;</span>
<span class="line">  bool mYMotionUp;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="comfortmovebehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#comfortmovebehavior-vtbl"><span><code>ComfortMoveBehavior_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ComfortMoveBehavior_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-shakebehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-shakebehavior"><span><code>CameraBehavior&lt;ShakeBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;ShakeBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-shakebehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-shakebehavior-vtbl"><span><code>CameraBehavior&lt;ShakeBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;ShakeBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="comfortmovebehaviorloader" tabindex="-1"><a class="header-anchor" href="#comfortmovebehaviorloader"><span><code>ComfortMoveBehaviorLoader</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ComfortMoveBehaviorLoader : CameraBehaviorLoader</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="comfortmovebehaviorloader-vtbl" tabindex="-1"><a class="header-anchor" href="#comfortmovebehaviorloader-vtbl"><span><code>ComfortMoveBehaviorLoader_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ComfortMoveBehaviorLoader_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CameraBehaviorLoader)(CameraBehaviorLoader *this);</span>
<span class="line">  std::unique_ptr&lt;ICameraBehavior&gt; *(__fastcall *create)(CameraBehaviorLoader *this, std::unique_ptr&lt;ICameraBehavior&gt; *result);</span>
<span class="line">  void (__fastcall *parse)(CameraBehaviorLoader *this, Json::Value *, ICameraBehavior *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clubs-feeditem" tabindex="-1"><a class="header-anchor" href="#clubs-feeditem"><span><code>Clubs::FeedItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Clubs::FeedItem</span>
<span class="line">{</span>
<span class="line">  _BYTE mFeedItemType[4];</span>
<span class="line">  std::string mFeedItemRoot;</span>
<span class="line">  std::string mFeedItemId;</span>
<span class="line">  std::string mContent;</span>
<span class="line">  std::string mAuthorXuid;</span>
<span class="line">  std::string mDatePosted;</span>
<span class="line">  std::string mCaption;</span>
<span class="line">  int mNumComments;</span>
<span class="line">  int mNumLikes;</span>
<span class="line">  bool mHasLiked;</span>
<span class="line">  bool mHasScreenshotLoaded;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clubs-activityfeed" tabindex="-1"><a class="header-anchor" href="#clubs-activityfeed"><span><code>Clubs::ActivityFeed</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Clubs::ActivityFeed</span>
<span class="line">{</span>
<span class="line">  Clubs::ActivityFeed::Type mType;</span>
<span class="line">  std::vector&lt;Clubs::FeedItem&gt; mFeedItems;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clubs-reporteditem" tabindex="-1"><a class="header-anchor" href="#clubs-reporteditem"><span><code>Clubs::ReportedItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Clubs::ReportedItem</span>
<span class="line">{</span>
<span class="line">  Clubs::ReportedItem::Type mType;</span>
<span class="line">  std::string mPathToItem;</span>
<span class="line">  std::string mLastReported;</span>
<span class="line">  int mReportCount;</span>
<span class="line">  std::string mReportId;</span>
<span class="line">  std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; mReports;</span>
<span class="line">  Clubs::FeedItem mFeedItem;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clubs-newfeeditem" tabindex="-1"><a class="header-anchor" href="#clubs-newfeeditem"><span><code>Clubs::NewFeedItem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Clubs::NewFeedItem</span>
<span class="line">{</span>
<span class="line">  Clubs::NewFeedItem::Type mType;</span>
<span class="line">  std::string mContent;</span>
<span class="line">  std::string mScreenshotCaption;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks"><span><code>ClientInputCallbacks</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcontentkeyprovider" tabindex="-1"><a class="header-anchor" href="#clientcontentkeyprovider"><span><code>ClientContentKeyProvider</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientContentKeyProvider : IContentAccessibilityProvider</span>
<span class="line">{</span>
<span class="line">  IEntitlementManager *mEntitlementManager;</span>
<span class="line">  std::unordered_map&lt;ContentIdentity,std::string&gt; mTempContentKeys;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcontentkeyprovider-vtbl" tabindex="-1"><a class="header-anchor" href="#clientcontentkeyprovider-vtbl"><span><code>ClientContentKeyProvider_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientContentKeyProvider_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IContentKeyProvider)(IContentKeyProvider *this);</span>
<span class="line">  std::string *(__fastcall *getContentKey)(IContentKeyProvider *this, std::string *result, const ContentIdentity *);</span>
<span class="line">  std::string *(__fastcall *getAlternateContentKey)(IContentKeyProvider *this, std::string *result, const ContentIdentity *);</span>
<span class="line">  bool (__fastcall *requireEncryptedReads)(IContentKeyProvider *this);</span>
<span class="line">  void (__fastcall *setTempContentKeys)(IContentKeyProvider *this, const std::unordered_map&lt;ContentIdentity,std::string&gt; *);</span>
<span class="line">  void (__fastcall *clearTempContentKeys)(IContentKeyProvider *this);</span>
<span class="line">  bool (__fastcall *canAccess)(IContentAccessibilityProvider *this, const ContentIdentity *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="createreviewparams" tabindex="-1"><a class="header-anchor" href="#createreviewparams"><span><code>CreateReviewParams</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CreateReviewParams</span>
<span class="line">{</span>
<span class="line">  std::string mProductId;</span>
<span class="line">  std::string mTitle;</span>
<span class="line">  std::string mReviewText;</span>
<span class="line">  int mRating;</span>
<span class="line">  bool mIsInstalled;</span>
<span class="line">  std::string mItemVersion;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-callbacklisteners-int-enum-social-signinresult" tabindex="-1"><a class="header-anchor" href="#core-callbacklisteners-int-enum-social-signinresult"><span><code>Core::CallbackListeners&lt;int,enum Social::SignInResult&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::CallbackListeners&lt;int,enum Social::SignInResult&gt;</span>
<span class="line">{</span>
<span class="line">  std::mutex mLock;</span>
<span class="line">  std::vector&lt;Core::CallbackListeners&lt;int,enum Social::SignInResult&gt;::Listener,std::allocator&lt;Core::CallbackListeners&lt;int,enum Social::SignInResult&gt;::Listener&gt; &gt; mListeners;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-38" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-38"><span><code>CompileTime::Hash&lt;38&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;38&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-37" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-37"><span><code>CompileTime::Hash&lt;37&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;37&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-36" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-36"><span><code>CompileTime::Hash&lt;36&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;36&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-35" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-35"><span><code>CompileTime::Hash&lt;35&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;35&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-34" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-34"><span><code>CompileTime::Hash&lt;34&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;34&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-33" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-33"><span><code>CompileTime::Hash&lt;33&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;33&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-32" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-32"><span><code>CompileTime::Hash&lt;32&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;32&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-31" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-31"><span><code>CompileTime::Hash&lt;31&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;31&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-30" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-30"><span><code>CompileTime::Hash&lt;30&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;30&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-29" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-29"><span><code>CompileTime::Hash&lt;29&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;29&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-28" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-28"><span><code>CompileTime::Hash&lt;28&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;28&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-27" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-27"><span><code>CompileTime::Hash&lt;27&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;27&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-26" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-26"><span><code>CompileTime::Hash&lt;26&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;26&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-25" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-25"><span><code>CompileTime::Hash&lt;25&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;25&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-24" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-24"><span><code>CompileTime::Hash&lt;24&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;24&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-23" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-23"><span><code>CompileTime::Hash&lt;23&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;23&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-22" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-22"><span><code>CompileTime::Hash&lt;22&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;22&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-21" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-21"><span><code>CompileTime::Hash&lt;21&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;21&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-20" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-20"><span><code>CompileTime::Hash&lt;20&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;20&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-19" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-19"><span><code>CompileTime::Hash&lt;19&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;19&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-18" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-18"><span><code>CompileTime::Hash&lt;18&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;18&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-17" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-17"><span><code>CompileTime::Hash&lt;17&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;17&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-16" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-16"><span><code>CompileTime::Hash&lt;16&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;16&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-15" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-15"><span><code>CompileTime::Hash&lt;15&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;15&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-14" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-14"><span><code>CompileTime::Hash&lt;14&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;14&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-13" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-13"><span><code>CompileTime::Hash&lt;13&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;13&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-12" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-12"><span><code>CompileTime::Hash&lt;12&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;12&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-11" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-11"><span><code>CompileTime::Hash&lt;11&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;11&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-10" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-10"><span><code>CompileTime::Hash&lt;10&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;10&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-9" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-9"><span><code>CompileTime::Hash&lt;9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;9&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-8" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-8"><span><code>CompileTime::Hash&lt;8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-7" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-7"><span><code>CompileTime::Hash&lt;7&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;7&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-6" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-6"><span><code>CompileTime::Hash&lt;6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;6&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-5" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-5"><span><code>CompileTime::Hash&lt;5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;5&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-4" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-4"><span><code>CompileTime::Hash&lt;4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-3" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-3"><span><code>CompileTime::Hash&lt;3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-2" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-2"><span><code>CompileTime::Hash&lt;2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-1" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-1"><span><code>CompileTime::Hash&lt;1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;1&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstancescreenmodel-vtbl" tabindex="-1"><a class="header-anchor" href="#clientinstancescreenmodel-vtbl"><span><code>ClientInstanceScreenModel_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientInstanceScreenModel_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IDlcBatcher)(IDlcBatcher *this);</span>
<span class="line">  IDlcBatchModel *(__fastcall *getDlcBatchModel)(IDlcBatcher *this, const std::vector&lt;PackIdVersion&gt; *);</span>
<span class="line">  IDlcBatchModel *(__fastcall *getDlcBatchModel)(IDlcBatcher *this, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  IDlcBatchModel *(__fastcall *getDlcBatchModel)(IDlcBatcher *this, const std::vector&lt;DlcId&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstancescreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#clientinstancescreencontroller-vtbl"><span><code>ClientInstanceScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientInstanceScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containersplitcontrol" tabindex="-1"><a class="header-anchor" href="#containersplitcontrol"><span><code>ContainerSplitControl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ContainerSplitControl</span>
<span class="line">{</span>
<span class="line">  SlotData slot;</span>
<span class="line">  int addedCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containermanagercontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#containermanagercontroller-vtbl"><span><code>ContainerManagerController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerManagerController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContainerManagerController)(ContainerManagerController *this);</span>
<span class="line">  void (__fastcall *registerContainerCallbacks)(ContainerManagerController *this);</span>
<span class="line">  const ItemStackBase *(__fastcall *getTakeableItemStackBase)(ContainerManagerController *this, const SlotData *);</span>
<span class="line">  void (__fastcall *handleTakeAmount)(ContainerManagerController *this, const SlotData *, int, const SlotData *);</span>
<span class="line">  void (__fastcall *handleTakeAll)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  void (__fastcall *handlePlaceAll)(ContainerManagerController *this, const SelectedSlotInfo *, const SlotData *);</span>
<span class="line">  void (__fastcall *handleTakeHalf)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  void (__fastcall *handlePlaceOne)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  void (__fastcall *handlePlaceAmount)(ContainerManagerController *this, const SlotData *, int, const SlotData *);</span>
<span class="line">  int (__fastcall *handleAutoPlace)(ContainerManagerController *this, const SlotData *, int, const std::vector&lt;AutoPlaceItem&gt; *, std::vector&lt;AutoPlaceResult&gt; *);</span>
<span class="line">  int (__fastcall *handleAutoPlaceStack)(ContainerManagerController *this, const SlotData *, ItemTakeType, const std::vector&lt;AutoPlaceItem&gt; *, std::vector&lt;AutoPlaceResult&gt; *);</span>
<span class="line">  void (__fastcall *handleSplitSingle)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  void (__fastcall *handleSplitMultiple)(ContainerManagerController *this, const SelectedSlotInfo *, const ItemInstance *, const SlotData *);</span>
<span class="line">  void (__fastcall *handleCoalesce)(ContainerManagerController *this, const SlotData *, const std::vector&lt;std::string&gt; *);</span>
<span class="line">  bool (__fastcall *handleSwap)(ContainerManagerController *this, const SlotData *, const SlotData *);</span>
<span class="line">  bool (__fastcall *handleDrop)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);</span>
<span class="line">  bool (__fastcall *handleDestroy)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);</span>
<span class="line">  bool (__fastcall *handleDestroy)(ContainerManagerController *this, const SelectedSlotInfo *, const ItemTransferAmount);</span>
<span class="line">  bool (__fastcall *handleConsume)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);</span>
<span class="line">  void (__fastcall *handleAddToStack)(ContainerManagerController *this, const SlotData *, const SlotData *, ItemTakeType);</span>
<span class="line">  void (__fastcall *closeContainers)(ContainerManagerController *this);</span>
<span class="line">  const std::vector&lt;ContainerSplitControl&gt; *(__fastcall *getSplitItems)(ContainerManagerController *this);</span>
<span class="line">  bool (__fastcall *isOutputSlot)(ContainerManagerController *this, const std::string *);</span>
<span class="line">  void (__fastcall *_onItemTransferredFrom)(ContainerManagerController *this, const ItemInstance *, const SlotData *);</span>
<span class="line">  void (__fastcall *_onItemTransferredTo)(ContainerManagerController *this, const ItemInstance *, const SlotData *);</span>
<span class="line">  void (__fastcall *_onItemAcquired)(ContainerManagerController *this, const ItemInstance *, const SlotData *);</span>
<span class="line">  void (__fastcall *_onItemPlaced)(ContainerManagerController *this, const ItemInstance *, const SlotData *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containercontroller" tabindex="-1"><a class="header-anchor" href="#containercontroller"><span><code>ContainerController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ContainerController</span>
<span class="line">{</span>
<span class="line">  ContainerController_vtbl *__vftable /*VFT*/;</span>
<span class="line">  std::weak_ptr&lt;ContainerModel&gt; mContainerModel;</span>
<span class="line">  bool mDrop;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containercontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#containercontroller-vtbl"><span><code>ContainerController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ContainerController)(ContainerController *this);</span>
<span class="line">  bool (__fastcall *canRemove)(ContainerController *this, int, int);</span>
<span class="line">  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);</span>
<span class="line">  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);</span>
<span class="line">  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);</span>
<span class="line">  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);</span>
<span class="line">  bool (__fastcall *_canRemove)(ContainerController *this, int, int);</span>
<span class="line">  void (__fastcall *_onItemChanged)(ContainerController *this, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-50" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-50"><span><code>CompileTime::Hash&lt;50&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;50&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-39" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-39"><span><code>CompileTime::Hash&lt;39&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;39&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-49" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-49"><span><code>CompileTime::Hash&lt;49&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;49&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-48" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-48"><span><code>CompileTime::Hash&lt;48&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;48&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-47" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-47"><span><code>CompileTime::Hash&lt;47&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;47&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-46" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-46"><span><code>CompileTime::Hash&lt;46&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;46&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-45" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-45"><span><code>CompileTime::Hash&lt;45&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;45&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-44" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-44"><span><code>CompileTime::Hash&lt;44&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;44&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-43" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-43"><span><code>CompileTime::Hash&lt;43&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;43&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-42" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-42"><span><code>CompileTime::Hash&lt;42&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;42&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-41" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-41"><span><code>CompileTime::Hash&lt;41&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;41&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-40" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-40"><span><code>CompileTime::Hash&lt;40&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;40&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="correctplayerpredictioninput" tabindex="-1"><a class="header-anchor" href="#correctplayerpredictioninput"><span><code>CorrectPlayerPredictionInput</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CorrectPlayerPredictionInput : IReplayableActorInput</span>
<span class="line">{</span>
<span class="line">  CorrectPlayerMovePredictionPacket mPacket;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayerrewindlistener" tabindex="-1"><a class="header-anchor" href="#clientplayerrewindlistener"><span><code>ClientPlayerRewindListener</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientPlayerRewindListener : PlayerEventListener</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::unique_ptr&lt;IReplayableActorStateSource&gt;&gt; mActorStateSources;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayerrewindlistener-vtbl" tabindex="-1"><a class="header-anchor" href="#clientplayerrewindlistener-vtbl"><span><code>ClientPlayerRewindListener_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientPlayerRewindListener_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~PlayerEventListener)(PlayerEventListener *this);</span>
<span class="line">  EventResult (__fastcall *onPlayerAwardAchievement)(PlayerEventListener *this, Player *, MinecraftEventing::AchievementIds);</span>
<span class="line">  EventResult (__fastcall *onPlayerPortalBuilt)(PlayerEventListener *this, Player *, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  EventResult (__fastcall *onPlayerPortalUsed)(PlayerEventListener *this, Player *, AutomaticID&lt;Dimension,int&gt;, AutomaticID&lt;Dimension,int&gt;);</span>
<span class="line">  EventResult (__fastcall *onPlayerCaravanChanged)(PlayerEventListener *this, const Actor *, int);</span>
<span class="line">  EventResult (__fastcall *onPlayerSaved)(PlayerEventListener *this, Player *);</span>
<span class="line">  EventResult (__fastcall *onPlayerInput)(PlayerEventListener *this, IPlayerMovementProxy *, MoveInputHandler *);</span>
<span class="line">  EventResult (__fastcall *onPlayerAuthInputReceived)(PlayerEventListener *this, Player *, const PlayerAuthInputPacket *);</span>
<span class="line">  EventResult (__fastcall *onPlayerAuthInputApplied)(PlayerEventListener *this, Player *, const PlayerAuthInputPacket *);</span>
<span class="line">  EventResult (__fastcall *onPlayerTurn)(PlayerEventListener *this, Player *, Vec2 *);</span>
<span class="line">  EventResult (__fastcall *onCameraSetPlayerRot)(PlayerEventListener *this, Player *, const Camera *);</span>
<span class="line">  EventResult (__fastcall *onStartDestroyBlock)(PlayerEventListener *this, Player *, const BlockPos *, unsigned __int8 *);</span>
<span class="line">  EventResult (__fastcall *onPlayerAction)(PlayerEventListener *this, Player *, PlayerActionType, const BlockPos *, int);</span>
<span class="line">  EventResult (__fastcall *onPlayerHurt)(PlayerEventListener *this, const PlayerDamageEvent *);</span>
<span class="line">  EventResult (__fastcall *onLocalPlayerDeath)(PlayerEventListener *this, IClientInstance *, LocalPlayer *);</span>
<span class="line">  EventResult (__fastcall *onLocalPlayerRespawn)(PlayerEventListener *this, IClientInstance *, LocalPlayer *);</span>
<span class="line">  EventResult (__fastcall *onPlayerMove)(PlayerEventListener *this, Player *);</span>
<span class="line">  EventResult (__fastcall *onPlayerSlide)(PlayerEventListener *this, Player *);</span>
<span class="line">  EventResult (__fastcall *onPlayerTargetBlockHit)(PlayerEventListener *this, Player *, const int);</span>
<span class="line">  EventResult (__fastcall *onPlayerAIStepBegin)(PlayerEventListener *this, Player *);</span>
<span class="line">  EventResult (__fastcall *onPlayerTick)(PlayerEventListener *this, Player *);</span>
<span class="line">  EventResult (__fastcall *onPlayerStartRiding)(PlayerEventListener *this, Player *, Actor *);</span>
<span class="line">  EventResult (__fastcall *onPlayerStopRiding)(PlayerEventListener *this, Player *, bool, bool, bool);</span>
<span class="line">  EventResult (__fastcall *onPlayerCreated)(PlayerEventListener *this, LocalPlayer *, const std::string *, const std::string *, bool);</span>
<span class="line">  EventResult (__fastcall *onPlayerTeleported)(PlayerEventListener *this, Player *);</span>
<span class="line">  EventResult (__fastcall *onPlayerAttackedActor)(PlayerEventListener *this, Player *, Actor *);</span>
<span class="line">  EventResult (__fastcall *onPlayerMovementCorrected)(PlayerEventListener *this, Player *, const Vec3 *, const float, const float);</span>
<span class="line">  EventResult (__fastcall *onPlayerMovementAnomaly)(PlayerEventListener *this, Player *, const Vec3 *, const float, const float);</span>
<span class="line">  EventResult (__fastcall *onPlayerDestroyedBlock)(PlayerEventListener *this, Player *, const BlockLegacy *);</span>
<span class="line">  EventResult (__fastcall *onPlayerDestroyedBlock)(PlayerEventListener *this, Player *, int, int, int);</span>
<span class="line">  EventResult (__fastcall *onPlayerOnGround)(PlayerEventListener *this, Player *);</span>
<span class="line">  EventResult (__fastcall *onPlayerEquippedArmor)(PlayerEventListener *this, Player *, const ItemDescriptor *);</span>
<span class="line">  EventResult (__fastcall *onPlayerEnchantedItem)(PlayerEventListener *this, Player *, const ItemStack *, const ItemEnchants *);</span>
<span class="line">  EventResult (__fastcall *onPlayerNamedItem)(PlayerEventListener *this, Player *, const ItemDescriptor *);</span>
<span class="line">  EventResult (__fastcall *onPlayerItemUseInteraction)(PlayerEventListener *this, Player *, const ItemInstance *);</span>
<span class="line">  EventResult (__fastcall *onPlayerItemPlaceInteraction)(PlayerEventListener *this, Player *, const ItemInstance *);</span>
<span class="line">  EventResult (__fastcall *onPlayerStartUsingItem)(PlayerEventListener *this, const Player *, const ItemStack *);</span>
<span class="line">  EventResult (__fastcall *onPlayerStopUsingItem)(PlayerEventListener *this, const Player *, const ItemStack *);</span>
<span class="line">  EventResult (__fastcall *onPlayerCraftedItem)(PlayerEventListener *this, Player *, const ItemInstance *, bool, bool, bool, int, int, int, bool, bool, const std::vector&lt;short&gt; *);</span>
<span class="line">  EventResult (__fastcall *onPlayerItemEquipped)(PlayerEventListener *this, Player *, const ItemInstance *, int);</span>
<span class="line">  EventResult (__fastcall *onPlayerJumped)(PlayerEventListener *this, const Player *);</span>
<span class="line">  EventResult (__fastcall *onPlayerOpenContainer)(PlayerEventListener *this, Player *, ContainerType, const BlockPos *, ActorUniqueID);</span>
<span class="line">  EventResult (__fastcall *onPlayerPiglinBarter)(PlayerEventListener *this, Player *, const std::string *, bool);</span>
<span class="line">  EventResult (__fastcall *onPlayerAddExp)(PlayerEventListener *this, const PlayerAddExpEvent *);</span>
<span class="line">  EventResult (__fastcall *onPlayerAddLevel)(PlayerEventListener *this, const PlayerAddLevelEvent *);</span>
<span class="line">  EventResult (__fastcall *onPlayerArmorExchange)(PlayerEventListener *this, const PlayerArmorExchangeEvent *);</span>
<span class="line">  EventResult (__fastcall *onPlayerDestroyBlock)(PlayerEventListener *this, const PlayerDestroyBlockEvent *);</span>
<span class="line">  EventResult (__fastcall *onPlayerDie)(PlayerEventListener *this, const PlayerDamageEvent *);</span>
<span class="line">  EventResult (__fastcall *onPlayerGetExperienceOrb)(PlayerEventListener *this, const PlayerGetExperienceOrbEvent *);</span>
<span class="line">  EventResult (__fastcall *onPlayerSayCommand)(PlayerEventListener *this, const PlayerSayCommandEvent *);</span>
<span class="line">  EventResult (__fastcall *onPlayerShootArrow)(PlayerEventListener *this, const PlayerShootArrowEvent *);</span>
<span class="line">  EventResult (__fastcall *onPlayerStopLoading)(PlayerEventListener *this, const PlayerEvent *);</span>
<span class="line">  EventResult (__fastcall *onPlayerUseNameTag)(PlayerEventListener *this, const PlayerUseNameTagEvent *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-texturesetlayertypehash" tabindex="-1"><a class="header-anchor" href="#cg-texturesetlayertypehash"><span><code>cg::TextureSetLayerTypeHash</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TextureSetLayerTypeHash</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientplayermovementproxy" tabindex="-1"><a class="header-anchor" href="#clientplayermovementproxy"><span><code>ClientPlayerMovementProxy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientPlayerMovementProxy : DirectPlayerMovementProxy</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;IClientInstanceProxy&gt; mClient;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-faceschematicinstance" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-faceschematicinstance"><span><code>ClientBlockPipeline::FaceSchematicInstance</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceSchematicInstance</span>
<span class="line">{</span>
<span class="line">  bool mExists;</span>
<span class="line">  const ClientBlockPipeline::Material *mMaterial;</span>
<span class="line">  ClientBlockPipeline::UvTransform mUvTransform;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-nullptrerrorchecker" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-nullptrerrorchecker"><span><code>ClientBlockPipeline::NullPtrErrorChecker</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::NullPtrErrorChecker</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-blockopacitydata" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-blockopacitydata"><span><code>ClientBlockPipeline::BlockOpacityData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::BlockOpacityData</span>
<span class="line">{</span>
<span class="line">  bool mSolid;</span>
<span class="line">  bool mOpaque;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-instance-stepcache" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-instance-stepcache"><span><code>ClientBlockPipeline::Instance::StepCache</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::Instance::StepCache</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mDependenciesCount;</span>
<span class="line">  unsigned __int64 mDependentsCount;</span>
<span class="line">  ClientBlockPipeline::StepResult mResult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-instance" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-instance"><span><code>ClientBlockPipeline::Instance</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::Instance</span>
<span class="line">{</span>
<span class="line">  const ClientBlockPipeline::Description *mDescription;</span>
<span class="line">  std::vector&lt;ClientBlockPipeline::Instance::StepCache&gt; mStepCache;</span>
<span class="line">  std::queue&lt;unsigned __int64&gt; mStepsToProcess;</span>
<span class="line">  std::vector&lt;std::function&lt;void __cdecl(ClientBlockPipeline::Inputs const &amp;)&gt;&gt; mCallbackFunctions;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-volumeof-clientblockpipeline-blockcell" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeof-clientblockpipeline-blockcell"><span><code>ClientBlockPipeline::VolumeOf&lt;ClientBlockPipeline::BlockCell&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VolumeOf&lt;ClientBlockPipeline::BlockCell&gt;</span>
<span class="line">{</span>
<span class="line">  Pos mMin;</span>
<span class="line">  Pos mMax;</span>
<span class="line">  std::vector&lt;ClientBlockPipeline::BlockCell&gt; mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-ownedblockvolume" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-ownedblockvolume"><span><code>ClientBlockPipeline::OwnedBlockVolume</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::OwnedBlockVolume : ClientBlockPipeline::VolumeOf&lt;ClientBlockPipeline::BlockCell&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-volumeviewof-clientblockpipeline-blockcell" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeviewof-clientblockpipeline-blockcell"><span><code>ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockCell&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockCell&gt;</span>
<span class="line">{</span>
<span class="line">  Pos mMin;</span>
<span class="line">  Pos mMax;</span>
<span class="line">  buffer_span_mut&lt;ClientBlockPipeline::BlockCell&gt; mView;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-blocktessellatorpipeline-run-l2-lambda-95e3b116649ef0529b93b2b805ca35e0" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-blocktessellatorpipeline-run-l2-lambda-95e3b116649ef0529b93b2b805ca35e0"><span><code>ClientBlockPipeline::BlockTessellatorPipeline::_run::__l2::&lt;lambda_95e3b116649ef0529b93b2b805ca35e0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::BlockTessellatorPipeline::_run::__l2::&lt;lambda_95e3b116649ef0529b93b2b805ca35e0&gt;</span>
<span class="line">{</span>
<span class="line">  ClientBlockPipeline::BlockTessellatorPipeline *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-quadindices" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-quadindices"><span><code>ClientBlockPipeline::QuadIndices</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::QuadIndices</span>
<span class="line">{</span>
<span class="line">  std::array&lt;unsigned __int64,4&gt; mIndices;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-facedimmingstep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-facedimmingstep"><span><code>ClientBlockPipeline::FaceDimmingStep</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceDimmingStep : ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">  ClientBlockPipeline::DimensionDimmingScalars mDimmingScalars;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-facedimmingstep-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-facedimmingstep-vtbl"><span><code>ClientBlockPipeline::FaceDimmingStep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::FaceDimmingStep_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-faceattribute-vec3" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-faceattribute-vec3"><span><code>ClientBlockPipeline::FaceAttribute&lt;Vec3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceAttribute&lt;Vec3&gt; : std::vector&lt;Vec3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-facenormalattributes" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-facenormalattributes"><span><code>ClientBlockPipeline::FaceNormalAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceNormalAttributes : ClientBlockPipeline::FaceAttribute&lt;Vec3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-faceattribute-float" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-faceattribute-float"><span><code>ClientBlockPipeline::FaceAttribute&lt;float&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceAttribute&lt;float&gt; : std::vector&lt;float&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-facedimmingattributes" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-facedimmingattributes"><span><code>ClientBlockPipeline::FaceDimmingAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceDimmingAttributes : ClientBlockPipeline::FaceAttribute&lt;float&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-faceattribute-clientblockpipeline-material-const" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-faceattribute-clientblockpipeline-material-const"><span><code>ClientBlockPipeline::FaceAttribute&lt;ClientBlockPipeline::Material const *&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceAttribute&lt;ClientBlockPipeline::Material const *&gt; : std::vector&lt;ClientBlockPipeline::Material const *&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-materialfaceattributes" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-materialfaceattributes"><span><code>ClientBlockPipeline::MaterialFaceAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::MaterialFaceAttributes : ClientBlockPipeline::FaceAttribute&lt;ClientBlockPipeline::Material const *&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-facemergingstep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-facemergingstep"><span><code>ClientBlockPipeline::FaceMergingStep</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceMergingStep : ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-facemergingstep-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-facemergingstep-vtbl"><span><code>ClientBlockPipeline::FaceMergingStep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::FaceMergingStep_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-localcliparea" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-localcliparea"><span><code>ClientBlockPipeline::LocalClipArea</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::LocalClipArea : AABB</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-vertexattribute-vec3" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-vertexattribute-vec3"><span><code>ClientBlockPipeline::VertexAttribute&lt;Vec3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VertexAttribute&lt;Vec3&gt; : std::vector&lt;Vec3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-positionvertexattributes" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-positionvertexattributes"><span><code>ClientBlockPipeline::PositionVertexAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::PositionVertexAttributes : ClientBlockPipeline::VertexAttribute&lt;Vec3&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-faceattribute-clientblockpipeline-quadindices" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-faceattribute-clientblockpipeline-quadindices"><span><code>ClientBlockPipeline::FaceAttribute&lt;ClientBlockPipeline::QuadIndices&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceAttribute&lt;ClientBlockPipeline::QuadIndices&gt; : std::vector&lt;ClientBlockPipeline::QuadIndices&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-quadindicesfaceattributes" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-quadindicesfaceattributes"><span><code>ClientBlockPipeline::QuadIndicesFaceAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::QuadIndicesFaceAttributes : ClientBlockPipeline::FaceAttribute&lt;ClientBlockPipeline::QuadIndices&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-faceattribute-bool" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-faceattribute-bool"><span><code>ClientBlockPipeline::FaceAttribute&lt;bool&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceAttribute&lt;bool&gt; : std::vector&lt;bool&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-culledfaceattribute" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-culledfaceattribute"><span><code>ClientBlockPipeline::CulledFaceAttribute</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::CulledFaceAttribute : ClientBlockPipeline::FaceAttribute&lt;bool&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-flatlightbakingstep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-flatlightbakingstep"><span><code>ClientBlockPipeline::FlatLightBakingStep</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FlatLightBakingStep : ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-flatlightbakingstep-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-flatlightbakingstep-vtbl"><span><code>ClientBlockPipeline::FlatLightBakingStep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::FlatLightBakingStep_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-volumeof-brightnesspair" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeof-brightnesspair"><span><code>ClientBlockPipeline::VolumeOf&lt;BrightnessPair&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VolumeOf&lt;BrightnessPair&gt;</span>
<span class="line">{</span>
<span class="line">  Pos mMin;</span>
<span class="line">  Pos mMax;</span>
<span class="line">  std::vector&lt;BrightnessPair&gt; mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-lightvolume" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-lightvolume"><span><code>ClientBlockPipeline::LightVolume</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::LightVolume : ClientBlockPipeline::VolumeOf&lt;BrightnessPair&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-faceattribute-vec2" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-faceattribute-vec2"><span><code>ClientBlockPipeline::FaceAttribute&lt;Vec2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceAttribute&lt;Vec2&gt; : std::vector&lt;Vec2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-lightuvfaceattributes" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-lightuvfaceattributes"><span><code>ClientBlockPipeline::LightUvFaceAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::LightUvFaceAttributes : ClientBlockPipeline::FaceAttribute&lt;Vec2&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-gpubuffergenstep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-gpubuffergenstep"><span><code>ClientBlockPipeline::GpuBufferGenStep</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ClientBlockPipeline::GpuBufferGenStep : ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">  bool mEmitColors;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-gpubuffergenstep-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-gpubuffergenstep-vtbl"><span><code>ClientBlockPipeline::GpuBufferGenStep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::GpuBufferGenStep_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-faceattribute-clientblockpipeline-uvtransform" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-faceattribute-clientblockpipeline-uvtransform"><span><code>ClientBlockPipeline::FaceAttribute&lt;ClientBlockPipeline::UvTransform&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceAttribute&lt;ClientBlockPipeline::UvTransform&gt; : std::vector&lt;ClientBlockPipeline::UvTransform&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-imageuvfaceattributes" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-imageuvfaceattributes"><span><code>ClientBlockPipeline::ImageUvFaceAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::ImageUvFaceAttributes : ClientBlockPipeline::FaceAttribute&lt;ClientBlockPipeline::UvTransform&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-faceattribute-unsigned-char" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-faceattribute-unsigned-char"><span><code>ClientBlockPipeline::FaceAttribute&lt;unsigned char&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceAttribute&lt;unsigned char&gt; : std::vector&lt;unsigned char&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-facedirectionfaceattributes" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-facedirectionfaceattributes"><span><code>ClientBlockPipeline::FaceDirectionFaceAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceDirectionFaceAttributes : ClientBlockPipeline::FaceAttribute&lt;unsigned char&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-quadvertexbrightnessuvs" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-quadvertexbrightnessuvs"><span><code>ClientBlockPipeline::QuadVertexBrightnessUvs</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::QuadVertexBrightnessUvs</span>
<span class="line">{</span>
<span class="line">  std::array&lt;Vec2,4&gt; mUvs;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-faceattribute-clientblockpipeline-quadvertexbrightnessuvs" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-faceattribute-clientblockpipeline-quadvertexbrightnessuvs"><span><code>ClientBlockPipeline::FaceAttribute&lt;ClientBlockPipeline::QuadVertexBrightnessUvs&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceAttribute&lt;ClientBlockPipeline::QuadVertexBrightnessUvs&gt; : std::vector&lt;ClientBlockPipeline::QuadVertexBrightnessUvs&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-smoothlightinguvattributes" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-smoothlightinguvattributes"><span><code>ClientBlockPipeline::SmoothLightingUvAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::SmoothLightingUvAttributes : ClientBlockPipeline::FaceAttribute&lt;ClientBlockPipeline::QuadVertexBrightnessUvs&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-faceattribute-vec4" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-faceattribute-vec4"><span><code>ClientBlockPipeline::FaceAttribute&lt;Vec4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceAttribute&lt;Vec4&gt; : std::vector&lt;Vec4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-vertexaoattributes" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-vertexaoattributes"><span><code>ClientBlockPipeline::VertexAOAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VertexAOAttributes : ClientBlockPipeline::FaceAttribute&lt;Vec4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-materialoverridestep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-materialoverridestep"><span><code>ClientBlockPipeline::MaterialOverrideStep</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ClientBlockPipeline::MaterialOverrideStep : ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">  Bedrock::NonOwnerPointer&lt;ClientBlockPipeline::Material const &gt; mMaterialOverride;</span>
<span class="line">  _BYTE mUvGenerationType[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-materialoverridestep-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-materialoverridestep-vtbl"><span><code>ClientBlockPipeline::MaterialOverrideStep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::MaterialOverrideStep_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-normalgenerationstep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-normalgenerationstep"><span><code>ClientBlockPipeline::NormalGenerationStep</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::NormalGenerationStep : ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-normalgenerationstep-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-normalgenerationstep-vtbl"><span><code>ClientBlockPipeline::NormalGenerationStep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::NormalGenerationStep_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-primitivegenerationstep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-primitivegenerationstep"><span><code>ClientBlockPipeline::PrimitiveGenerationStep</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::PrimitiveGenerationStep : ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-primitivegenerationstep-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-primitivegenerationstep-vtbl"><span><code>ClientBlockPipeline::PrimitiveGenerationStep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::PrimitiveGenerationStep_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-blockschematicinstance" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-blockschematicinstance"><span><code>ClientBlockPipeline::BlockSchematicInstance</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::BlockSchematicInstance</span>
<span class="line">{</span>
<span class="line">  const ClientBlockPipeline::BlockSchematic *mSchematic;</span>
<span class="line">  unsigned __int64 mBoxIndexStart;</span>
<span class="line">  unsigned __int64 mBoxCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-blockschematiccell" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-blockschematiccell"><span><code>ClientBlockPipeline::BlockSchematicCell</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::BlockSchematicCell</span>
<span class="line">{</span>
<span class="line">  std::array&lt;ClientBlockPipeline::BlockSchematicInstance,2&gt; mSchematics;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-volumeof-clientblockpipeline-blockschematiccell" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeof-clientblockpipeline-blockschematiccell"><span><code>ClientBlockPipeline::VolumeOf&lt;ClientBlockPipeline::BlockSchematicCell&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VolumeOf&lt;ClientBlockPipeline::BlockSchematicCell&gt;</span>
<span class="line">{</span>
<span class="line">  Pos mMin;</span>
<span class="line">  Pos mMax;</span>
<span class="line">  std::vector&lt;ClientBlockPipeline::BlockSchematicCell&gt; mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-blockschematicvolume" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-blockschematicvolume"><span><code>ClientBlockPipeline::BlockSchematicVolume</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::BlockSchematicVolume : ClientBlockPipeline::VolumeOf&lt;ClientBlockPipeline::BlockSchematicCell&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-boxattribute-clientblockpipeline-boxschematicinstance" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-boxattribute-clientblockpipeline-boxschematicinstance"><span><code>ClientBlockPipeline::BoxAttribute&lt;ClientBlockPipeline::BoxSchematicInstance&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::BoxAttribute&lt;ClientBlockPipeline::BoxSchematicInstance&gt; : std::vector&lt;ClientBlockPipeline::BoxSchematicInstance&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-boxschematicattributes" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-boxschematicattributes"><span><code>ClientBlockPipeline::BoxSchematicAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::BoxSchematicAttributes : ClientBlockPipeline::BoxAttribute&lt;ClientBlockPipeline::BoxSchematicInstance&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-faceschematicattributes" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-faceschematicattributes"><span><code>ClientBlockPipeline::FaceSchematicAttributes</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::FaceSchematicAttributes : std::vector&lt;ClientBlockPipeline::FaceSchematicInstance&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-volumeviewof-clientblockpipeline-blockschematiccell" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeviewof-clientblockpipeline-blockschematiccell"><span><code>ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockSchematicCell&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockSchematicCell&gt;</span>
<span class="line">{</span>
<span class="line">  Pos mMin;</span>
<span class="line">  Pos mMax;</span>
<span class="line">  buffer_span_mut&lt;ClientBlockPipeline::BlockSchematicCell&gt; mView;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-volumeviewof-clientblockpipeline-blockschematiccell-const-volumeviewofiterator" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeviewof-clientblockpipeline-blockschematiccell-const-volumeviewofiterator"><span><code>ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockSchematicCell const &gt;::VolumeViewOfIterator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockSchematicCell const &gt;::VolumeViewOfIterator</span>
<span class="line">{</span>
<span class="line">  Pos mMin;</span>
<span class="line">  Pos mMax;</span>
<span class="line">  Pos mPosition;</span>
<span class="line">  buffer_span_mut&lt;ClientBlockPipeline::BlockSchematicCell const &gt;::iterator mIterator;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-schematicsjoiningstep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-schematicsjoiningstep"><span><code>ClientBlockPipeline::SchematicsJoiningStep</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::SchematicsJoiningStep : ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-schematicsjoiningstep-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-schematicsjoiningstep-vtbl"><span><code>ClientBlockPipeline::SchematicsJoiningStep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::SchematicsJoiningStep_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-volumeof-clientblockpipeline-blockopacitydata" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeof-clientblockpipeline-blockopacitydata"><span><code>ClientBlockPipeline::VolumeOf&lt;ClientBlockPipeline::BlockOpacityData&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VolumeOf&lt;ClientBlockPipeline::BlockOpacityData&gt;</span>
<span class="line">{</span>
<span class="line">  Pos mMin;</span>
<span class="line">  Pos mMax;</span>
<span class="line">  std::vector&lt;ClientBlockPipeline::BlockOpacityData&gt; mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-solidopaqueblockvolume" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-solidopaqueblockvolume"><span><code>ClientBlockPipeline::SolidOpaqueBlockVolume</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj ClientBlockPipeline::SolidOpaqueBlockVolume : ClientBlockPipeline::VolumeOf&lt;ClientBlockPipeline::BlockOpacityData&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-volumeviewof-clientblockpipeline-blockcell-const-volumeviewofiterator" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeviewof-clientblockpipeline-blockcell-const-volumeviewofiterator"><span><code>ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockCell const &gt;::VolumeViewOfIterator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockCell const &gt;::VolumeViewOfIterator</span>
<span class="line">{</span>
<span class="line">  Pos mMin;</span>
<span class="line">  Pos mMax;</span>
<span class="line">  Pos mPosition;</span>
<span class="line">  buffer_span_mut&lt;ClientBlockPipeline::BlockCell const &gt;::iterator mIterator;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-schematicsmappingstep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-schematicsmappingstep"><span><code>ClientBlockPipeline::SchematicsMappingStep</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::SchematicsMappingStep : ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-schematicsmappingstep-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-schematicsmappingstep-vtbl"><span><code>ClientBlockPipeline::SchematicsMappingStep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::SchematicsMappingStep_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-bakedbox" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-bakedbox"><span><code>ClientBlockPipeline::BakedBox</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::BakedBox</span>
<span class="line">{</span>
<span class="line">  Vec3 mCenter;</span>
<span class="line">  Vec3 mScale;</span>
<span class="line">  Vec3 mRotation;</span>
<span class="line">  Vec3 mPivot;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-bakednode" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-bakednode"><span><code>ClientBlockPipeline::BakedNode</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::BakedNode</span>
<span class="line">{</span>
<span class="line">  Vec3 mPivot;</span>
<span class="line">  Vec3 mRotation;</span>
<span class="line">  Vec3 mScale;</span>
<span class="line">  Vec3 mBindPoseRotation;</span>
<span class="line">  float mInflate;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-smoothlightbakingstep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-smoothlightbakingstep"><span><code>ClientBlockPipeline::SmoothLightBakingStep</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::SmoothLightBakingStep : ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-smoothlightbakingstep-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-smoothlightbakingstep-vtbl"><span><code>ClientBlockPipeline::SmoothLightBakingStep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::SmoothLightBakingStep_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-volumeof-float" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeof-float"><span><code>ClientBlockPipeline::VolumeOf&lt;float&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VolumeOf&lt;float&gt;</span>
<span class="line">{</span>
<span class="line">  Pos mMin;</span>
<span class="line">  Pos mMax;</span>
<span class="line">  std::vector&lt;float&gt; mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-aobrightnessvolume" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-aobrightnessvolume"><span><code>ClientBlockPipeline::AOBrightnessVolume</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::AOBrightnessVolume : ClientBlockPipeline::VolumeOf&lt;float&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-smoothlightbakingstep-visiblecelldata" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-smoothlightbakingstep-visiblecelldata"><span><code>ClientBlockPipeline::SmoothLightBakingStep::VisibleCellData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::SmoothLightBakingStep::VisibleCellData</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mIndex;</span>
<span class="line">  float mDistanceSq;</span>
<span class="line">  Pos mSampleCellPos;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-surfaceextractionstep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-surfaceextractionstep"><span><code>ClientBlockPipeline::SurfaceExtractionStep</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::SurfaceExtractionStep : ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-surfaceextractionstep-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-surfaceextractionstep-vtbl"><span><code>ClientBlockPipeline::SurfaceExtractionStep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::SurfaceExtractionStep_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-surfaceextractionstep-run-l2-quaddata" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-surfaceextractionstep-run-l2-quaddata"><span><code>ClientBlockPipeline::SurfaceExtractionStep::_run::__l2::QuadData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(4)) ClientBlockPipeline::SurfaceExtractionStep::_run::__l2::QuadData</span>
<span class="line">{</span>
<span class="line">  std::array&lt;int,4&gt; vertices;</span>
<span class="line">  unsigned __int8 facing;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-sharedmemorytracker-sharedmemorytrackerbase" tabindex="-1"><a class="header-anchor" href="#core-sharedmemorytracker-sharedmemorytrackerbase"><span><code>Core::SharedMemoryTracker::SharedMemoryTrackerBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::SharedMemoryTracker::SharedMemoryTrackerBase</span>
<span class="line">{</span>
<span class="line">  Core::SharedMemoryTracker::SharedMemoryTrackerBase_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-sharedmemorytracker-sharedmemorytrackerbase-vtbl" tabindex="-1"><a class="header-anchor" href="#core-sharedmemorytracker-sharedmemorytrackerbase-vtbl"><span><code>Core::SharedMemoryTracker::SharedMemoryTrackerBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::SharedMemoryTracker::SharedMemoryTrackerBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SharedMemoryTrackerBase)(Core::SharedMemoryTracker::SharedMemoryTrackerBase *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-details-worktoken" tabindex="-1"><a class="header-anchor" href="#cg-details-worktoken"><span><code>cg::details::WorkToken</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::details::WorkToken</span>
<span class="line">{</span>
<span class="line">  std::atomic&lt;bool&gt; mIsDone;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-grouppooldescription" tabindex="-1"><a class="header-anchor" href="#cg-grouppooldescription"><span><code>cg::GroupPoolDescription</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) cg::GroupPoolDescription</span>
<span class="line">{</span>
<span class="line">  WorkerPool *mPool;</span>
<span class="line">  Scheduler *mScheduler;</span>
<span class="line">  bool mIsHelper;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskdispatcherschedulertraits-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const" tabindex="-1"><a class="header-anchor" href="#cg-taskdispatcherschedulertraits-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const"><span><code>cg::TaskDispatcherSchedulerTraits&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TaskDispatcherSchedulerTraits&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution" tabindex="-1"><a class="header-anchor" href="#cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution"><span><code>cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-schedulerexecutiontraits-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-cg-details-worktoken" tabindex="-1"><a class="header-anchor" href="#cg-schedulerexecutiontraits-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-cg-details-worktoken"><span><code>cg::SchedulerExecutionTraits&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt;,cg::details::WorkToken&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::SchedulerExecutionTraits&lt;cg::LambdaExecutor&lt;dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy&lt;dragon::rendering::RenderContext,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt;,cg::details::WorkToken&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-details-dispatchtoken-std-shared-ptr-cg-details-worktoken-const-std-shared-ptr-std-function-void-cdecl-dragon-rendering-rendercontext" tabindex="-1"><a class="header-anchor" href="#cg-details-dispatchtoken-std-shared-ptr-cg-details-worktoken-const-std-shared-ptr-std-function-void-cdecl-dragon-rendering-rendercontext"><span><code>cg::details::DispatchToken&lt;std::shared_ptr&lt;cg::details::WorkToken const &gt;,std::shared_ptr&lt;std::function&lt;void __cdecl(dragon::rendering::RenderContext &amp;)&gt; &gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::details::DispatchToken&lt;std::shared_ptr&lt;cg::details::WorkToken const &gt;,std::shared_ptr&lt;std::function&lt;void __cdecl(dragon::rendering::RenderContext &amp;)&gt; &gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;cg::details::WorkToken const &gt; mToken;</span>
<span class="line">  std::optional&lt;std::shared_ptr&lt;std::function&lt;void __cdecl(dragon::rendering::RenderContext &amp;)&gt; &gt; &gt; mResult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource" tabindex="-1"><a class="header-anchor" href="#core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource"><span><code>Core::Cache&lt;unsigned __int64,dragon::rendering::BufferResourceManager&lt;dragon::rendering::TextureResourceType&gt;::BufferResource,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::rendering::TextureResourceType&gt;::BufferResource&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Cache&lt;unsigned __int64,dragon::rendering::BufferResourceManager&lt;dragon::rendering::TextureResourceType&gt;::BufferResource,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::rendering::TextureResourceType&gt;::BufferResource&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_mutex mAccess;</span>
<span class="line">  std::unordered_map&lt;unsigned __int64,std::shared_ptr&lt;dragon::rendering::BufferResourceManager&lt;dragon::rendering::TextureResourceType&gt;::BufferResource&gt;&gt; mContent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-worldextractorstep" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-worldextractorstep"><span><code>ClientBlockPipeline::WorldExtractorStep</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj ClientBlockPipeline::WorldExtractorStep : ClientBlockPipeline::Step</span>
<span class="line">{</span>
<span class="line">  std::function&lt;bool __cdecl(Block const &amp;)&gt; mBlockUsagePredicate;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-worldextractorstep-vtbl" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-worldextractorstep-vtbl"><span><code>ClientBlockPipeline::WorldExtractorStep_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientBlockPipeline::WorldExtractorStep_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Step)(ClientBlockPipeline::Step *this);</span>
<span class="line">  ClientBlockPipeline::StepResult *(__fastcall *run)(ClientBlockPipeline::Step *this, ClientBlockPipeline::StepResult *result, const ClientBlockPipeline::Inputs *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-volumeof-int" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeof-int"><span><code>ClientBlockPipeline::VolumeOf&lt;int&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VolumeOf&lt;int&gt;</span>
<span class="line">{</span>
<span class="line">  Pos mMin;</span>
<span class="line">  Pos mMax;</span>
<span class="line">  std::vector&lt;int&gt; mData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-grasstintvolume" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-grasstintvolume"><span><code>ClientBlockPipeline::GrassTintVolume</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::GrassTintVolume : ClientBlockPipeline::VolumeOf&lt;int&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-watertintvolume" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-watertintvolume"><span><code>ClientBlockPipeline::WaterTintVolume</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::WaterTintVolume : ClientBlockPipeline::VolumeOf&lt;int&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-volumeviewof-clientblockpipeline-blockcell-volumeviewofiterator" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-volumeviewof-clientblockpipeline-blockcell-volumeviewofiterator"><span><code>ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockCell&gt;::VolumeViewOfIterator</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::VolumeViewOf&lt;ClientBlockPipeline::BlockCell&gt;::VolumeViewOfIterator</span>
<span class="line">{</span>
<span class="line">  Pos mMin;</span>
<span class="line">  Pos mMax;</span>
<span class="line">  Pos mPosition;</span>
<span class="line">  buffer_span_mut&lt;ClientBlockPipeline::BlockCell&gt;::iterator mIterator;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientblockpipeline-worldcliparea" tabindex="-1"><a class="header-anchor" href="#clientblockpipeline-worldcliparea"><span><code>ClientBlockPipeline::WorldClipArea</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientBlockPipeline::WorldClipArea : AABB</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crimsonforestmoodsoundplayer" tabindex="-1"><a class="header-anchor" href="#crimsonforestmoodsoundplayer"><span><code>CrimsonForestMoodSoundPlayer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CrimsonForestMoodSoundPlayer</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commerceauthtoken" tabindex="-1"><a class="header-anchor" href="#commerceauthtoken"><span><code>CommerceAuthToken</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommerceAuthToken</span>
<span class="line">{</span>
<span class="line">  std::string mToken;</span>
<span class="line">  std::string mExpiration;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commerceidentity" tabindex="-1"><a class="header-anchor" href="#commerceidentity"><span><code>CommerceIdentity</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommerceIdentity : std::enable_shared_from_this&lt;CommerceIdentity&gt;</span>
<span class="line">{</span>
<span class="line">  IMinecraftEventing *mEventing;</span>
<span class="line">  Bedrock::NonOwnerPointer&lt;Social::IUserManager&gt; mUserManager;</span>
<span class="line">  std::unique_ptr&lt;SecureStorage&gt; mSecureStore;</span>
<span class="line">  std::unique_ptr&lt;Crypto::Asymmetric::Asymmetric&gt; mSSLInterface;</span>
<span class="line">  bool mHasQueriedForDeviceId;</span>
<span class="line">  bool mDeviceAccountUsed;</span>
<span class="line">  std::string mUserId;</span>
<span class="line">  CommerceAuthToken mDeviceAuthToken;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-pkcs7-isysteminterface" tabindex="-1"><a class="header-anchor" href="#crypto-pkcs7-isysteminterface"><span><code>Crypto::Pkcs7::ISystemInterface</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Crypto::Pkcs7::ISystemInterface</span>
<span class="line">{</span>
<span class="line">  Crypto::Pkcs7::ISystemInterface_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-pkcs7-isysteminterface-vtbl" tabindex="-1"><a class="header-anchor" href="#crypto-pkcs7-isysteminterface-vtbl"><span><code>Crypto::Pkcs7::ISystemInterface_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Crypto::Pkcs7::ISystemInterface_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ISystemInterface)(Crypto::Pkcs7::ISystemInterface *this);</span>
<span class="line">  std::vector&lt;unsigned char&gt; *(__fastcall *verifyAndReadPKCS7Data)(Crypto::Pkcs7::ISystemInterface *this, std::vector&lt;unsigned char&gt; *result, const std::string *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cmsghdr" tabindex="-1"><a class="header-anchor" href="#cmsghdr"><span><code>cmsghdr</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct cmsghdr</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 cmsg_len;</span>
<span class="line">  int cmsg_level;</span>
<span class="line">  int cmsg_type;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-context" tabindex="-1"><a class="header-anchor" href="#concurrency-context"><span><code>Concurrency::Context</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::Context</span>
<span class="line">{</span>
<span class="line">  Concurrency::Context_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-context-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-context-vtbl"><span><code>Concurrency::Context_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::Context_vtbl</span>
<span class="line">{</span>
<span class="line">  unsigned int (__fastcall *GetId)(Concurrency::Context *this);</span>
<span class="line">  unsigned int (__fastcall *GetVirtualProcessorId)(Concurrency::Context *this);</span>
<span class="line">  unsigned int (__fastcall *GetScheduleGroupId)(Concurrency::Context *this);</span>
<span class="line">  void (__fastcall *Unblock)(Concurrency::Context *this);</span>
<span class="line">  bool (__fastcall *IsSynchronouslyBlocked)(Concurrency::Context *this);</span>
<span class="line">  void (__fastcall *~Context)(Concurrency::Context *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-message-not-found" tabindex="-1"><a class="header-anchor" href="#concurrency-message-not-found"><span><code>Concurrency::message_not_found</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::message_not_found : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-message-not-found-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-message-not-found-vtbl"><span><code>Concurrency::message_not_found_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::message_not_found_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-critical-section" tabindex="-1"><a class="header-anchor" href="#concurrency-critical-section"><span><code>Concurrency::critical_section</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::critical_section</span>
<span class="line">{</span>
<span class="line">  void *_M_activeNode[5];</span>
<span class="line">  void *volatile _M_pHead;</span>
<span class="line">  void *volatile _M_pTail;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-critical-section-scoped-lock" tabindex="-1"><a class="header-anchor" href="#concurrency-critical-section-scoped-lock"><span><code>Concurrency::critical_section::scoped_lock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::critical_section::scoped_lock</span>
<span class="line">{</span>
<span class="line">  Concurrency::critical_section *_M_critical_section;</span>
<span class="line">  void *_M_node[5];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-scheduler" tabindex="-1"><a class="header-anchor" href="#concurrency-scheduler"><span><code>Concurrency::Scheduler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::Scheduler</span>
<span class="line">{</span>
<span class="line">  Concurrency::Scheduler_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-schedulerpolicy-policybag-unnamed-type-m-values-unnamed-type-m-specificvalues" tabindex="-1"><a class="header-anchor" href="#concurrency-schedulerpolicy-policybag-unnamed-type-m-values-unnamed-type-m-specificvalues"><span><code>Concurrency::SchedulerPolicy::_PolicyBag::&lt;unnamed_type__M_values&gt;::&lt;unnamed_type__M_specificValues&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct Concurrency::SchedulerPolicy::_PolicyBag::&lt;unnamed_type__M_values&gt;::&lt;unnamed_type__M_specificValues&gt;</span>
<span class="line">{</span>
<span class="line">  Concurrency::SchedulerType _M_schedulerKind;</span>
<span class="line">  unsigned int _M_maxConcurrency;</span>
<span class="line">  unsigned int _M_minConcurrency;</span>
<span class="line">  unsigned int _M_targetOversubscriptionFactor;</span>
<span class="line">  unsigned int _M_localContextCacheSize;</span>
<span class="line">  unsigned int _M_contextStackSize;</span>
<span class="line">  unsigned int _M_contextPriority;</span>
<span class="line">  Concurrency::SchedulingProtocolType _M_schedulingProtocol;</span>
<span class="line">  Concurrency::DynamicProgressFeedbackType _M_dynamicProgressFeedback;</span>
<span class="line">  Concurrency::WinRTInitializationType _M_WinRTInitialization;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-schedulerpolicy-policybag" tabindex="-1"><a class="header-anchor" href="#concurrency-schedulerpolicy-policybag"><span><code>Concurrency::SchedulerPolicy::_PolicyBag</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct Concurrency::SchedulerPolicy::_PolicyBag</span>
<span class="line">{</span>
<span class="line">  Concurrency::SchedulerPolicy::_PolicyBag::&lt;unnamed_type__M_values&gt; _M_values;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-schedulerpolicy" tabindex="-1"><a class="header-anchor" href="#concurrency-schedulerpolicy"><span><code>Concurrency::SchedulerPolicy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::SchedulerPolicy</span>
<span class="line">{</span>
<span class="line">  Concurrency::SchedulerPolicy::_PolicyBag *_M_pPolicyBag;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-schedulegroup" tabindex="-1"><a class="header-anchor" href="#concurrency-schedulegroup"><span><code>Concurrency::ScheduleGroup</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::ScheduleGroup</span>
<span class="line">{</span>
<span class="line">  Concurrency::ScheduleGroup_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-schedulegroup-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-schedulegroup-vtbl"><span><code>Concurrency::ScheduleGroup_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::ScheduleGroup_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *ScheduleTask)(Concurrency::ScheduleGroup *this, void (__fastcall *)(void *), void *);</span>
<span class="line">  unsigned int (__fastcall *Id)(Concurrency::ScheduleGroup *this);</span>
<span class="line">  unsigned int (__fastcall *Reference)(Concurrency::ScheduleGroup *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(Concurrency::ScheduleGroup *this);</span>
<span class="line">  void (__fastcall *~ScheduleGroup)(Concurrency::ScheduleGroup *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-location" tabindex="-1"><a class="header-anchor" href="#concurrency-location"><span><code>Concurrency::location</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::location</span>
<span class="line">{</span>
<span class="line">  unsigned __int32 _M_type : 28;</span>
<span class="line">  unsigned __int32 _M_reserved : 4;</span>
<span class="line">  unsigned int _M_bindingId;</span>
<span class="line">  $441E66D683A4B86F862CB9A174F60F9E ___u3;</span>
<span class="line">  void *_M_pBinding;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-scheduler-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-scheduler-vtbl"><span><code>Concurrency::Scheduler_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::Scheduler_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Scheduler)(Concurrency::Scheduler *this);</span>
<span class="line">  unsigned int (__fastcall *Id)(Concurrency::Scheduler *this);</span>
<span class="line">  unsigned int (__fastcall *GetNumberOfVirtualProcessors)(Concurrency::Scheduler *this);</span>
<span class="line">  Concurrency::SchedulerPolicy *(__fastcall *GetPolicy)(Concurrency::Scheduler *this, Concurrency::SchedulerPolicy *result);</span>
<span class="line">  unsigned int (__fastcall *Reference)(Concurrency::Scheduler *this);</span>
<span class="line">  unsigned int (__fastcall *Release)(Concurrency::Scheduler *this);</span>
<span class="line">  void (__fastcall *RegisterShutdownEvent)(Concurrency::Scheduler *this, void *);</span>
<span class="line">  void (__fastcall *Attach)(Concurrency::Scheduler *this);</span>
<span class="line">  Concurrency::ScheduleGroup *(__fastcall *CreateScheduleGroup)(Concurrency::Scheduler *this, Concurrency::location *);</span>
<span class="line">  Concurrency::ScheduleGroup *(__fastcall *CreateScheduleGroup)(Concurrency::Scheduler *this);</span>
<span class="line">  void (__fastcall *ScheduleTask)(Concurrency::Scheduler *this, void (__fastcall *)(void *), void *, Concurrency::location *);</span>
<span class="line">  void (__fastcall *ScheduleTask)(Concurrency::Scheduler *this, void (__fastcall *)(void *), void *);</span>
<span class="line">  bool (__fastcall *IsAvailableLocation)(Concurrency::Scheduler *this, const Concurrency::location *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-scheduler-resource-allocation-error" tabindex="-1"><a class="header-anchor" href="#concurrency-scheduler-resource-allocation-error"><span><code>Concurrency::scheduler_resource_allocation_error</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Concurrency::scheduler_resource_allocation_error : std::exception</span>
<span class="line">{</span>
<span class="line">  HRESULT _Hresult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-scheduler-resource-allocation-error-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-scheduler-resource-allocation-error-vtbl"><span><code>Concurrency::scheduler_resource_allocation_error_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::scheduler_resource_allocation_error_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-scheduler-worker-creation-error" tabindex="-1"><a class="header-anchor" href="#concurrency-scheduler-worker-creation-error"><span><code>Concurrency::scheduler_worker_creation_error</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::scheduler_worker_creation_error : Concurrency::scheduler_resource_allocation_error</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-scheduler-worker-creation-error-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-scheduler-worker-creation-error-vtbl"><span><code>Concurrency::scheduler_worker_creation_error_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::scheduler_worker_creation_error_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-refcounterbase" tabindex="-1"><a class="header-anchor" href="#concurrency-details-refcounterbase"><span><code>Concurrency::details::_RefCounterBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Concurrency::details::_RefCounterBase</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_RefCounterBase_vtbl *__vftable /*VFT*/;</span>
<span class="line">  volatile int _M_refCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-refcounterbase-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-refcounterbase-vtbl"><span><code>Concurrency::details::_RefCounterBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_RefCounterBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_RefCounterBase)(Concurrency::details::_RefCounterBase *this);</span>
<span class="line">  void (__fastcall *_Destroy)(Concurrency::details::_RefCounterBase *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-taskcollectionbase" tabindex="-1"><a class="header-anchor" href="#concurrency-details-taskcollectionbase"><span><code>Concurrency::details::_TaskCollectionBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TaskCollectionBase</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_TaskCollectionBase *_M_pParent;</span>
<span class="line">  __int32 _M_inliningDepth : 28;</span>
<span class="line">  __int32 _M_inlineFlags : 4;</span>
<span class="line">  Concurrency::details::_CancellationTokenState *_M_pTokenState;</span>
<span class="line">  void *_M_pOwningContext;</span>
<span class="line">  int _M_unpoppedChores;</span>
<span class="line">  volatile int _M_completedStolenChores;</span>
<span class="line">  std::exception_ptr *_M_pException;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-refcounter" tabindex="-1"><a class="header-anchor" href="#concurrency-details-refcounter"><span><code>Concurrency::details::_RefCounter</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Concurrency::details::_RefCounter</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_RefCounter_vtbl *__vftable /*VFT*/;</span>
<span class="line">  volatile int _M_refCount;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-refcounter-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-refcounter-vtbl"><span><code>Concurrency::details::_RefCounter_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_RefCounter_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_RefCounter)(Concurrency::details::_RefCounter *this);</span>
<span class="line">  void (__fastcall *_Destroy)(Concurrency::details::_RefCounter *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokenregistration" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokenregistration"><span><code>Concurrency::details::_CancellationTokenRegistration</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_CancellationTokenRegistration : Concurrency::details::_RefCounter</span>
<span class="line">{</span>
<span class="line">  std::atomic&lt;long&gt; _M_state;</span>
<span class="line">  std::condition_variable _M_CondVar;</span>
<span class="line">  std::mutex _M_Mutex;</span>
<span class="line">  bool _M_signaled;</span>
<span class="line">  Concurrency::details::_CancellationTokenState *_M_pTokenState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokenstate" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokenstate"><span><code>Concurrency::details::_CancellationTokenState</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_CancellationTokenState : Concurrency::details::_RefCounter</span>
<span class="line">{</span>
<span class="line">  std::atomic&lt;long&gt; _M_stateFlag;</span>
<span class="line">  std::mutex _M_listLock;</span>
<span class="line">  Concurrency::details::_CancellationTokenState::TokenRegistrationContainer _M_registrations;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokenregistration-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokenregistration-vtbl"><span><code>Concurrency::details::_CancellationTokenRegistration_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_CancellationTokenRegistration_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_RefCounter)(Concurrency::details::_RefCounter *this);</span>
<span class="line">  void (__fastcall *_Destroy)(Concurrency::details::_RefCounter *this);</span>
<span class="line">  void (__fastcall *_Exec)(Concurrency::details::_CancellationTokenRegistration *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokenstate-tokenregistrationcontainer-node" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokenstate-tokenregistrationcontainer-node"><span><code>Concurrency::details::_CancellationTokenState::TokenRegistrationContainer::_Node</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_CancellationTokenState::TokenRegistrationContainer::_Node</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_CancellationTokenRegistration *_M_token;</span>
<span class="line">  Concurrency::details::_CancellationTokenState::TokenRegistrationContainer::_Node *_M_next;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokenstate-tokenregistrationcontainer" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokenstate-tokenregistrationcontainer"><span><code>Concurrency::details::_CancellationTokenState::TokenRegistrationContainer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_CancellationTokenState::TokenRegistrationContainer</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_CancellationTokenState::TokenRegistrationContainer::_Node *_M_begin;</span>
<span class="line">  Concurrency::details::_CancellationTokenState::TokenRegistrationContainer::_Node *_M_last;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokenstate-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokenstate-vtbl"><span><code>Concurrency::details::_CancellationTokenState_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_CancellationTokenState_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_RefCounter)(Concurrency::details::_RefCounter *this);</span>
<span class="line">  void (__fastcall *_Destroy)(Concurrency::details::_RefCounter *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-event" tabindex="-1"><a class="header-anchor" href="#concurrency-event"><span><code>Concurrency::event</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::event</span>
<span class="line">{</span>
<span class="line">  void *volatile _M_pWaitChain;</span>
<span class="line">  void *_M_pResetChain;</span>
<span class="line">  Concurrency::critical_section _M_lock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-taskcollection" tabindex="-1"><a class="header-anchor" href="#concurrency-details-taskcollection"><span><code>Concurrency::details::_TaskCollection</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TaskCollection : Concurrency::details::_TaskCollectionBase</span>
<span class="line">{</span>
<span class="line">  void *_M_stealTracker[4];</span>
<span class="line">  int _M_activeStealersForCancellation;</span>
<span class="line">  volatile int _M_exitCode;</span>
<span class="line">  volatile int _M_executionStatus;</span>
<span class="line">  Concurrency::event _M_event;</span>
<span class="line">  Concurrency::details::_TaskCollection *_M_pOriginalCollection;</span>
<span class="line">  Concurrency::details::_TaskCollection *_M_pNextAlias;</span>
<span class="line">  void *_M_pTaskExtension;</span>
<span class="line">  int _M_taskCookies[2];</span>
<span class="line">  volatile int _M_flags;</span>
<span class="line">  volatile int _M_chaining;</span>
<span class="line">  unsigned int _M_boundQueueId;</span>
<span class="line">  int _M_stackPos;</span>
<span class="line">  void (__fastcall *_M_completionHandler)(void *);</span>
<span class="line">  void *_M_pCompletionContext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-asynctaskcollection" tabindex="-1"><a class="header-anchor" href="#concurrency-details-asynctaskcollection"><span><code>Concurrency::details::_AsyncTaskCollection</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_AsyncTaskCollection : Concurrency::details::_RefCounterBase</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_TaskCollection _M_taskCollection;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-asynctaskcollection-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-asynctaskcollection-vtbl"><span><code>Concurrency::details::_AsyncTaskCollection_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_AsyncTaskCollection_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_RefCounterBase)(Concurrency::details::_RefCounterBase *this);</span>
<span class="line">  void (__fastcall *_Destroy)(Concurrency::details::_RefCounterBase *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-chore" tabindex="-1"><a class="header-anchor" href="#concurrency-details-chore"><span><code>Concurrency::details::_Chore</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Chore</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_Chore_vtbl *__vftable /*VFT*/;</span>
<span class="line">  void (__fastcall *m_pFunction)(void *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-chore-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-chore-vtbl"><span><code>Concurrency::details::_Chore_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_Chore_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_Chore)(Concurrency::details::_Chore *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-allocbase" tabindex="-1"><a class="header-anchor" href="#concurrency-details-allocbase"><span><code>Concurrency::details::_AllocBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_AllocBase</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-unrealizedchore" tabindex="-1"><a class="header-anchor" href="#concurrency-details-unrealizedchore"><span><code>Concurrency::details::_UnrealizedChore</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Concurrency::details::_UnrealizedChore : Concurrency::details::_Chore, Concurrency::details::_AllocBase</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_TaskCollectionBase *_M_pTaskCollection;</span>
<span class="line">  void (__fastcall *_M_pChoreFunction)(Concurrency::details::_UnrealizedChore *);</span>
<span class="line">  bool _M_fRuntimeOwnsLifetime;</span>
<span class="line">  bool _M_fDetached;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-unrealizedchore-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-unrealizedchore-vtbl"><span><code>Concurrency::details::_UnrealizedChore_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_UnrealizedChore_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_Chore)(Concurrency::details::_Chore *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-task-generator-oversubscriber" tabindex="-1"><a class="header-anchor" href="#concurrency-details-task-generator-oversubscriber"><span><code>Concurrency::details::_Task_generator_oversubscriber</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Task_generator_oversubscriber</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-beacon-reference" tabindex="-1"><a class="header-anchor" href="#concurrency-details-beacon-reference"><span><code>Concurrency::details::_Beacon_reference</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Beacon_reference</span>
<span class="line">{</span>
<span class="line">  volatile int _M_signals;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellation-beacon" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellation-beacon"><span><code>Concurrency::details::_Cancellation_beacon</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Cancellation_beacon</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_Beacon_reference *_M_pRef;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-nonreentrantblockinglock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-nonreentrantblockinglock"><span><code>Concurrency::details::_NonReentrantBlockingLock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_NonReentrantBlockingLock</span>
<span class="line">{</span>
<span class="line">  void *_M_criticalSection[5];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-nonreentrantblockinglock-scoped-lock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-nonreentrantblockinglock-scoped-lock"><span><code>Concurrency::details::_NonReentrantBlockingLock::_Scoped_lock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_NonReentrantBlockingLock::_Scoped_lock</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_NonReentrantBlockingLock *_M_lock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokencallback-lambda-a40cf361f6b489cdc7950415e60bfc49" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokencallback-lambda-a40cf361f6b489cdc7950415e60bfc49"><span><code>Concurrency::details::_CancellationTokenCallback&lt;&lt;lambda_a40cf361f6b489cdc7950415e60bfc49&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Concurrency::details::_CancellationTokenCallback&lt;&lt;lambda_a40cf361f6b489cdc7950415e60bfc49&gt; &gt; : Concurrency::details::_CancellationTokenRegistration</span>
<span class="line">{</span>
<span class="line">  struct Concurrency::details::_JoinAllTokens_Add::__l5::&lt;lambda_a40cf361f6b489cdc7950415e60bfc49&gt; _M_function;</span>
<span class="line">  _BYTE gapC0[8];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokencallback-lambda-a40cf361f6b489cdc7950415e60bfc49-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokencallback-lambda-a40cf361f6b489cdc7950415e60bfc49-vtbl"><span><code>Concurrency::details::_CancellationTokenCallback&lt;&lt;lambda_a40cf361f6b489cdc7950415e60bfc49&gt; &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_CancellationTokenCallback&lt;&lt;lambda_a40cf361f6b489cdc7950415e60bfc49&gt; &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_RefCounter)(Concurrency::details::_RefCounter *this);</span>
<span class="line">  void (__fastcall *_Destroy)(Concurrency::details::_RefCounter *this);</span>
<span class="line">  void (__fastcall *_Exec)(Concurrency::details::_CancellationTokenRegistration *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-task-impl-base" tabindex="-1"><a class="header-anchor" href="#concurrency-details-task-impl-base"><span><code>Concurrency::details::_Task_impl_base</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Task_impl_base</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_Task_impl_base_vtbl *__vftable /*VFT*/;</span>
<span class="line">  volatile Concurrency::details::_Task_impl_base::_TaskInternalState _M_TaskState;</span>
<span class="line">  bool _M_fFromAsync;</span>
<span class="line">  bool _M_fUnwrappedTask;</span>
<span class="line">  std::shared_ptr&lt;Concurrency::details::_ExceptionHolder&gt; _M_exceptionHolder;</span>
<span class="line">  std::mutex _M_ContinuationsCritSec;</span>
<span class="line">  Concurrency::details::_ContinuationTaskHandleBase *_M_Continuations;</span>
<span class="line">  Concurrency::details::_CancellationTokenState *_M_pTokenState;</span>
<span class="line">  Concurrency::details::_CancellationTokenRegistration *_M_pRegistration;</span>
<span class="line">  Concurrency::details::_TaskCollectionBaseImpl _M_TaskCollection;</span>
<span class="line">  Concurrency::details::_TaskCreationCallstack _M_pTaskCreationCallstack;</span>
<span class="line">  Concurrency::details::_TaskEventLogger _M_taskEventLogger;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-exceptionholder" tabindex="-1"><a class="header-anchor" href="#concurrency-details-exceptionholder"><span><code>Concurrency::details::_ExceptionHolder</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ExceptionHolder</span>
<span class="line">{</span>
<span class="line">  std::atomic&lt;long&gt; _M_exceptionObserved;</span>
<span class="line">  std::exception_ptr _M_stdException;</span>
<span class="line">  Concurrency::details::_TaskCreationCallstack _M_stackTrace;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-task-impl-base-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-task-impl-base-vtbl"><span><code>Concurrency::details::_Task_impl_base_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_Task_impl_base_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_Task_impl_base)(Concurrency::details::_Task_impl_base *this);</span>
<span class="line">  bool (__fastcall *_CancelAndRunContinuations)(Concurrency::details::_Task_impl_base *this, bool, bool, bool, const std::shared_ptr&lt;Concurrency::details::_ExceptionHolder&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-taskprochandle" tabindex="-1"><a class="header-anchor" href="#concurrency-details-taskprochandle"><span><code>Concurrency::details::_TaskProcHandle</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TaskProcHandle</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_TaskProcHandle_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-taskprochandle-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-taskprochandle-vtbl"><span><code>Concurrency::details::_TaskProcHandle_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_TaskProcHandle_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_TaskProcHandle)(Concurrency::details::_TaskProcHandle *this);</span>
<span class="line">  void (__fastcall *invoke)(Concurrency::details::_TaskProcHandle *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-continuationtaskhandlebase" tabindex="-1"><a class="header-anchor" href="#concurrency-details-continuationtaskhandlebase"><span><code>Concurrency::details::_ContinuationTaskHandleBase</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ContinuationTaskHandleBase : Concurrency::details::_TaskProcHandle</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_ContinuationTaskHandleBase *_M_next;</span>
<span class="line">  Concurrency::task_continuation_context _M_continuationContext;</span>
<span class="line">  bool _M_isTaskBasedContinuation;</span>
<span class="line">  Concurrency::details::_TaskInliningMode _M_inliningMode;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-continuationtaskhandlebase-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-continuationtaskhandlebase-vtbl"><span><code>Concurrency::details::_ContinuationTaskHandleBase_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_ContinuationTaskHandleBase_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_TaskProcHandle)(Concurrency::details::_TaskProcHandle *this);</span>
<span class="line">  void (__fastcall *invoke)(Concurrency::details::_TaskProcHandle *this);</span>
<span class="line">  std::shared_ptr&lt;Concurrency::details::_Task_impl_base&gt; *(__fastcall *_GetTaskImplBase)(Concurrency::details::_ContinuationTaskHandleBase *this, std::shared_ptr&lt;Concurrency::details::_Task_impl_base&gt; *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-scheduler-interface-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-scheduler-interface-vtbl"><span><code>Concurrency::scheduler_interface_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::scheduler_interface_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *schedule)(Concurrency::scheduler_interface *this, void (__fastcall *)(void *), void *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-taskcollectionbaseimpl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-taskcollectionbaseimpl"><span><code>Concurrency::details::_TaskCollectionBaseImpl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Concurrency::details::_TaskCollectionBaseImpl</span>
<span class="line">{</span>
<span class="line">  std::condition_variable _M_StateChanged;</span>
<span class="line">  std::mutex _M_Cs;</span>
<span class="line">  Concurrency::scheduler_ptr _M_pScheduler;</span>
<span class="line">  Concurrency::details::_TaskCollectionBaseImpl::_TaskCollectionState _M_State;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-taskeventlogger" tabindex="-1"><a class="header-anchor" href="#concurrency-details-taskeventlogger"><span><code>Concurrency::details::_TaskEventLogger</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Concurrency::details::_TaskEventLogger</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_Task_impl_base *_M_task;</span>
<span class="line">  bool _M_scheduled;</span>
<span class="line">  bool _M_taskPostEventStarted;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-task-impl-base-registercancellation-l2-lambda-be3e5d9dce35d2c8dbfa8485373731d5" tabindex="-1"><a class="header-anchor" href="#concurrency-details-task-impl-base-registercancellation-l2-lambda-be3e5d9dce35d2c8dbfa8485373731d5"><span><code>Concurrency::details::_Task_impl_base::_RegisterCancellation::__l2::&lt;lambda_be3e5d9dce35d2c8dbfa8485373731d5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Task_impl_base::_RegisterCancellation::__l2::&lt;lambda_be3e5d9dce35d2c8dbfa8485373731d5&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;Concurrency::details::_Task_impl_base&gt; _WeakPtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokencallback-lambda-be3e5d9dce35d2c8dbfa8485373731d5" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokencallback-lambda-be3e5d9dce35d2c8dbfa8485373731d5"><span><code>Concurrency::details::_CancellationTokenCallback&lt;&lt;lambda_be3e5d9dce35d2c8dbfa8485373731d5&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_CancellationTokenCallback&lt;&lt;lambda_be3e5d9dce35d2c8dbfa8485373731d5&gt; &gt; : Concurrency::details::_CancellationTokenRegistration</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_Task_impl_base::_RegisterCancellation::__l2::&lt;lambda_be3e5d9dce35d2c8dbfa8485373731d5&gt; _M_function;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokencallback-lambda-be3e5d9dce35d2c8dbfa8485373731d5-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokencallback-lambda-be3e5d9dce35d2c8dbfa8485373731d5-vtbl"><span><code>Concurrency::details::_CancellationTokenCallback&lt;&lt;lambda_be3e5d9dce35d2c8dbfa8485373731d5&gt; &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_CancellationTokenCallback&lt;&lt;lambda_be3e5d9dce35d2c8dbfa8485373731d5&gt; &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_RefCounter)(Concurrency::details::_RefCounter *this);</span>
<span class="line">  void (__fastcall *_Destroy)(Concurrency::details::_RefCounter *this);</span>
<span class="line">  void (__fastcall *_Exec)(Concurrency::details::_CancellationTokenRegistration *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-typeselectorasyncaction" tabindex="-1"><a class="header-anchor" href="#concurrency-details-typeselectorasyncaction"><span><code>Concurrency::details::_TypeSelectorAsyncAction</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TypeSelectorAsyncAction</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-interruption-exception" tabindex="-1"><a class="header-anchor" href="#concurrency-details-interruption-exception"><span><code>Concurrency::details::_Interruption_exception</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Interruption_exception : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-interruption-exception-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-interruption-exception-vtbl"><span><code>Concurrency::details::_Interruption_exception_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_Interruption_exception_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-resultholder-unsigned-char" tabindex="-1"><a class="header-anchor" href="#concurrency-details-resultholder-unsigned-char"><span><code>Concurrency::details::_ResultHolder&lt;unsigned char&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct Concurrency::details::_ResultHolder&lt;unsigned char&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned __int8 _Result;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-task-impl-unsigned-char" tabindex="-1"><a class="header-anchor" href="#concurrency-details-task-impl-unsigned-char"><span><code>Concurrency::details::_Task_impl&lt;unsigned char&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Task_impl&lt;unsigned char&gt; : Concurrency::details::_Task_impl_base</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_ResultHolder&lt;unsigned char&gt; _M_Result;</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; _M_InternalCancellation;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-task-impl-unsigned-char-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-task-impl-unsigned-char-vtbl"><span><code>Concurrency::details::_Task_impl&lt;unsigned char&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_Task_impl&lt;unsigned char&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_Task_impl_base)(Concurrency::details::_Task_impl_base *this);</span>
<span class="line">  bool (__fastcall *_CancelAndRunContinuations)(Concurrency::details::_Task_impl_base *this, bool, bool, bool, const std::shared_ptr&lt;Concurrency::details::_ExceptionHolder&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-task-completion-event-impl-unsigned-char" tabindex="-1"><a class="header-anchor" href="#concurrency-details-task-completion-event-impl-unsigned-char"><span><code>Concurrency::details::_Task_completion_event_impl&lt;unsigned char&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Concurrency::details::_Task_completion_event_impl&lt;unsigned char&gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::shared_ptr&lt;Concurrency::details::_Task_impl&lt;unsigned char&gt; &gt;&gt; _M_tasks;</span>
<span class="line">  std::mutex _M_taskListCritSec;</span>
<span class="line">  Concurrency::details::_ResultHolder&lt;unsigned char&gt; _M_value;</span>
<span class="line">  std::shared_ptr&lt;Concurrency::details::_ExceptionHolder&gt; _M_exceptionHolder;</span>
<span class="line">  bool _M_fHasValue;</span>
<span class="line">  bool _M_fIsCanceled;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-taskprocthunk" tabindex="-1"><a class="header-anchor" href="#concurrency-details-taskprocthunk"><span><code>Concurrency::details::_TaskProcThunk</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TaskProcThunk</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; _M_func;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-taskprocthunk-holder" tabindex="-1"><a class="header-anchor" href="#concurrency-details-taskprocthunk-holder"><span><code>Concurrency::details::_TaskProcThunk::_Holder</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TaskProcThunk::_Holder</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_TaskProcThunk *_M_pThunk;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokenregistration-taskproc" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokenregistration-taskproc"><span><code>Concurrency::details::CancellationTokenRegistration_TaskProc</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::CancellationTokenRegistration_TaskProc : Concurrency::details::_CancellationTokenRegistration</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *_M_proc)(void *);</span>
<span class="line">  void *_M_pData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokenregistration-taskproc-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokenregistration-taskproc-vtbl"><span><code>Concurrency::details::CancellationTokenRegistration_TaskProc_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::CancellationTokenRegistration_TaskProc_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_RefCounter)(Concurrency::details::_RefCounter *this);</span>
<span class="line">  void (__fastcall *_Destroy)(Concurrency::details::_RefCounter *this);</span>
<span class="line">  void (__fastcall *_Exec)(Concurrency::details::_CancellationTokenRegistration *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-taskworkitemraiilogger" tabindex="-1"><a class="header-anchor" href="#concurrency-details-taskworkitemraiilogger"><span><code>Concurrency::details::_TaskWorkItemRAIILogger</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TaskWorkItemRAIILogger</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_TaskEventLogger *_M_logger;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-scheduler" tabindex="-1"><a class="header-anchor" href="#concurrency-details-scheduler"><span><code>Concurrency::details::_Scheduler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Scheduler</span>
<span class="line">{</span>
<span class="line">  Concurrency::Scheduler *_M_pScheduler;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-thenimploptions" tabindex="-1"><a class="header-anchor" href="#concurrency-details-thenimploptions"><span><code>Concurrency::details::_ThenImplOptions</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ThenImplOptions</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_CancellationTokenState *_PTokenState;</span>
<span class="line">  Concurrency::scheduler_ptr _Scheduler;</span>
<span class="line">  Concurrency::details::_TaskCreationCallstack _CreationStack;</span>
<span class="line">  Concurrency::details::_TaskInliningMode _InliningMode;</span>
<span class="line">  Concurrency::task_continuation_context *_PContinuationContext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-reentrantppllock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-reentrantppllock"><span><code>Concurrency::details::_ReentrantPPLLock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ReentrantPPLLock</span>
<span class="line">{</span>
<span class="line">  Concurrency::critical_section _M_criticalSection;</span>
<span class="line">  int _M_recursionCount;</span>
<span class="line">  volatile int _M_owner;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-reentrantppllock-scoped-lock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-reentrantppllock-scoped-lock"><span><code>Concurrency::details::_ReentrantPPLLock::_Scoped_lock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ReentrantPPLLock::_Scoped_lock</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_ReentrantPPLLock *_M_lock;</span>
<span class="line">  void *_M_lockNode[5];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-tasktypefromparam-concurrency-task-completion-event-void" tabindex="-1"><a class="header-anchor" href="#concurrency-details-tasktypefromparam-concurrency-task-completion-event-void"><span><code>Concurrency::details::_TaskTypeFromParam&lt;Concurrency::task_completion_event&lt;void&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TaskTypeFromParam&lt;Concurrency::task_completion_event&lt;void&gt; &gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-isunwrappedasyncselector-concurrency-details-typeselectornoasync" tabindex="-1"><a class="header-anchor" href="#concurrency-details-isunwrappedasyncselector-concurrency-details-typeselectornoasync"><span><code>Concurrency::details::_IsUnwrappedAsyncSelector&lt;Concurrency::details::_TypeSelectorNoAsync&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_IsUnwrappedAsyncSelector&lt;Concurrency::details::_TypeSelectorNoAsync&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-context" tabindex="-1"><a class="header-anchor" href="#concurrency-details-context"><span><code>Concurrency::details::_Context</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Context</span>
<span class="line">{</span>
<span class="line">  Concurrency::Context *_M_pContext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-badargtype" tabindex="-1"><a class="header-anchor" href="#concurrency-details-badargtype"><span><code>Concurrency::details::_BadArgType</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_BadArgType</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-spincount" tabindex="-1"><a class="header-anchor" href="#concurrency-details-spincount"><span><code>Concurrency::details::_SpinCount</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_SpinCount</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-task-completion-event-unsigned-char" tabindex="-1"><a class="header-anchor" href="#concurrency-task-completion-event-unsigned-char"><span><code>Concurrency::task_completion_event&lt;unsigned char&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::task_completion_event&lt;unsigned char&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;Concurrency::details::_Task_completion_event_impl&lt;unsigned char&gt; &gt; _M_Impl;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-runallparam-unsigned-char" tabindex="-1"><a class="header-anchor" href="#concurrency-details-runallparam-unsigned-char"><span><code>Concurrency::details::_RunAllParam&lt;unsigned char&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_RunAllParam&lt;unsigned char&gt;</span>
<span class="line">{</span>
<span class="line">  Concurrency::task_completion_event&lt;unsigned char&gt; _M_completed;</span>
<span class="line">  std::atomic&lt;unsigned __int64&gt; _M_completeCount;</span>
<span class="line">  unsigned __int64 _M_numTasks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-threadpool-chore" tabindex="-1"><a class="header-anchor" href="#concurrency-details-threadpool-chore"><span><code>Concurrency::details::_Threadpool_chore</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Threadpool_chore</span>
<span class="line">{</span>
<span class="line">  void *_M_work;</span>
<span class="line">  void (__fastcall *_M_callback)(void *);</span>
<span class="line">  void *_M_data;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-defaultppltaskscheduler-ppltaskchore" tabindex="-1"><a class="header-anchor" href="#concurrency-details-defaultppltaskscheduler-ppltaskchore"><span><code>Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_Threadpool_chore _M_Chore;</span>
<span class="line">  void (__fastcall *_M_proc)(void *);</span>
<span class="line">  void *_M_param;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-defaultppltaskscheduler-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-defaultppltaskscheduler-vtbl"><span><code>Concurrency::details::_DefaultPPLTaskScheduler_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_DefaultPPLTaskScheduler_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *schedule)(Concurrency::scheduler_interface *this, void (__fastcall *)(void *), void *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-threadpool-task" tabindex="-1"><a class="header-anchor" href="#concurrency-details-threadpool-task"><span><code>Concurrency::details::_Threadpool_task</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Threadpool_task</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_Threadpool_task_vtbl *__vftable /*VFT*/;</span>
<span class="line">  Concurrency::details::_Threadpool_chore _M_chore;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-threadpool-task-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-threadpool-task-vtbl"><span><code>Concurrency::details::_Threadpool_task_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_Threadpool_task_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *_Invoke)(Concurrency::details::_Threadpool_task *this);</span>
<span class="line">  void (__fastcall *~_Threadpool_task)(Concurrency::details::_Threadpool_task *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-typeselectorasyncoperationortask" tabindex="-1"><a class="header-anchor" href="#concurrency-details-typeselectorasyncoperationortask"><span><code>Concurrency::details::_TypeSelectorAsyncOperationOrTask</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TypeSelectorAsyncOperationOrTask</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-typeselectorasynctask" tabindex="-1"><a class="header-anchor" href="#concurrency-details-typeselectorasynctask"><span><code>Concurrency::details::_TypeSelectorAsyncTask</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TypeSelectorAsyncTask : Concurrency::details::_TypeSelectorAsyncOperationOrTask</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-currentscheduler" tabindex="-1"><a class="header-anchor" href="#concurrency-details-currentscheduler"><span><code>Concurrency::details::_CurrentScheduler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_CurrentScheduler</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-task-ptr-unsigned-int64" tabindex="-1"><a class="header-anchor" href="#concurrency-details-task-ptr-unsigned-int64"><span><code>Concurrency::details::_Task_ptr&lt;unsigned __int64&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Task_ptr&lt;unsigned __int64&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-task-ptr-unsigned-char" tabindex="-1"><a class="header-anchor" href="#concurrency-details-task-ptr-unsigned-char"><span><code>Concurrency::details::_Task_ptr&lt;unsigned char&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Task_ptr&lt;unsigned char&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-resultholder-std-vector-bool" tabindex="-1"><a class="header-anchor" href="#concurrency-details-resultholder-std-vector-bool"><span><code>Concurrency::details::_ResultHolder&lt;std::vector&lt;bool&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ResultHolder&lt;std::vector&lt;bool&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;char&gt; _Result;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-reentrantlock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-reentrantlock"><span><code>Concurrency::details::_ReentrantLock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ReentrantLock</span>
<span class="line">{</span>
<span class="line">  int _M_recursionCount;</span>
<span class="line">  volatile int _M_owner;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-reentrantlock-scoped-lock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-reentrantlock-scoped-lock"><span><code>Concurrency::details::_ReentrantLock::_Scoped_lock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ReentrantLock::_Scoped_lock</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_ReentrantLock *_M_lock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-spinlock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-spinlock"><span><code>Concurrency::details::_SpinLock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_SpinLock</span>
<span class="line">{</span>
<span class="line">  volatile int *_M_flag;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-normalizevoidtounittype-void" tabindex="-1"><a class="header-anchor" href="#concurrency-details-normalizevoidtounittype-void"><span><code>Concurrency::details::_NormalizeVoidToUnitType&lt;void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_NormalizeVoidToUnitType&lt;void&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-typeselectornoasync" tabindex="-1"><a class="header-anchor" href="#concurrency-details-typeselectornoasync"><span><code>Concurrency::details::_TypeSelectorNoAsync</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TypeSelectorNoAsync</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-concrt-trace-info" tabindex="-1"><a class="header-anchor" href="#concurrency-details-concrt-trace-info"><span><code>Concurrency::details::_CONCRT_TRACE_INFO</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) Concurrency::details::_CONCRT_TRACE_INFO</span>
<span class="line">{</span>
<span class="line">  volatile unsigned int EnableFlags;</span>
<span class="line">  volatile unsigned __int8 EnableLevel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-timer" tabindex="-1"><a class="header-anchor" href="#concurrency-details-timer"><span><code>Concurrency::details::_Timer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) Concurrency::details::_Timer</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_Timer_vtbl *__vftable /*VFT*/;</span>
<span class="line">  void *_M_hTimer;</span>
<span class="line">  unsigned int _M_ms;</span>
<span class="line">  bool _M_fRepeating;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-timer-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-timer-vtbl"><span><code>Concurrency::details::_Timer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_Timer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_Timer)(Concurrency::details::_Timer *this);</span>
<span class="line">  void (__fastcall *_Fire)(Concurrency::details::_Timer *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-tasktypetraits-void-0" tabindex="-1"><a class="header-anchor" href="#concurrency-details-tasktypetraits-void-0"><span><code>Concurrency::details::_TaskTypeTraits&lt;void,0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TaskTypeTraits&lt;void,0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-structuredtaskcollection" tabindex="-1"><a class="header-anchor" href="#concurrency-details-structuredtaskcollection"><span><code>Concurrency::details::_StructuredTaskCollection</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_StructuredTaskCollection : Concurrency::details::_TaskCollectionBase</span>
<span class="line">{</span>
<span class="line">  void *_M_event[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokencallback-lambda-cef198b90b48c5c98bd59f7c1dcac0b2" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokencallback-lambda-cef198b90b48c5c98bd59f7c1dcac0b2"><span><code>Concurrency::details::_CancellationTokenCallback&lt;&lt;lambda_cef198b90b48c5c98bd59f7c1dcac0b2&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Concurrency::details::_CancellationTokenCallback&lt;&lt;lambda_cef198b90b48c5c98bd59f7c1dcac0b2&gt; &gt; : Concurrency::details::_CancellationTokenRegistration</span>
<span class="line">{</span>
<span class="line">  struct Concurrency::cancellation_token_source::create_linked_source::__l2::&lt;lambda_cef198b90b48c5c98bd59f7c1dcac0b2&gt; _M_function;</span>
<span class="line">  _BYTE gapC0[8];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-cancellationtokencallback-lambda-cef198b90b48c5c98bd59f7c1dcac0b2-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-details-cancellationtokencallback-lambda-cef198b90b48c5c98bd59f7c1dcac0b2-vtbl"><span><code>Concurrency::details::_CancellationTokenCallback&lt;&lt;lambda_cef198b90b48c5c98bd59f7c1dcac0b2&gt; &gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::details::_CancellationTokenCallback&lt;&lt;lambda_cef198b90b48c5c98bd59f7c1dcac0b2&gt; &gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~_RefCounter)(Concurrency::details::_RefCounter *this);</span>
<span class="line">  void (__fastcall *_Destroy)(Concurrency::details::_RefCounter *this);</span>
<span class="line">  void (__fastcall *_Exec)(Concurrency::details::_CancellationTokenRegistration *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-readerwriterlock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-readerwriterlock"><span><code>Concurrency::details::_ReaderWriterLock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ReaderWriterLock</span>
<span class="line">{</span>
<span class="line">  volatile int _M_state;</span>
<span class="line">  volatile int _M_numberOfWriters;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-readerwriterlock-scoped-lock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-readerwriterlock-scoped-lock"><span><code>Concurrency::details::_ReaderWriterLock::_Scoped_lock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ReaderWriterLock::_Scoped_lock</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_ReaderWriterLock *_M_lock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-readerwriterlock-scoped-lock-read" tabindex="-1"><a class="header-anchor" href="#concurrency-details-readerwriterlock-scoped-lock-read"><span><code>Concurrency::details::_ReaderWriterLock::_Scoped_lock_read</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ReaderWriterLock::_Scoped_lock_read</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_ReaderWriterLock *_M_lock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-badcontinuationparamtype" tabindex="-1"><a class="header-anchor" href="#concurrency-details-badcontinuationparamtype"><span><code>Concurrency::details::_BadContinuationParamType</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_BadContinuationParamType</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-defaulttaskhelper" tabindex="-1"><a class="header-anchor" href="#concurrency-details-defaulttaskhelper"><span><code>Concurrency::details::_DefaultTaskHelper</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_DefaultTaskHelper</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-nonreentrantppllock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-nonreentrantppllock"><span><code>Concurrency::details::_NonReentrantPPLLock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_NonReentrantPPLLock</span>
<span class="line">{</span>
<span class="line">  Concurrency::critical_section _M_criticalSection;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-nonreentrantppllock-scoped-lock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-nonreentrantppllock-scoped-lock"><span><code>Concurrency::details::_NonReentrantPPLLock::_Scoped_lock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_NonReentrantPPLLock::_Scoped_lock</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_NonReentrantPPLLock *_M_lock;</span>
<span class="line">  void *_M_lockNode[5];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-stackguard" tabindex="-1"><a class="header-anchor" href="#concurrency-details-stackguard"><span><code>Concurrency::details::_StackGuard</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_StackGuard</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 *_Depth;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-subatomic-impl-4" tabindex="-1"><a class="header-anchor" href="#concurrency-details-subatomic-impl-4"><span><code>Concurrency::details::_Subatomic_impl&lt;4&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Subatomic_impl&lt;4&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-reentrantblockinglock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-reentrantblockinglock"><span><code>Concurrency::details::_ReentrantBlockingLock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ReentrantBlockingLock</span>
<span class="line">{</span>
<span class="line">  void *_M_criticalSection[5];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-reentrantblockinglock-scoped-lock" tabindex="-1"><a class="header-anchor" href="#concurrency-details-reentrantblockinglock-scoped-lock"><span><code>Concurrency::details::_ReentrantBlockingLock::_Scoped_lock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ReentrantBlockingLock::_Scoped_lock</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_ReentrantBlockingLock *_M_lock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-subatomic-impl-8" tabindex="-1"><a class="header-anchor" href="#concurrency-details-subatomic-impl-8"><span><code>Concurrency::details::_Subatomic_impl&lt;8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Subatomic_impl&lt;8&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-typeselectorasyncoperationwithprogress" tabindex="-1"><a class="header-anchor" href="#concurrency-details-typeselectorasyncoperationwithprogress"><span><code>Concurrency::details::_TypeSelectorAsyncOperationWithProgress</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TypeSelectorAsyncOperationWithProgress</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-progressreporterctorargtype" tabindex="-1"><a class="header-anchor" href="#concurrency-details-progressreporterctorargtype"><span><code>Concurrency::details::_ProgressReporterCtorArgType</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_ProgressReporterCtorArgType</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-typeselectorasyncoperation" tabindex="-1"><a class="header-anchor" href="#concurrency-details-typeselectorasyncoperation"><span><code>Concurrency::details::_TypeSelectorAsyncOperation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TypeSelectorAsyncOperation : Concurrency::details::_TypeSelectorAsyncOperationOrTask</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-typeselectorasyncactionwithprogress" tabindex="-1"><a class="header-anchor" href="#concurrency-details-typeselectorasyncactionwithprogress"><span><code>Concurrency::details::_TypeSelectorAsyncActionWithProgress</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_TypeSelectorAsyncActionWithProgress</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-improper-scheduler-reference" tabindex="-1"><a class="header-anchor" href="#concurrency-improper-scheduler-reference"><span><code>Concurrency::improper_scheduler_reference</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::improper_scheduler_reference : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-improper-scheduler-reference-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-improper-scheduler-reference-vtbl"><span><code>Concurrency::improper_scheduler_reference_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::improper_scheduler_reference_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-auto-partitioner" tabindex="-1"><a class="header-anchor" href="#concurrency-auto-partitioner"><span><code>Concurrency::auto_partitioner</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::auto_partitioner</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-simple-partitioner" tabindex="-1"><a class="header-anchor" href="#concurrency-simple-partitioner"><span><code>Concurrency::simple_partitioner</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::simple_partitioner</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 _M_chunk_size;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-task-group" tabindex="-1"><a class="header-anchor" href="#concurrency-task-group"><span><code>Concurrency::task_group</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::task_group</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_TaskCollection _M_task_collection;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-currentscheduler" tabindex="-1"><a class="header-anchor" href="#concurrency-currentscheduler"><span><code>Concurrency::CurrentScheduler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::CurrentScheduler</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-binary-transform-impl-helper-std-random-access-iterator-tag-std-random-access-iterator-tag-std-random-access-iterator-tag" tabindex="-1"><a class="header-anchor" href="#concurrency-binary-transform-impl-helper-std-random-access-iterator-tag-std-random-access-iterator-tag-std-random-access-iterator-tag"><span><code>Concurrency::_Binary_transform_impl_helper&lt;std::random_access_iterator_tag,std::random_access_iterator_tag,std::random_access_iterator_tag&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::_Binary_transform_impl_helper&lt;std::random_access_iterator_tag,std::random_access_iterator_tag,std::random_access_iterator_tag&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-init-func-transformer-void" tabindex="-1"><a class="header-anchor" href="#concurrency-init-func-transformer-void"><span><code>Concurrency::_Init_func_transformer&lt;void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::_Init_func_transformer&lt;void&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-continuation-func-transformer-void-void" tabindex="-1"><a class="header-anchor" href="#concurrency-continuation-func-transformer-void-void"><span><code>Concurrency::_Continuation_func_transformer&lt;void,void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::_Continuation_func_transformer&lt;void,void&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-bad-target" tabindex="-1"><a class="header-anchor" href="#concurrency-bad-target"><span><code>Concurrency::bad_target</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::bad_target : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-bad-target-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-bad-target-vtbl"><span><code>Concurrency::bad_target_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::bad_target_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-oversubscribe-operation" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-oversubscribe-operation"><span><code>Concurrency::invalid_oversubscribe_operation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::invalid_oversubscribe_operation : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-oversubscribe-operation-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-oversubscribe-operation-vtbl"><span><code>Concurrency::invalid_oversubscribe_operation_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::invalid_oversubscribe_operation_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-task-unsigned-int64" tabindex="-1"><a class="header-anchor" href="#concurrency-task-unsigned-int64"><span><code>Concurrency::task&lt;unsigned __int64&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::task&lt;unsigned __int64&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;Concurrency::details::_Task_impl&lt;unsigned __int64&gt; &gt; _M_Impl;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-unsupported-os" tabindex="-1"><a class="header-anchor" href="#concurrency-unsupported-os"><span><code>Concurrency::unsupported_os</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::unsupported_os : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-unsupported-os-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-unsupported-os-vtbl"><span><code>Concurrency::unsupported_os_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::unsupported_os_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-scheduler-not-attached" tabindex="-1"><a class="header-anchor" href="#concurrency-scheduler-not-attached"><span><code>Concurrency::scheduler_not_attached</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::scheduler_not_attached : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-scheduler-not-attached-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-scheduler-not-attached-vtbl"><span><code>Concurrency::scheduler_not_attached_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::scheduler_not_attached_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-link-target" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-link-target"><span><code>Concurrency::invalid_link_target</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::invalid_link_target : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-link-target-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-link-target-vtbl"><span><code>Concurrency::invalid_link_target_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::invalid_link_target_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-cancellation-token-registration" tabindex="-1"><a class="header-anchor" href="#concurrency-cancellation-token-registration"><span><code>Concurrency::cancellation_token_registration</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::cancellation_token_registration</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_CancellationTokenRegistration *_M_pRegistration;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-scheduler-policy-thread-specification" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-scheduler-policy-thread-specification"><span><code>Concurrency::invalid_scheduler_policy_thread_specification</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::invalid_scheduler_policy_thread_specification : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-scheduler-policy-thread-specification-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-scheduler-policy-thread-specification-vtbl"><span><code>Concurrency::invalid_scheduler_policy_thread_specification_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::invalid_scheduler_policy_thread_specification_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-cancellation-token-source" tabindex="-1"><a class="header-anchor" href="#concurrency-cancellation-token-source"><span><code>Concurrency::cancellation_token_source</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::cancellation_token_source</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_CancellationTokenState *_M_Impl;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-structured-task-group" tabindex="-1"><a class="header-anchor" href="#concurrency-structured-task-group"><span><code>Concurrency::structured_task_group</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::structured_task_group</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_StructuredTaskCollection _M_task_collection;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-multiple-scheduling" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-multiple-scheduling"><span><code>Concurrency::invalid_multiple_scheduling</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::invalid_multiple_scheduling : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-multiple-scheduling-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-multiple-scheduling-vtbl"><span><code>Concurrency::invalid_multiple_scheduling_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::invalid_multiple_scheduling_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-static-partitioner" tabindex="-1"><a class="header-anchor" href="#concurrency-static-partitioner"><span><code>Concurrency::static_partitioner</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::static_partitioner</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-task-unsigned-char" tabindex="-1"><a class="header-anchor" href="#concurrency-task-unsigned-char"><span><code>Concurrency::task&lt;unsigned char&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::task&lt;unsigned char&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;Concurrency::details::_Task_impl&lt;unsigned char&gt; &gt; _M_Impl;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-task-void" tabindex="-1"><a class="header-anchor" href="#concurrency-task-void"><span><code>Concurrency::task&lt;void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::task&lt;void&gt;</span>
<span class="line">{</span>
<span class="line">  Concurrency::task&lt;unsigned char&gt; _M_unitTask;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-task-completion-event-void" tabindex="-1"><a class="header-anchor" href="#concurrency-task-completion-event-void"><span><code>Concurrency::task_completion_event&lt;void&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::task_completion_event&lt;void&gt;</span>
<span class="line">{</span>
<span class="line">  Concurrency::task_completion_event&lt;unsigned char&gt; _M_unitEvent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-operation-timed-out" tabindex="-1"><a class="header-anchor" href="#concurrency-operation-timed-out"><span><code>Concurrency::operation_timed_out</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::operation_timed_out : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-operation-timed-out-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-operation-timed-out-vtbl"><span><code>Concurrency::operation_timed_out_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::operation_timed_out_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-scheduler-policy-value" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-scheduler-policy-value"><span><code>Concurrency::invalid_scheduler_policy_value</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::invalid_scheduler_policy_value : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-scheduler-policy-value-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-scheduler-policy-value-vtbl"><span><code>Concurrency::invalid_scheduler_policy_value_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::invalid_scheduler_policy_value_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-task-canceled" tabindex="-1"><a class="header-anchor" href="#concurrency-task-canceled"><span><code>Concurrency::task_canceled</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::task_canceled : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-task-canceled-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-task-canceled-vtbl"><span><code>Concurrency::task_canceled_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::task_canceled_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-context-self-unblock" tabindex="-1"><a class="header-anchor" href="#concurrency-context-self-unblock"><span><code>Concurrency::context_self_unblock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::context_self_unblock : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-context-self-unblock-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-context-self-unblock-vtbl"><span><code>Concurrency::context_self_unblock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::context_self_unblock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-nested-scheduler-missing-detach" tabindex="-1"><a class="header-anchor" href="#concurrency-nested-scheduler-missing-detach"><span><code>Concurrency::nested_scheduler_missing_detach</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::nested_scheduler_missing_detach : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-nested-scheduler-missing-detach-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-nested-scheduler-missing-detach-vtbl"><span><code>Concurrency::nested_scheduler_missing_detach_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::nested_scheduler_missing_detach_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-missing-wait" tabindex="-1"><a class="header-anchor" href="#concurrency-missing-wait"><span><code>Concurrency::missing_wait</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::missing_wait : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-missing-wait-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-missing-wait-vtbl"><span><code>Concurrency::missing_wait_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::missing_wait_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-task-continuation-context-tag" tabindex="-1"><a class="header-anchor" href="#concurrency-task-continuation-context-tag"><span><code>Concurrency::task_continuation_context::_Tag</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::task_continuation_context::_Tag</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-scheduler-policy-key" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-scheduler-policy-key"><span><code>Concurrency::invalid_scheduler_policy_key</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::invalid_scheduler_policy_key : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-scheduler-policy-key-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-scheduler-policy-key-vtbl"><span><code>Concurrency::invalid_scheduler_policy_key_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::invalid_scheduler_policy_key_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-unary-transform-impl-helper-std-random-access-iterator-tag-std-random-access-iterator-tag" tabindex="-1"><a class="header-anchor" href="#concurrency-unary-transform-impl-helper-std-random-access-iterator-tag-std-random-access-iterator-tag"><span><code>Concurrency::_Unary_transform_impl_helper&lt;std::random_access_iterator_tag,std::random_access_iterator_tag&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::_Unary_transform_impl_helper&lt;std::random_access_iterator_tag,std::random_access_iterator_tag&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-improper-lock" tabindex="-1"><a class="header-anchor" href="#concurrency-improper-lock"><span><code>Concurrency::improper_lock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::improper_lock : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-improper-lock-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-improper-lock-vtbl"><span><code>Concurrency::improper_lock_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::improper_lock_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-default-scheduler-exists" tabindex="-1"><a class="header-anchor" href="#concurrency-default-scheduler-exists"><span><code>Concurrency::default_scheduler_exists</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::default_scheduler_exists : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-default-scheduler-exists-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-default-scheduler-exists-vtbl"><span><code>Concurrency::default_scheduler_exists_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::default_scheduler_exists_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-improper-scheduler-attach" tabindex="-1"><a class="header-anchor" href="#concurrency-improper-scheduler-attach"><span><code>Concurrency::improper_scheduler_attach</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::improper_scheduler_attach : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-improper-scheduler-attach-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-improper-scheduler-attach-vtbl"><span><code>Concurrency::improper_scheduler_attach_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::improper_scheduler_attach_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-context-unblock-unbalanced" tabindex="-1"><a class="header-anchor" href="#concurrency-context-unblock-unbalanced"><span><code>Concurrency::context_unblock_unbalanced</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::context_unblock_unbalanced : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-context-unblock-unbalanced-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-context-unblock-unbalanced-vtbl"><span><code>Concurrency::context_unblock_unbalanced_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::context_unblock_unbalanced_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-improper-scheduler-detach" tabindex="-1"><a class="header-anchor" href="#concurrency-improper-scheduler-detach"><span><code>Concurrency::improper_scheduler_detach</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::improper_scheduler_detach : std::exception</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-improper-scheduler-detach-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-improper-scheduler-detach-vtbl"><span><code>Concurrency::improper_scheduler_detach_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::improper_scheduler_detach_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-reader-writer-lock" tabindex="-1"><a class="header-anchor" href="#concurrency-reader-writer-lock"><span><code>Concurrency::reader_writer_lock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) Concurrency::reader_writer_lock</span>
<span class="line">{</span>
<span class="line">  void *_M_activeWriter[5];</span>
<span class="line">  void *_M_pReaderHead;</span>
<span class="line">  void *_M_pWriterHead;</span>
<span class="line">  void *_M_pWriterTail;</span>
<span class="line">  volatile int _M_lockState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-reader-writer-lock-scoped-lock" tabindex="-1"><a class="header-anchor" href="#concurrency-reader-writer-lock-scoped-lock"><span><code>Concurrency::reader_writer_lock::scoped_lock</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::reader_writer_lock::scoped_lock</span>
<span class="line">{</span>
<span class="line">  Concurrency::reader_writer_lock *_M_reader_writer_lock;</span>
<span class="line">  void *_M_writerNode[5];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-reader-writer-lock-scoped-lock-read" tabindex="-1"><a class="header-anchor" href="#concurrency-reader-writer-lock-scoped-lock-read"><span><code>Concurrency::reader_writer_lock::scoped_lock_read</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::reader_writer_lock::scoped_lock_read</span>
<span class="line">{</span>
<span class="line">  Concurrency::reader_writer_lock *_M_reader_writer_lock;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-invalid-operation-vtbl" tabindex="-1"><a class="header-anchor" href="#concurrency-invalid-operation-vtbl"><span><code>Concurrency::invalid_operation_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Concurrency::invalid_operation_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~exception)(std::exception *this);</span>
<span class="line">  const char *(__fastcall *what)(std::exception *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-affinity-partitioner" tabindex="-1"><a class="header-anchor" href="#concurrency-affinity-partitioner"><span><code>Concurrency::affinity_partitioner</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::affinity_partitioner</span>
<span class="line">{</span>
<span class="line">  unsigned int _M_num_chunks;</span>
<span class="line">  Concurrency::location *_M_pChunk_locations;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-task-impl-unsigned-char-cancelandruncontinuations-l34-lambda-763529b0c7473cbc215a52d189ac9b18" tabindex="-1"><a class="header-anchor" href="#concurrency-details-task-impl-unsigned-char-cancelandruncontinuations-l34-lambda-763529b0c7473cbc215a52d189ac9b18"><span><code>Concurrency::details::_Task_impl&lt;unsigned char&gt;::_CancelAndRunContinuations::__l34::&lt;lambda_763529b0c7473cbc215a52d189ac9b18&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Task_impl&lt;unsigned char&gt;::_CancelAndRunContinuations::__l34::&lt;lambda_763529b0c7473cbc215a52d189ac9b18&gt;</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_Task_impl&lt;unsigned char&gt; *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-task-impl-base-schedulecontinuationtask-l5-lambda-713ee8bbd6b08550d59c52695cab5ce3" tabindex="-1"><a class="header-anchor" href="#concurrency-details-task-impl-base-schedulecontinuationtask-l5-lambda-713ee8bbd6b08550d59c52695cab5ce3"><span><code>Concurrency::details::_Task_impl_base::_ScheduleContinuationTask::__l5::&lt;lambda_713ee8bbd6b08550d59c52695cab5ce3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_Task_impl_base::_ScheduleContinuationTask::__l5::&lt;lambda_713ee8bbd6b08550d59c52695cab5ce3&gt;</span>
<span class="line">{</span>
<span class="line">  Concurrency::details::_ContinuationTaskHandleBase *_PTaskHandle;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="concurrency-details-getstaticambientschedulerref-l2-lambda-0e64988457575224279dcb6d61e61bdd" tabindex="-1"><a class="header-anchor" href="#concurrency-details-getstaticambientschedulerref-l2-lambda-0e64988457575224279dcb6d61e61bdd"><span><code>Concurrency::details::_GetStaticAmbientSchedulerRef::__l2::&lt;lambda_0e64988457575224279dcb6d61e61bdd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Concurrency::details::_GetStaticAmbientSchedulerRef::__l2::&lt;lambda_0e64988457575224279dcb6d61e61bdd&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cm-power-data-s" tabindex="-1"><a class="header-anchor" href="#cm-power-data-s"><span><code>CM_Power_Data_s</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct CM_Power_Data_s</span>
<span class="line">{</span>
<span class="line">  unsigned int PD_Size;</span>
<span class="line">  _DEVICE_POWER_STATE PD_MostRecentPowerState;</span>
<span class="line">  unsigned int PD_Capabilities;</span>
<span class="line">  unsigned int PD_D1Latency;</span>
<span class="line">  unsigned int PD_D2Latency;</span>
<span class="line">  unsigned int PD_D3Latency;</span>
<span class="line">  _DEVICE_POWER_STATE PD_PowerStateMapping[7];</span>
<span class="line">  _SYSTEM_POWER_STATE PD_DeepestSystemWake;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash64-0" tabindex="-1"><a class="header-anchor" href="#compiletime-hash64-0"><span><code>CompileTime::Hash64&lt;0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash64&lt;0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compiletime-hash-0" tabindex="-1"><a class="header-anchor" href="#compiletime-hash-0"><span><code>CompileTime::Hash&lt;0&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompileTime::Hash&lt;0&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="copyfile2-message-unnamed-type-info-unnamed-type-chunkstarted" tabindex="-1"><a class="header-anchor" href="#copyfile2-message-unnamed-type-info-unnamed-type-chunkstarted"><span><code>COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt;::&lt;unnamed_type_ChunkStarted&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt;::&lt;unnamed_type_ChunkStarted&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int dwStreamNumber;</span>
<span class="line">  unsigned int dwReserved;</span>
<span class="line">  void *hSourceFile;</span>
<span class="line">  void *hDestinationFile;</span>
<span class="line">  _ULARGE_INTEGER uliChunkNumber;</span>
<span class="line">  _ULARGE_INTEGER uliChunkSize;</span>
<span class="line">  _ULARGE_INTEGER uliStreamSize;</span>
<span class="line">  _ULARGE_INTEGER uliTotalFileSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="copyfile2-message-unnamed-type-info-unnamed-type-chunkfinished" tabindex="-1"><a class="header-anchor" href="#copyfile2-message-unnamed-type-info-unnamed-type-chunkfinished"><span><code>COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt;::&lt;unnamed_type_ChunkFinished&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt;::&lt;unnamed_type_ChunkFinished&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int dwStreamNumber;</span>
<span class="line">  unsigned int dwFlags;</span>
<span class="line">  void *hSourceFile;</span>
<span class="line">  void *hDestinationFile;</span>
<span class="line">  _ULARGE_INTEGER uliChunkNumber;</span>
<span class="line">  _ULARGE_INTEGER uliChunkSize;</span>
<span class="line">  _ULARGE_INTEGER uliStreamSize;</span>
<span class="line">  _ULARGE_INTEGER uliStreamBytesTransferred;</span>
<span class="line">  _ULARGE_INTEGER uliTotalFileSize;</span>
<span class="line">  _ULARGE_INTEGER uliTotalBytesTransferred;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="copyfile2-message-unnamed-type-info-unnamed-type-streamstarted" tabindex="-1"><a class="header-anchor" href="#copyfile2-message-unnamed-type-info-unnamed-type-streamstarted"><span><code>COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt;::&lt;unnamed_type_StreamStarted&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt;::&lt;unnamed_type_StreamStarted&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int dwStreamNumber;</span>
<span class="line">  unsigned int dwReserved;</span>
<span class="line">  void *hSourceFile;</span>
<span class="line">  void *hDestinationFile;</span>
<span class="line">  _ULARGE_INTEGER uliStreamSize;</span>
<span class="line">  _ULARGE_INTEGER uliTotalFileSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="copyfile2-message-unnamed-type-info-unnamed-type-streamfinished" tabindex="-1"><a class="header-anchor" href="#copyfile2-message-unnamed-type-info-unnamed-type-streamfinished"><span><code>COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt;::&lt;unnamed_type_StreamFinished&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt;::&lt;unnamed_type_StreamFinished&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int dwStreamNumber;</span>
<span class="line">  unsigned int dwReserved;</span>
<span class="line">  void *hSourceFile;</span>
<span class="line">  void *hDestinationFile;</span>
<span class="line">  _ULARGE_INTEGER uliStreamSize;</span>
<span class="line">  _ULARGE_INTEGER uliStreamBytesTransferred;</span>
<span class="line">  _ULARGE_INTEGER uliTotalFileSize;</span>
<span class="line">  _ULARGE_INTEGER uliTotalBytesTransferred;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="copyfile2-message-unnamed-type-info-unnamed-type-pollcontinue" tabindex="-1"><a class="header-anchor" href="#copyfile2-message-unnamed-type-info-unnamed-type-pollcontinue"><span><code>COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt;::&lt;unnamed_type_PollContinue&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt;::&lt;unnamed_type_PollContinue&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int dwReserved;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="copyfile2-message-unnamed-type-info-unnamed-type-error" tabindex="-1"><a class="header-anchor" href="#copyfile2-message-unnamed-type-info-unnamed-type-error"><span><code>COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt;::&lt;unnamed_type_Error&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt;::&lt;unnamed_type_Error&gt;</span>
<span class="line">{</span>
<span class="line">  _COPYFILE2_COPY_PHASE CopyPhase;</span>
<span class="line">  unsigned int dwStreamNumber;</span>
<span class="line">  HRESULT hrFailure;</span>
<span class="line">  unsigned int dwReserved;</span>
<span class="line">  _ULARGE_INTEGER uliChunkNumber;</span>
<span class="line">  _ULARGE_INTEGER uliStreamSize;</span>
<span class="line">  _ULARGE_INTEGER uliStreamBytesTransferred;</span>
<span class="line">  _ULARGE_INTEGER uliTotalFileSize;</span>
<span class="line">  _ULARGE_INTEGER uliTotalBytesTransferred;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="copyfile2-message" tabindex="-1"><a class="header-anchor" href="#copyfile2-message"><span><code>COPYFILE2_MESSAGE</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct COPYFILE2_MESSAGE</span>
<span class="line">{</span>
<span class="line">  _COPYFILE2_MESSAGE_TYPE Type;</span>
<span class="line">  unsigned int dwPadding;</span>
<span class="line">  COPYFILE2_MESSAGE::&lt;unnamed_type_Info&gt; Info;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="copyfile2-extended-parameters" tabindex="-1"><a class="header-anchor" href="#copyfile2-extended-parameters"><span><code>COPYFILE2_EXTENDED_PARAMETERS</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct COPYFILE2_EXTENDED_PARAMETERS</span>
<span class="line">{</span>
<span class="line">  unsigned int dwSize;</span>
<span class="line">  unsigned int dwCopyFlags;</span>
<span class="line">  int *pfCancel;</span>
<span class="line">  _COPYFILE2_MESSAGE_ACTION (__fastcall *pProgressRoutine)(const COPYFILE2_MESSAGE *, void *);</span>
<span class="line">  void *pvCallbackContext;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="confirmsafety" tabindex="-1"><a class="header-anchor" href="#confirmsafety"><span><code>CONFIRMSAFETY</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __declspec(align(8)) CONFIRMSAFETY</span>
<span class="line">{</span>
<span class="line">  _GUID clsid;</span>
<span class="line">  IUnknown *pUnk;</span>
<span class="line">  unsigned int dwFlags;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-texturesetlayerimagemiplist" tabindex="-1"><a class="header-anchor" href="#cg-texturesetlayerimagemiplist"><span><code>cg::TextureSetLayerImageMipList</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TextureSetLayerImageMipList</span>
<span class="line">{</span>
<span class="line">  cg::TextureSetLayerType mLayerType;</span>
<span class="line">  std::vector&lt;cg::ImageBuffer&gt; mImageList;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-texturesetimagecontainer" tabindex="-1"><a class="header-anchor" href="#cg-texturesetimagecontainer"><span><code>cg::TextureSetImageContainer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TextureSetImageContainer : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;cg::TextureSetLayerImageMipList&gt; mLayerImageList;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-texturesetdefinition" tabindex="-1"><a class="header-anchor" href="#cg-texturesetdefinition"><span><code>cg::TextureSetDefinition</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TextureSetDefinition</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;cg::TextureSetLayerDefinition&gt; mLayerInfoList;</span>
<span class="line">  bool mIsMissingTexture;</span>
<span class="line">  std::shared_ptr&lt;cg::TextureSetImageContainer&gt; mTextureSetImageData;</span>
<span class="line">  ResourceLocationPair mResourceLocationPair;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-cachelocation" tabindex="-1"><a class="header-anchor" href="#cg-cachelocation"><span><code>cg::CacheLocation</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) cg::CacheLocation</span>
<span class="line">{</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mPath;</span>
<span class="line">  _BYTE mOrigin[1];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-filesystem" tabindex="-1"><a class="header-anchor" href="#core-filesystem"><span><code>Core::FileSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::FileSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-filesystem-basicfiledata" tabindex="-1"><a class="header-anchor" href="#core-filesystem-basicfiledata"><span><code>Core::FileSystem::BasicFileData</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::FileSystem::BasicFileData</span>
<span class="line">{</span>
<span class="line">  Core::PathBuffer&lt;std::string &gt; mPath;</span>
<span class="line">  unsigned __int64 mSize;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-filesystem-filetransferprogress" tabindex="-1"><a class="header-anchor" href="#core-filesystem-filetransferprogress"><span><code>Core::FileSystem::FileTransferProgress</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::FileSystem::FileTransferProgress</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 mStartPosition;</span>
<span class="line">  unsigned __int64 mBytesWritten;</span>
<span class="line">  unsigned __int64 mBytesRemaining;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-attachbehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-attachbehavior"><span><code>CameraBehavior&lt;AttachBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;AttachBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-attachbehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-attachbehavior-vtbl"><span><code>CameraBehavior&lt;AttachBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;AttachBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-avoidancebehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-avoidancebehavior"><span><code>CameraBehavior&lt;AvoidanceBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;AvoidanceBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-avoidancebehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-avoidancebehavior-vtbl"><span><code>CameraBehavior&lt;AvoidanceBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;AvoidanceBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="criticallydampedspring-float" tabindex="-1"><a class="header-anchor" href="#criticallydampedspring-float"><span><code>CriticallyDampedSpring&lt;float&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CriticallyDampedSpring&lt;float&gt;</span>
<span class="line">{</span>
<span class="line">  float mSpring;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-orbitbehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-orbitbehavior"><span><code>CameraBehavior&lt;OrbitBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;OrbitBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-orbitbehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-orbitbehavior-vtbl"><span><code>CameraBehavior&lt;OrbitBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;OrbitBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-bobbehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-bobbehavior"><span><code>CameraBehavior&lt;BobBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;BobBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-bobbehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-bobbehavior-vtbl"><span><code>CameraBehavior&lt;BobBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;BobBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-firstpersonlookbehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-firstpersonlookbehavior"><span><code>CameraBehavior&lt;FirstPersonLookBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;FirstPersonLookBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-firstpersonlookbehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-firstpersonlookbehavior-vtbl"><span><code>CameraBehavior&lt;FirstPersonLookBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;FirstPersonLookBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-riderotationbehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-riderotationbehavior"><span><code>CameraBehavior&lt;RideRotationBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;RideRotationBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-riderotationbehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-riderotationbehavior-vtbl"><span><code>CameraBehavior&lt;RideRotationBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;RideRotationBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-flybehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-flybehavior"><span><code>CameraBehavior&lt;FlyBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;FlyBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-flybehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-flybehavior-vtbl"><span><code>CameraBehavior&lt;FlyBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;FlyBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-liquidoffsetbehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-liquidoffsetbehavior"><span><code>CameraBehavior&lt;LiquidOffsetBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;LiquidOffsetBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-liquidoffsetbehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-liquidoffsetbehavior-vtbl"><span><code>CameraBehavior&lt;LiquidOffsetBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;LiquidOffsetBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-lookatbehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-lookatbehavior"><span><code>CameraBehavior&lt;LookAtBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;LookAtBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-lookatbehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-lookatbehavior-vtbl"><span><code>CameraBehavior&lt;LookAtBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;LookAtBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-portalbehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-portalbehavior"><span><code>CameraBehavior&lt;PortalBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;PortalBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-portalbehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-portalbehavior-vtbl"><span><code>CameraBehavior&lt;PortalBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;PortalBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-sleepbehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-sleepbehavior"><span><code>CameraBehavior&lt;SleepBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;SleepBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-sleepbehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-sleepbehavior-vtbl"><span><code>CameraBehavior&lt;SleepBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;SleepBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-sneakbehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-sneakbehavior"><span><code>CameraBehavior&lt;SneakBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;SneakBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-sneakbehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-sneakbehavior-vtbl"><span><code>CameraBehavior&lt;SneakBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;SneakBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-pathcontainerconversions-core-stackstring-char-1024" tabindex="-1"><a class="header-anchor" href="#core-pathcontainerconversions-core-stackstring-char-1024"><span><code>Core::PathContainerConversions&lt;Core::StackString&lt;char,1024&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::PathContainerConversions&lt;Core::StackString&lt;char,1024&gt; &gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-splinebehavior" tabindex="-1"><a class="header-anchor" href="#camerabehavior-splinebehavior"><span><code>CameraBehavior&lt;SplineBehavior&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CameraBehavior&lt;SplineBehavior&gt; : ICameraBehavior</span>
<span class="line">{</span>
<span class="line">  ICameraBehavior::UpdateOrder mUpdateOrder;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="camerabehavior-splinebehavior-vtbl" tabindex="-1"><a class="header-anchor" href="#camerabehavior-splinebehavior-vtbl"><span><code>CameraBehavior&lt;SplineBehavior&gt;_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CameraBehavior&lt;SplineBehavior&gt;_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);</span>
<span class="line">  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);</span>
<span class="line">  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);</span>
<span class="line">  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);</span>
<span class="line">  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);</span>
<span class="line">  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);</span>
<span class="line">  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);</span>
<span class="line">  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="criticallydampedspring-vec3" tabindex="-1"><a class="header-anchor" href="#criticallydampedspring-vec3"><span><code>CriticallyDampedSpring&lt;Vec3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CriticallyDampedSpring&lt;Vec3&gt;</span>
<span class="line">{</span>
<span class="line">  float mSpring;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="catmullromspline" tabindex="-1"><a class="header-anchor" href="#catmullromspline"><span><code>CatmullRomSpline</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CatmullRomSpline</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;Vec3&gt; mControlPoints;</span>
<span class="line">  std::vector&lt;float&gt; mAccumulatedSegmentLengths;</span>
<span class="line">  bool mLooped;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cameraloader-parsecameras-l2-lambda-39f3f306e576c66b261bbdd8909b2247" tabindex="-1"><a class="header-anchor" href="#cameraloader-parsecameras-l2-lambda-39f3f306e576c66b261bbdd8909b2247"><span><code>CameraLoader::parseCameras::__l2::&lt;lambda_39f3f306e576c66b261bbdd8909b2247&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CameraLoader::parseCameras::__l2::&lt;lambda_39f3f306e576c66b261bbdd8909b2247&gt;</span>
<span class="line">{</span>
<span class="line">  CameraLoader *const __this;</span>
<span class="line">  std::unordered_map&lt;HashedString,CameraDirector&gt; *loadedCameras;</span>
<span class="line">  std::unordered_map&lt;HashedString,CameraDirector&gt; *newCameraMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cameraloader-parseblends-l2-lambda-c6a4c0e67c1895cce63e1cdd7ae7d3c3" tabindex="-1"><a class="header-anchor" href="#cameraloader-parseblends-l2-lambda-c6a4c0e67c1895cce63e1cdd7ae7d3c3"><span><code>CameraLoader::parseBlends::__l2::&lt;lambda_c6a4c0e67c1895cce63e1cdd7ae7d3c3&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CameraLoader::parseBlends::__l2::&lt;lambda_c6a4c0e67c1895cce63e1cdd7ae7d3c3&gt;</span>
<span class="line">{</span>
<span class="line">  CameraLoader *const __this;</span>
<span class="line">  std::unordered_map&lt;HashedString,CameraDirector&gt; *loadedCameras;</span>
<span class="line">  std::unordered_map&lt;std::pair&lt;HashedString,HashedString&gt;,CameraBlendSettings,CameraPairHasher,std::equal_to&lt;std::pair&lt;HashedString,HashedString&gt; &gt;,std::allocator&lt;std::pair&lt;std::pair&lt;HashedString,HashedString&gt; const ,CameraBlendSettings&gt; &gt; &gt; *customBlendMap;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandcontext" tabindex="-1"><a class="header-anchor" href="#commandcontext"><span><code>CommandContext</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CommandContext</span>
<span class="line">{</span>
<span class="line">  std::string mCommand;</span>
<span class="line">  std::unique_ptr&lt;CommandOrigin&gt; mOrigin;</span>
<span class="line">  int mVersion;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcommand" tabindex="-1"><a class="header-anchor" href="#clientcommand"><span><code>ClientCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientCommand : Command</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#clientcommand-vtbl"><span><code>ClientCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcommandoutputsender" tabindex="-1"><a class="header-anchor" href="#clientcommandoutputsender"><span><code>ClientCommandOutputSender</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientCommandOutputSender : CommandOutputSender</span>
<span class="line">{</span>
<span class="line">  GuiData *mMachineGuiData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcommandoutputsender-vtbl" tabindex="-1"><a class="header-anchor" href="#clientcommandoutputsender-vtbl"><span><code>ClientCommandOutputSender_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientCommandOutputSender_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~CommandOutputSender)(CommandOutputSender *this);</span>
<span class="line">  void (__fastcall *send)(CommandOutputSender *this, const CommandOrigin *, const CommandOutput *);</span>
<span class="line">  void (__fastcall *registerOutputCallback)(CommandOutputSender *this, const std::function&lt;void __cdecl(AutomationCmdOutput &amp;)&gt; *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandselector-actor" tabindex="-1"><a class="header-anchor" href="#commandselector-actor"><span><code>CommandSelector&lt;Actor&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandSelector&lt;Actor&gt; : CommandSelectorBase</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandregistry-semanticinfo" tabindex="-1"><a class="header-anchor" href="#commandregistry-semanticinfo"><span><code>CommandRegistry::SemanticInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandRegistry::SemanticInfo</span>
<span class="line">{</span>
<span class="line">  bool mIsValid;</span>
<span class="line">  std::vector&lt;CommandRegistry::Symbol&gt; mConstrainedParams;</span>
<span class="line">  std::string mSoftEnumText;</span>
<span class="line">  std::string mSoftEnumEscapeCharExceptions;</span>
<span class="line">  std::set&lt;CommandRegistry::Symbol&gt; mAlreadyCompletedSymbols;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commands-postfix" tabindex="-1"><a class="header-anchor" href="#commands-postfix"><span><code>commands::Postfix</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj commands::Postfix</span>
<span class="line">{</span>
<span class="line">  const char *postfix;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commands-softenum" tabindex="-1"><a class="header-anchor" href="#commands-softenum"><span><code>commands::SoftEnum</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj commands::SoftEnum</span>
<span class="line">{</span>
<span class="line">  const char *name;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="closewebsocketcommand" tabindex="-1"><a class="header-anchor" href="#closewebsocketcommand"><span><code>CloseWebSocketCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CloseWebSocketCommand : Command</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="closewebsocketcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#closewebsocketcommand-vtbl"><span><code>CloseWebSocketCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CloseWebSocketCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="closechatcommand" tabindex="-1"><a class="header-anchor" href="#closechatcommand"><span><code>CloseChatCommand</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CloseChatCommand : Command</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="closechatcommand-vtbl" tabindex="-1"><a class="header-anchor" href="#closechatcommand-vtbl"><span><code>CloseChatCommand_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CloseChatCommand_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~Command)(Command *this);</span>
<span class="line">  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcommandoutputsender-send-l20-lambda-0b751b1533f17cdbef71e6a6deb7f9bd" tabindex="-1"><a class="header-anchor" href="#clientcommandoutputsender-send-l20-lambda-0b751b1533f17cdbef71e6a6deb7f9bd"><span><code>ClientCommandOutputSender::send::__l20::&lt;lambda_0b751b1533f17cdbef71e6a6deb7f9bd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientCommandOutputSender::send::__l20::&lt;lambda_0b751b1533f17cdbef71e6a6deb7f9bd&gt;</span>
<span class="line">{</span>
<span class="line">  const CommandOutputMessage *message;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientskininfodata-vtbl" tabindex="-1"><a class="header-anchor" href="#clientskininfodata-vtbl"><span><code>ClientSkinInfoData_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ClientSkinInfoData_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~SkinInfoData)(SkinInfoData *this);</span>
<span class="line">  void (__fastcall *updateSkin)(SkinInfoData *this, const SerializedSkin *, const mce::Image *, const mce::Image *);</span>
<span class="line">  void (__fastcall *updateSkinNe)(SkinInfoData *this, const SerializedSkin *, const mce::Image *, const mce::Image *, const mce::Image *);</span>
<span class="line">  bool (__fastcall *hasValidTexture)(SkinInfoData *this);</span>
<span class="line">  bool (__fastcall *validateAndResizeSkinData)(SkinInfoData *this, mce::Image *, bool);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientskinsystem" tabindex="-1"><a class="header-anchor" href="#clientskinsystem"><span><code>ClientSkinSystem</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientSkinSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientparticleterminationcomponent" tabindex="-1"><a class="header-anchor" href="#clientparticleterminationcomponent"><span><code>ClientParticleTerminationComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientParticleTerminationComponent : IEntityComponent</span>
<span class="line">{</span>
<span class="line">  HashedString mAnimationControllerName;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="callbacktokencontext-std-function-void-cdecl-void" tabindex="-1"><a class="header-anchor" href="#callbacktokencontext-std-function-void-cdecl-void"><span><code>CallbackTokenContext&lt;std::function&lt;void __cdecl(void)&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CallbackTokenContext&lt;std::function&lt;void __cdecl(void)&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::function&lt;void __cdecl(void)&gt;&gt; mCallbacks;</span>
<span class="line">  std::shared_ptr&lt;CallbackTokenCancelState&gt; mCancelState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containercomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#containercomponent-vtbl"><span><code>ContainerComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);</span>
<span class="line">  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);</span>
<span class="line">  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cdscopedgameplay" tabindex="-1"><a class="header-anchor" href="#cdscopedgameplay"><span><code>CDScopedGameplay</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CDScopedGameplay</span>
<span class="line">{</span>
<span class="line">  _BYTE mFunc[2];</span>
<span class="line">  _BYTE mTagEnd[2];</span>
<span class="line">  int mClientId;</span>
<span class="line">  int mBuildActionIntention;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="callbacktokencontext-std-function-void-cdecl-enum-legacy-retrievestatus" tabindex="-1"><a class="header-anchor" href="#callbacktokencontext-std-function-void-cdecl-enum-legacy-retrievestatus"><span><code>CallbackTokenContext&lt;std::function&lt;void __cdecl(enum Legacy::RetrieveStatus)&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CallbackTokenContext&lt;std::function&lt;void __cdecl(enum Legacy::RetrieveStatus)&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::function&lt;void __cdecl(enum Legacy::RetrieveStatus)&gt;&gt; mCallbacks;</span>
<span class="line">  std::shared_ptr&lt;CallbackTokenCancelState&gt; mCancelState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="callbacktokencontext-std-function-void-cdecl-enum-legacy-importstatus-float-std-shared-ptr-importresult" tabindex="-1"><a class="header-anchor" href="#callbacktokencontext-std-function-void-cdecl-enum-legacy-importstatus-float-std-shared-ptr-importresult"><span><code>CallbackTokenContext&lt;std::function&lt;void __cdecl(enum Legacy::ImportStatus,float,std::shared_ptr&lt;ImportResult&gt;)&gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CallbackTokenContext&lt;std::function&lt;void __cdecl(enum Legacy::ImportStatus,float,std::shared_ptr&lt;ImportResult&gt;)&gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;std::function&lt;void __cdecl(enum Legacy::ImportStatus,float,std::shared_ptr&lt;ImportResult&gt;)&gt;&gt; mCallbacks;</span>
<span class="line">  std::shared_ptr&lt;CallbackTokenCancelState&gt; mCancelState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chacha" tabindex="-1"><a class="header-anchor" href="#chacha"><span><code>ChaCha</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChaCha</span>
<span class="line">{</span>
<span class="line">  unsigned int m_state[16];</span>
<span class="line">  unsigned int m_mask[16];</span>
<span class="line">  unsigned int m_off;</span>
<span class="line">  unsigned int m_rnd;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crashdumplogutils" tabindex="-1"><a class="header-anchor" href="#crashdumplogutils"><span><code>CrashDumpLogUtils</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CrashDumpLogUtils</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crashdumplog" tabindex="-1"><a class="header-anchor" href="#crashdumplog"><span><code>CrashDumpLog</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CrashDumpLog</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="compositescenestackview" tabindex="-1"><a class="header-anchor" href="#compositescenestackview"><span><code>CompositeSceneStackView</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompositeSceneStackView</span>
<span class="line">{</span>
<span class="line">  SceneStack *mMainStack;</span>
<span class="line">  SceneStack *mClientInstanceStack;</span>
<span class="line">  ConstCompositeSceneStackView mConstView;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-onscreensizevariableschanged-l2-lambda-90393c59d32660745f34e36629dc4206" tabindex="-1"><a class="header-anchor" href="#clientinstance-onscreensizevariableschanged-l2-lambda-90393c59d32660745f34e36629dc4206"><span><code>ClientInstance::_onScreenSizeVariablesChanged::__l2::&lt;lambda_90393c59d32660745f34e36629dc4206&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::_onScreenSizeVariablesChanged::__l2::&lt;lambda_90393c59d32660745f34e36629dc4206&gt;</span>
<span class="line">{</span>
<span class="line">  const ScreenSizeData *screenSizeData;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-updatecontrollerhandling-l11-lambda-15b5620979f052f9384ec29576b39029" tabindex="-1"><a class="header-anchor" href="#clientinstance-updatecontrollerhandling-l11-lambda-15b5620979f052f9384ec29576b39029"><span><code>ClientInstance::updateControllerHandling::__l11::&lt;lambda_15b5620979f052f9384ec29576b39029&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::updateControllerHandling::__l11::&lt;lambda_15b5620979f052f9384ec29576b39029&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;ClientInstance&gt; weakPtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-tickdestroyblock-l11-lambda-df7287ab01c6507a213cfdfd14b9340d" tabindex="-1"><a class="header-anchor" href="#clientinstance-tickdestroyblock-l11-lambda-df7287ab01c6507a213cfdfd14b9340d"><span><code>ClientInstance::tickDestroyBlock::__l11::&lt;lambda_df7287ab01c6507a213cfdfd14b9340d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::tickDestroyBlock::__l11::&lt;lambda_df7287ab01c6507a213cfdfd14b9340d&gt;</span>
<span class="line">{</span>
<span class="line">  const BlockPos *hitPos;</span>
<span class="line">  const unsigned __int8 hitFace;</span>
<span class="line">  ClientInstance::ClientDestroyBlockState *state;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-navigatetostoreseeallbycreatorscreen-l2-lambda-15d8531333f726aeede88a06a28b4fd0-l22-lambda-3f6c191c869f81aace7d27ad31821f7d" tabindex="-1"><a class="header-anchor" href="#clientinstance-navigatetostoreseeallbycreatorscreen-l2-lambda-15d8531333f726aeede88a06a28b4fd0-l22-lambda-3f6c191c869f81aace7d27ad31821f7d"><span><code>ClientInstance::navigateToStoreSeeAllByCreatorScreen::__l2::&lt;lambda_15d8531333f726aeede88a06a28b4fd0&gt;::()::__l22::&lt;lambda_3f6c191c869f81aace7d27ad31821f7d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::navigateToStoreSeeAllByCreatorScreen::__l2::&lt;lambda_15d8531333f726aeede88a06a28b4fd0&gt;::()::__l22::&lt;lambda_3f6c191c869f81aace7d27ad31821f7d&gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;ClientInstance&gt; sharedThis;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-initscenestack-l2-lambda-97650e0fd8d8e2d4ab764eb737bc7498" tabindex="-1"><a class="header-anchor" href="#clientinstance-initscenestack-l2-lambda-97650e0fd8d8e2d4ab764eb737bc7498"><span><code>ClientInstance::_initSceneStack::__l2::&lt;lambda_97650e0fd8d8e2d4ab764eb737bc7498&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::_initSceneStack::__l2::&lt;lambda_97650e0fd8d8e2d4ab764eb737bc7498&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-initscenestack-l2-lambda-582f79c63c5d93588b6a0221f4853e8c" tabindex="-1"><a class="header-anchor" href="#clientinstance-initscenestack-l2-lambda-582f79c63c5d93588b6a0221f4853e8c"><span><code>ClientInstance::_initSceneStack::__l2::&lt;lambda_582f79c63c5d93588b6a0221f4853e8c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::_initSceneStack::__l2::&lt;lambda_582f79c63c5d93588b6a0221f4853e8c&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-initscenestack-l2-lambda-878ba9a1bc34c18f3fb6c7370a888ee2" tabindex="-1"><a class="header-anchor" href="#clientinstance-initscenestack-l2-lambda-878ba9a1bc34c18f3fb6c7370a888ee2"><span><code>ClientInstance::_initSceneStack::__l2::&lt;lambda_878ba9a1bc34c18f3fb6c7370a888ee2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::_initSceneStack::__l2::&lt;lambda_878ba9a1bc34c18f3fb6c7370a888ee2&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-initscenestack-l2-lambda-878ba9a1bc34c18f3fb6c7370a888ee2-l2-lambda-193b3faf9447328a85dac550e43be45e" tabindex="-1"><a class="header-anchor" href="#clientinstance-initscenestack-l2-lambda-878ba9a1bc34c18f3fb6c7370a888ee2-l2-lambda-193b3faf9447328a85dac550e43be45e"><span><code>ClientInstance::_initSceneStack::__l2::&lt;lambda_878ba9a1bc34c18f3fb6c7370a888ee2&gt;::()::__l2::&lt;lambda_193b3faf9447328a85dac550e43be45e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::_initSceneStack::__l2::&lt;lambda_878ba9a1bc34c18f3fb6c7370a888ee2&gt;::()::__l2::&lt;lambda_193b3faf9447328a85dac550e43be45e&gt;</span>
<span class="line">{</span>
<span class="line">  std::string *currentNamespace;</span>
<span class="line">  AbstractScene *screen;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-initscenestack-l2-lambda-299ba7fd9fe4ee5b945befbd386be495" tabindex="-1"><a class="header-anchor" href="#clientinstance-initscenestack-l2-lambda-299ba7fd9fe4ee5b945befbd386be495"><span><code>ClientInstance::_initSceneStack::__l2::&lt;lambda_299ba7fd9fe4ee5b945befbd386be495&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::_initSceneStack::__l2::&lt;lambda_299ba7fd9fe4ee5b945befbd386be495&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-createskinrepositoryclientinterface-l5-lambda-1214f5056699946a17be2ec6b86b5a63" tabindex="-1"><a class="header-anchor" href="#clientinstance-createskinrepositoryclientinterface-l5-lambda-1214f5056699946a17be2ec6b86b5a63"><span><code>ClientInstance::_createSkinRepositoryClientInterface::__l5::&lt;lambda_1214f5056699946a17be2ec6b86b5a63&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::_createSkinRepositoryClientInterface::__l5::&lt;lambda_1214f5056699946a17be2ec6b86b5a63&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;ClientInstance&gt; weakThis;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-isshowingmenu-l2-lambda-cfd341f57ab31a2ca42b1aefca30254a" tabindex="-1"><a class="header-anchor" href="#clientinstance-isshowingmenu-l2-lambda-cfd341f57ab31a2ca42b1aefca30254a"><span><code>ClientInstance::isShowingMenu::__l2::&lt;lambda_cfd341f57ab31a2ca42b1aefca30254a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::isShowingMenu::__l2::&lt;lambda_cfd341f57ab31a2ca42b1aefca30254a&gt;</span>
<span class="line">{</span>
<span class="line">  bool *showingMenu;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-initcommands-l2-lambda-bb361151b842928025ac08534ab16337" tabindex="-1"><a class="header-anchor" href="#clientinstance-initcommands-l2-lambda-bb361151b842928025ac08534ab16337"><span><code>ClientInstance::initCommands::__l2::&lt;lambda_bb361151b842928025ac08534ab16337&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::initCommands::__l2::&lt;lambda_bb361151b842928025ac08534ab16337&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-ontick-l38-lambda-71b0399f4662fd076d571faae3370350" tabindex="-1"><a class="header-anchor" href="#clientinstance-ontick-l38-lambda-71b0399f4662fd076d571faae3370350"><span><code>ClientInstance::onTick::__l38::&lt;lambda_71b0399f4662fd076d571faae3370350&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::onTick::__l38::&lt;lambda_71b0399f4662fd076d571faae3370350&gt;</span>
<span class="line">{</span>
<span class="line">  int *nTick;</span>
<span class="line">  int *maxTick;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-joinworldinprogress-l2-lambda-02e2605fd0c5e1a6375f3072765e8e5a" tabindex="-1"><a class="header-anchor" href="#clientinstance-joinworldinprogress-l2-lambda-02e2605fd0c5e1a6375f3072765e8e5a"><span><code>ClientInstance::_joinWorldInProgress::__l2::&lt;lambda_02e2605fd0c5e1a6375f3072765e8e5a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ClientInstance::_joinWorldInProgress::__l2::&lt;lambda_02e2605fd0c5e1a6375f3072765e8e5a&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;ClientInstance&gt; weakThis;</span>
<span class="line">  bool isNetworkGame;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-joinworldinprogress-l11-lambda-abecbc1c0e8dcdce57775fbf971d4035" tabindex="-1"><a class="header-anchor" href="#clientinstance-joinworldinprogress-l11-lambda-abecbc1c0e8dcdce57775fbf971d4035"><span><code>ClientInstance::_joinWorldInProgress::__l11::&lt;lambda_abecbc1c0e8dcdce57775fbf971d4035&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::_joinWorldInProgress::__l11::&lt;lambda_abecbc1c0e8dcdce57775fbf971d4035&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-startsubclientlatejoin-l13-lambda-b51ae057fc840348fcf61fa2148e38c6" tabindex="-1"><a class="header-anchor" href="#clientinstance-startsubclientlatejoin-l13-lambda-b51ae057fc840348fcf61fa2148e38c6"><span><code>ClientInstance::startSubClientLateJoin::__l13::&lt;lambda_b51ae057fc840348fcf61fa2148e38c6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ClientInstance::startSubClientLateJoin::__l13::&lt;lambda_b51ae057fc840348fcf61fa2148e38c6&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *const __this;</span>
<span class="line">  bool isNetworkGame;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-update-l42-lambda-2eadb951cae52f74e068bad3dd7fa7f4-l14-lambda-702502096d39b6c5ea025d728e798aee" tabindex="-1"><a class="header-anchor" href="#clientinstance-update-l42-lambda-2eadb951cae52f74e068bad3dd7fa7f4-l14-lambda-702502096d39b6c5ea025d728e798aee"><span><code>ClientInstance::update::__l42::&lt;lambda_2eadb951cae52f74e068bad3dd7fa7f4&gt;::()::__l14::&lt;lambda_702502096d39b6c5ea025d728e798aee&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::update::__l42::&lt;lambda_2eadb951cae52f74e068bad3dd7fa7f4&gt;::()::__l14::&lt;lambda_702502096d39b6c5ea025d728e798aee&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;ClientInstance&gt; weakPtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-startleavegame-l2-lambda-2b74ebf9d9d48a05c165bbb31d30842e" tabindex="-1"><a class="header-anchor" href="#clientinstance-startleavegame-l2-lambda-2b74ebf9d9d48a05c165bbb31d30842e"><span><code>ClientInstance::_startLeaveGame::__l2::&lt;lambda_2b74ebf9d9d48a05c165bbb31d30842e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::_startLeaveGame::__l2::&lt;lambda_2b74ebf9d9d48a05c165bbb31d30842e&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-requestleavegame-l2-lambda-4bc0650f4f0405926a0a487036642fde" tabindex="-1"><a class="header-anchor" href="#clientinstance-requestleavegame-l2-lambda-4bc0650f4f0405926a0a487036642fde"><span><code>ClientInstance::requestLeaveGame::__l2::&lt;lambda_4bc0650f4f0405926a0a487036642fde&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ClientInstance::requestLeaveGame::__l2::&lt;lambda_4bc0650f4f0405926a0a487036642fde&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;ClientInstance&gt; weakThis;</span>
<span class="line">  bool switchScreen;</span>
<span class="line">  bool sync;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-init-l2-lambda-a36354b83242328e7f1f5c5935e0ecaa" tabindex="-1"><a class="header-anchor" href="#clientinstance-init-l2-lambda-a36354b83242328e7f1f5c5935e0ecaa"><span><code>ClientInstance::init::__l2::&lt;lambda_a36354b83242328e7f1f5c5935e0ecaa&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::init::__l2::&lt;lambda_a36354b83242328e7f1f5c5935e0ecaa&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;ClientInstance&gt; weakThis;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-init-l2-lambda-7d463a3c887b82eef60c5bc398d58571" tabindex="-1"><a class="header-anchor" href="#clientinstance-init-l2-lambda-7d463a3c887b82eef60c5bc398d58571"><span><code>ClientInstance::init::__l2::&lt;lambda_7d463a3c887b82eef60c5bc398d58571&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::init::__l2::&lt;lambda_7d463a3c887b82eef60c5bc398d58571&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;ClientInstance&gt; weakThis;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-init-l2-lambda-2dbee955e45009a41bd19a4f5d977b90" tabindex="-1"><a class="header-anchor" href="#clientinstance-init-l2-lambda-2dbee955e45009a41bd19a4f5d977b90"><span><code>ClientInstance::init::__l2::&lt;lambda_2dbee955e45009a41bd19a4f5d977b90&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::init::__l2::&lt;lambda_2dbee955e45009a41bd19a4f5d977b90&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-vibrate-l13-lambda-abfe2ccf6929051526d977f1e506ac3d" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-vibrate-l13-lambda-abfe2ccf6929051526d977f1e506ac3d"><span><code>ClientInputCallbacks::vibrate::__l13::&lt;lambda_abfe2ccf6929051526d977f1e506ac3d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::vibrate::__l13::&lt;lambda_abfe2ccf6929051526d977f1e506ac3d&gt;</span>
<span class="line">{</span>
<span class="line">  int milliSeconds;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handlecommandevent-l2-lambda-3ca896b064936e0c3219171a0fd62bea" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handlecommandevent-l2-lambda-3ca896b064936e0c3219171a0fd62bea"><span><code>ClientInputCallbacks::handleCommandEvent::__l2::&lt;lambda_3ca896b064936e0c3219171a0fd62bea&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleCommandEvent::__l2::&lt;lambda_3ca896b064936e0c3219171a0fd62bea&gt;</span>
<span class="line">{</span>
<span class="line">  const VoiceCommand *command;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handledictationevent-l8-lambda-e6fd729911e6f890df89f1279cd76373" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handledictationevent-l8-lambda-e6fd729911e6f890df89f1279cd76373"><span><code>ClientInputCallbacks::handleDictationEvent::__l8::&lt;lambda_e6fd729911e6f890df89f1279cd76373&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleDictationEvent::__l8::&lt;lambda_e6fd729911e6f890df89f1279cd76373&gt;</span>
<span class="line">{</span>
<span class="line">  const std::string *newDictationStr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handlevectorinput-l4-lambda-0f0def3c3c1a653163fbf9c1bccfcf88" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handlevectorinput-l4-lambda-0f0def3c3c1a653163fbf9c1bccfcf88"><span><code>ClientInputCallbacks::handleVectorInput::__l4::&lt;lambda_0f0def3c3c1a653163fbf9c1bccfcf88&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleVectorInput::__l4::&lt;lambda_0f0def3c3c1a653163fbf9c1bccfcf88&gt;</span>
<span class="line">{</span>
<span class="line">  __int16 *id;</span>
<span class="line">  float *x;</span>
<span class="line">  float *y;</span>
<span class="line">  float *z;</span>
<span class="line">  FocusImpact *focusImpact;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handleholoinputmodechanged-l2-lambda-e79dccabe9c15a9b64dbdfbab7317d1d" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handleholoinputmodechanged-l2-lambda-e79dccabe9c15a9b64dbdfbab7317d1d"><span><code>ClientInputCallbacks::handleHoloInputModeChanged::__l2::&lt;lambda_e79dccabe9c15a9b64dbdfbab7317d1d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleHoloInputModeChanged::__l2::&lt;lambda_e79dccabe9c15a9b64dbdfbab7317d1d&gt;</span>
<span class="line">{</span>
<span class="line">  HoloUIInputMode *inputMode;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handleinputmodechanged-l2-lambda-86c8143899b89eccea3596158e019ff1" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handleinputmodechanged-l2-lambda-86c8143899b89eccea3596158e019ff1"><span><code>ClientInputCallbacks::handleInputModeChanged::__l2::&lt;lambda_86c8143899b89eccea3596158e019ff1&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleInputModeChanged::__l2::&lt;lambda_86c8143899b89eccea3596158e019ff1&gt;</span>
<span class="line">{</span>
<span class="line">  InputMode *inputMode;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handledirection-l2-lambda-1ca73074d044029f1123f1b8e204c386" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handledirection-l2-lambda-1ca73074d044029f1123f1b8e204c386"><span><code>ClientInputCallbacks::handleDirection::__l2::&lt;lambda_1ca73074d044029f1123f1b8e204c386&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleDirection::__l2::&lt;lambda_1ca73074d044029f1123f1b8e204c386&gt;</span>
<span class="line">{</span>
<span class="line">  DirectionId *stickId;</span>
<span class="line">  float *x;</span>
<span class="line">  float *y;</span>
<span class="line">  FocusImpact *focusImpact;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handlepointerlocation-l5-lambda-585dae7b1422f8853e1863f4bcfab0ab" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handlepointerlocation-l5-lambda-585dae7b1422f8853e1863f4bcfab0ab"><span><code>ClientInputCallbacks::handlePointerLocation::__l5::&lt;lambda_585dae7b1422f8853e1863f4bcfab0ab&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handlePointerLocation::__l5::&lt;lambda_585dae7b1422f8853e1863f4bcfab0ab&gt;</span>
<span class="line">{</span>
<span class="line">  const PointerLocationEventData *pointerLocationData;</span>
<span class="line">  FocusImpact *focusImpact;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handlemenubuttonrelease-l2-lambda-d0e4742031c76c6b90374d00cc4059a8" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handlemenubuttonrelease-l2-lambda-d0e4742031c76c6b90374d00cc4059a8"><span><code>ClientInputCallbacks::handleMenuButtonRelease::__l2::&lt;lambda_d0e4742031c76c6b90374d00cc4059a8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleMenuButtonRelease::__l2::&lt;lambda_d0e4742031c76c6b90374d00cc4059a8&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int *buttonId;</span>
<span class="line">  FocusImpact *focusImpact;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handlepointerpressedbuttonrelease-l2-lambda-39242d26cf3982dde303d99c138d7fea" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handlepointerpressedbuttonrelease-l2-lambda-39242d26cf3982dde303d99c138d7fea"><span><code>ClientInputCallbacks::handlePointerPressedButtonRelease::__l2::&lt;lambda_39242d26cf3982dde303d99c138d7fea&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handlePointerPressedButtonRelease::__l2::&lt;lambda_39242d26cf3982dde303d99c138d7fea&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handlemenubuttonpress-l2-lambda-21d7273568769b2a2e8a145779122fe2" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handlemenubuttonpress-l2-lambda-21d7273568769b2a2e8a145779122fe2"><span><code>ClientInputCallbacks::handleMenuButtonPress::__l2::&lt;lambda_21d7273568769b2a2e8a145779122fe2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleMenuButtonPress::__l2::&lt;lambda_21d7273568769b2a2e8a145779122fe2&gt;</span>
<span class="line">{</span>
<span class="line">  unsigned int *buttonId;</span>
<span class="line">  FocusImpact *focusImpact;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handlebuildorattackbuttonpress-l2-lambda-da56761cda2d44f41691415c5db47201" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handlebuildorattackbuttonpress-l2-lambda-da56761cda2d44f41691415c5db47201"><span><code>ClientInputCallbacks::handleBuildOrAttackButtonPress::__l2::&lt;lambda_da56761cda2d44f41691415c5db47201&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleBuildOrAttackButtonPress::__l2::&lt;lambda_da56761cda2d44f41691415c5db47201&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handledestroyorinteractbuttonpress-l2-lambda-30eab25553a0289c6a2e647a94663f5c" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handledestroyorinteractbuttonpress-l2-lambda-30eab25553a0289c6a2e647a94663f5c"><span><code>ClientInputCallbacks::handleDestroyOrInteractButtonPress::__l2::&lt;lambda_30eab25553a0289c6a2e647a94663f5c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleDestroyOrInteractButtonPress::__l2::&lt;lambda_30eab25553a0289c6a2e647a94663f5c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handlebuildorinteractbuttonpress-l2-lambda-549184ca211057ee986f55f9691f0b5d" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handlebuildorinteractbuttonpress-l2-lambda-549184ca211057ee986f55f9691f0b5d"><span><code>ClientInputCallbacks::handleBuildOrInteractButtonPress::__l2::&lt;lambda_549184ca211057ee986f55f9691f0b5d&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleBuildOrInteractButtonPress::__l2::&lt;lambda_549184ca211057ee986f55f9691f0b5d&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handlebuildorinteractbuttonpress-l5-lambda-99d95ad1f219b828a438795fbbae0add" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handlebuildorinteractbuttonpress-l5-lambda-99d95ad1f219b828a438795fbbae0add"><span><code>ClientInputCallbacks::handleBuildOrInteractButtonPress::__l5::&lt;lambda_99d95ad1f219b828a438795fbbae0add&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleBuildOrInteractButtonPress::__l5::&lt;lambda_99d95ad1f219b828a438795fbbae0add&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handledestoryorattackbuttonpress-l2-lambda-a250f32d2aec155df20b3e6b1bd71989" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handledestoryorattackbuttonpress-l2-lambda-a250f32d2aec155df20b3e6b1bd71989"><span><code>ClientInputCallbacks::handleDestoryOrAttackButtonPress::__l2::&lt;lambda_a250f32d2aec155df20b3e6b1bd71989&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleDestoryOrAttackButtonPress::__l2::&lt;lambda_a250f32d2aec155df20b3e6b1bd71989&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handledestoryorattackbuttonpress-l5-lambda-1768354503fc5fcd1469a64b30f27d5c" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handledestoryorattackbuttonpress-l5-lambda-1768354503fc5fcd1469a64b30f27d5c"><span><code>ClientInputCallbacks::handleDestoryOrAttackButtonPress::__l5::&lt;lambda_1768354503fc5fcd1469a64b30f27d5c&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleDestoryOrAttackButtonPress::__l5::&lt;lambda_1768354503fc5fcd1469a64b30f27d5c&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handlescreenshotpress-l8-lambda-e70b5943a0b1cecdb66c029e8c0cbe0e" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handlescreenshotpress-l8-lambda-e70b5943a0b1cecdb66c029e8c0cbe0e"><span><code>ClientInputCallbacks::handleScreenshotPress::__l8::&lt;lambda_e70b5943a0b1cecdb66c029e8c0cbe0e&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleScreenshotPress::__l8::&lt;lambda_e70b5943a0b1cecdb66c029e8c0cbe0e&gt;</span>
<span class="line">{</span>
<span class="line">  std::string filePath;</span>
<span class="line">  IClientInstance *client;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handlegotoreportcheatbuttonpress-l8-lambda-82f858da70d941e940912bb30990deca" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handlegotoreportcheatbuttonpress-l8-lambda-82f858da70d941e940912bb30990deca"><span><code>ClientInputCallbacks::handleGoToReportCheatButtonPress::__l8::&lt;lambda_82f858da70d941e940912bb30990deca&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handleGoToReportCheatButtonPress::__l8::&lt;lambda_82f858da70d941e940912bb30990deca&gt;</span>
<span class="line">{</span>
<span class="line">  std::string filePath;</span>
<span class="line">  IClientInstance *client;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinputcallbacks-handlepointerpressedbuttonpress-l2-lambda-ed584832a847dcbeef5b61997314db23" tabindex="-1"><a class="header-anchor" href="#clientinputcallbacks-handlepointerpressedbuttonpress-l2-lambda-ed584832a847dcbeef5b61997314db23"><span><code>ClientInputCallbacks::handlePointerPressedButtonPress::__l2::&lt;lambda_ed584832a847dcbeef5b61997314db23&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInputCallbacks::handlePointerPressedButtonPress::__l2::&lt;lambda_ed584832a847dcbeef5b61997314db23&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientskinsystem-updateclientskin-l2-lambda-3edaec2b809ed40c0096426422f09c9f" tabindex="-1"><a class="header-anchor" href="#clientskinsystem-updateclientskin-l2-lambda-3edaec2b809ed40c0096426422f09c9f"><span><code>ClientSkinSystem::_updateClientSkin::__l2::&lt;lambda_3edaec2b809ed40c0096426422f09c9f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientSkinSystem::_updateClientSkin::__l2::&lt;lambda_3edaec2b809ed40c0096426422f09c9f&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;IClientInstance&gt; weakClient;</span>
<span class="line">  const std::string skinName;</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; cb;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-startexternalnetworkworld-l2-lambda-2f4e89c11809877f171d784f43a2bb0a-l25-lambda-c3b381cfcfb0e0326cf8436579754cbd" tabindex="-1"><a class="header-anchor" href="#clientinstance-startexternalnetworkworld-l2-lambda-2f4e89c11809877f171d784f43a2bb0a-l25-lambda-c3b381cfcfb0e0326cf8436579754cbd"><span><code>ClientInstance::_startExternalNetworkWorld::__l2::&lt;lambda_2f4e89c11809877f171d784f43a2bb0a&gt;::()::__l25::&lt;lambda_c3b381cfcfb0e0326cf8436579754cbd&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::_startExternalNetworkWorld::__l2::&lt;lambda_2f4e89c11809877f171d784f43a2bb0a&gt;::()::__l25::&lt;lambda_c3b381cfcfb0e0326cf8436579754cbd&gt;</span>
<span class="line">{</span>
<span class="line">  Social::GameConnectionInfo connectionInfo;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-linktoalloffers-l8-lambda-8c1c471bd4836df2d4db0c759413a7fe" tabindex="-1"><a class="header-anchor" href="#clientinstance-linktoalloffers-l8-lambda-8c1c471bd4836df2d4db0c759413a7fe"><span><code>ClientInstance::linkToAllOffers::__l8::&lt;lambda_8c1c471bd4836df2d4db0c759413a7fe&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::linkToAllOffers::__l8::&lt;lambda_8c1c471bd4836df2d4db0c759413a7fe&gt;</span>
<span class="line">{</span>
<span class="line">  ClientInstance *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientinstance-initttsclient-l5-lambda-385529706c5cafdb75cef3e23b3c0d1a" tabindex="-1"><a class="header-anchor" href="#clientinstance-initttsclient-l5-lambda-385529706c5cafdb75cef3e23b3c0d1a"><span><code>ClientInstance::initTTSClient::__l5::&lt;lambda_385529706c5cafdb75cef3e23b3c0d1a&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClientInstance::initTTSClient::__l5::&lt;lambda_385529706c5cafdb75cef3e23b3c0d1a&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cooldownitemcomponent" tabindex="-1"><a class="header-anchor" href="#cooldownitemcomponent"><span><code>CooldownItemComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CooldownItemComponent : ItemComponent</span>
<span class="line">{</span>
<span class="line">  std::string mCoolDownType;</span>
<span class="line">  float mCooldownTime;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cooldownitemcomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#cooldownitemcomponent-vtbl"><span><code>CooldownItemComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CooldownItemComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ItemComponent)(ItemComponent *this);</span>
<span class="line">  bool (__fastcall *checkComponentDataForContentErrors)(ItemComponent *this);</span>
<span class="line">  void (__fastcall *writeSettings)(ItemComponent *this);</span>
<span class="line">  bool (__fastcall *useOn)(ItemComponent *this, ItemStack *, Actor *, const BlockPos *, unsigned __int8, const Vec3 *);</span>
<span class="line">  bool (__fastcall *isNetworkComponent)(ItemComponent *this);</span>
<span class="line">  std::unique_ptr&lt;CompoundTag&gt; *(__fastcall *buildNetworkTag)(ItemComponent *this, std::unique_ptr&lt;CompoundTag&gt; *result);</span>
<span class="line">  void (__fastcall *initializeFromNetwork)(ItemComponent *this, const CompoundTag *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="channelimageparams" tabindex="-1"><a class="header-anchor" href="#channelimageparams"><span><code>ChannelImageParams</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChannelImageParams</span>
<span class="line">{</span>
<span class="line">  std::string mContentUrl;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-details-dispatchtoken-std-shared-ptr-cg-details-worktoken-const-std-shared-ptr-std-function-void-cdecl-std-nullptr-t" tabindex="-1"><a class="header-anchor" href="#cg-details-dispatchtoken-std-shared-ptr-cg-details-worktoken-const-std-shared-ptr-std-function-void-cdecl-std-nullptr-t"><span><code>cg::details::DispatchToken&lt;std::shared_ptr&lt;cg::details::WorkToken const &gt;,std::shared_ptr&lt;std::function&lt;void __cdecl(std::nullptr_t &amp;)&gt; &gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">const struct __cppobj cg::details::DispatchToken&lt;std::shared_ptr&lt;cg::details::WorkToken const &gt;,std::shared_ptr&lt;std::function&lt;void __cdecl(std::nullptr_t &amp;)&gt; &gt; &gt;</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;cg::details::WorkToken const &gt; mToken;</span>
<span class="line">  std::optional&lt;std::shared_ptr&lt;std::function&lt;void __cdecl(std::nullptr_t &amp;)&gt; &gt; &gt; mResult;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commandlistfuture" tabindex="-1"><a class="header-anchor" href="#commandlistfuture"><span><code>CommandListFuture</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommandListFuture</span>
<span class="line">{</span>
<span class="line">  std::variant&lt;std::function&lt;void __cdecl(CommandListTaskContext &amp;)&gt;,std::shared_ptr&lt;cg::details::DispatchToken&lt;std::shared_ptr&lt;cg::details::WorkToken const &gt;,std::shared_ptr&lt;std::function&lt;void __cdecl(std::nullptr_t &amp;)&gt; &gt; &gt; const &gt; &gt; mWork;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="completionstate" tabindex="-1"><a class="header-anchor" href="#completionstate"><span><code>CompletionState</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CompletionState</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskdispatcherschedulertraits-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const" tabindex="-1"><a class="header-anchor" href="#cg-taskdispatcherschedulertraits-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const"><span><code>cg::TaskDispatcherSchedulerTraits&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TaskDispatcherSchedulerTraits&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution" tabindex="-1"><a class="header-anchor" href="#cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution"><span><code>cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::TaskDispatcher&lt;cg::TaskScheduler&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt; &gt; &gt;::TaskDispatcherExecution</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changeuserstage" tabindex="-1"><a class="header-anchor" href="#changeuserstage"><span><code>ChangeUserStage</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChangeUserStage : BaseStage</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changeuserstage-vtbl" tabindex="-1"><a class="header-anchor" href="#changeuserstage-vtbl"><span><code>ChangeUserStage_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChangeUserStage_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~BaseStage)(BaseStage *this);</span>
<span class="line">  void (__fastcall *onAwake)(BaseStage *this);</span>
<span class="line">  void (__fastcall *onUpdate)(BaseStage *this);</span>
<span class="line">  bool (__fastcall *ayncTask)(BaseStage *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="crypto-random-random" tabindex="-1"><a class="header-anchor" href="#crypto-random-random"><span><code>Crypto::Random::Random</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Crypto::Random::Random</span>
<span class="line">{</span>
<span class="line">  std::random_device rd;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-filesysteminterfaceimpl" tabindex="-1"><a class="header-anchor" href="#core-filesysteminterfaceimpl"><span><code>Core::FileSystemInterfaceImpl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::FileSystemInterfaceImpl : Core::IFileSystem</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-filesysteminterfaceimpl-vtbl" tabindex="-1"><a class="header-anchor" href="#core-filesysteminterfaceimpl-vtbl"><span><code>Core::FileSystemInterfaceImpl_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ Core::FileSystemInterfaceImpl_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IFileSystem)(Core::IFileSystem *this);</span>
<span class="line">  std::unique_ptr&lt;Core::IFile&gt; *(__fastcall *openFile)(Core::IFileSystem *this, std::unique_ptr&lt;Core::IFile&gt; *result, Core::Path, Core::FileOpenMode, Core::FileBufferingMode);</span>
<span class="line">  bool (__fastcall *fileExists)(Core::IFileSystem *this, Core::Path);</span>
<span class="line">  Core::Result *(__fastcall *iterateOverDirectory)(Core::IFileSystem *this, Core::Result *result, Core::Path, Core::DirectoryIterationFlags, std::function&lt;Core::Result __cdecl(Core::DirectoryIterationItem const &amp;)&gt;);</span>
<span class="line">  Core::Result *(__fastcall *getDirectoryFiles)(Core::IFileSystem *this, Core::Result *result, std::vector&lt;Core::PathBuffer&lt;std::string &gt;&gt; *, Core::Path);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-profile-profilesectioncpu" tabindex="-1"><a class="header-anchor" href="#core-profile-profilesectioncpu"><span><code>Core::Profile::ProfileSectionCPU</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Profile::ProfileSectionCPU</span>
<span class="line">{</span>
<span class="line">  const Core::Profile::CPUProfileTokenMicroProfile *mToken;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-igraphicsdevicevendorprovider" tabindex="-1"><a class="header-anchor" href="#cg-igraphicsdevicevendorprovider"><span><code>cg::IGraphicsDeviceVendorProvider</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::IGraphicsDeviceVendorProvider : Bedrock::EnableNonOwnerReferences</span>
<span class="line">{</span>
<span class="line">  cg::IGraphicsDeviceVendorProvider_vtbl *__vftable /*VFT*/;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-igraphicsdevicevendorprovider-vtbl" tabindex="-1"><a class="header-anchor" href="#cg-igraphicsdevicevendorprovider-vtbl"><span><code>cg::IGraphicsDeviceVendorProvider_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ cg::IGraphicsDeviceVendorProvider_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IGraphicsDeviceVendorProvider)(cg::IGraphicsDeviceVendorProvider *this);</span>
<span class="line">  unsigned int (__fastcall *getVendorID)(cg::IGraphicsDeviceVendorProvider *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="core-profile-filecounters" tabindex="-1"><a class="header-anchor" href="#core-profile-filecounters"><span><code>Core::Profile::FileCounters</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj Core::Profile::FileCounters</span>
<span class="line">{</span>
<span class="line">  unsigned __int64 requests;</span>
<span class="line">  unsigned __int64 retries;</span>
<span class="line">  unsigned __int64 retrySuccess;</span>
<span class="line">  unsigned __int64 failures;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collectioncomponent" tabindex="-1"><a class="header-anchor" href="#collectioncomponent"><span><code>CollectionComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CollectionComponent : UIComponent</span>
<span class="line">{</span>
<span class="line">  int mCurrentLength;</span>
<span class="line">  std::string mCollectionName;</span>
<span class="line">  std::vector&lt;std::string&gt; mControlBindings;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collectioncomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#collectioncomponent-vtbl"><span><code>CollectionComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CollectionComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UIComponent)(UIComponent *this);</span>
<span class="line">  void (__fastcall *OnScreenPop)(UIComponent *this);</span>
<span class="line">  std::unique_ptr&lt;UIComponent&gt; *(__fastcall *clone)(UIComponent *this, std::unique_ptr&lt;UIComponent&gt; *result, UIControl *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, const ScreenEvent *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, VisualTree *, ScreenInputContext *, UIAnimationController *, const ScreenEvent *);</span>
<span class="line">  void (__fastcall *onNotifyChildAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onNotifyChildRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UIComponent *this, bool);</span>
<span class="line">  void (__fastcall *onEnabledChanged)(UIComponent *this, bool);</span>
<span class="line">  bool (__fastcall *isRenderableComponent)(UIComponent *this);</span>
<span class="line">  bool (__fastcall *onLayoutChange)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reset)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reload)(UIComponent *this, const UIComponent *);</span>
<span class="line">  const std::string *(__fastcall *getTextToSpeechComponentValue)(UIComponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collectionitemcomponent" tabindex="-1"><a class="header-anchor" href="#collectionitemcomponent"><span><code>CollectionItemComponent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CollectionItemComponent : UIComponent</span>
<span class="line">{</span>
<span class="line">  int mCollectionIndex;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="collectionitemcomponent-vtbl" tabindex="-1"><a class="header-anchor" href="#collectionitemcomponent-vtbl"><span><code>CollectionItemComponent_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CollectionItemComponent_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UIComponent)(UIComponent *this);</span>
<span class="line">  void (__fastcall *OnScreenPop)(UIComponent *this);</span>
<span class="line">  std::unique_ptr&lt;UIComponent&gt; *(__fastcall *clone)(UIComponent *this, std::unique_ptr&lt;UIComponent&gt; *result, UIControl *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, const ScreenEvent *);</span>
<span class="line">  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, VisualTree *, ScreenInputContext *, UIAnimationController *, const ScreenEvent *);</span>
<span class="line">  void (__fastcall *onNotifyChildAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onNotifyChildRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onRemoved)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onAdded)(UIComponent *this);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UIComponent *this, bool);</span>
<span class="line">  void (__fastcall *onEnabledChanged)(UIComponent *this, bool);</span>
<span class="line">  bool (__fastcall *isRenderableComponent)(UIComponent *this);</span>
<span class="line">  bool (__fastcall *onLayoutChange)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reset)(UIComponent *this);</span>
<span class="line">  void (__fastcall *reload)(UIComponent *this, const UIComponent *);</span>
<span class="line">  const std::string *(__fastcall *getTextToSpeechComponentValue)(UIComponent *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cliparea" tabindex="-1"><a class="header-anchor" href="#cliparea"><span><code>ClipArea</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ClipArea</span>
<span class="line">{</span>
<span class="line">  glm::tvec2&lt;float,0&gt; mTopLeftClip;</span>
<span class="line">  glm::tvec2&lt;float,0&gt; mBottomRightClip;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cg-schedulerexecutiontraits-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-cg-details-worktoken" tabindex="-1"><a class="header-anchor" href="#cg-schedulerexecutiontraits-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-cg-details-worktoken"><span><code>cg::SchedulerExecutionTraits&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt;,cg::details::WorkToken&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj cg::SchedulerExecutionTraits&lt;cg::LambdaExecutor&lt;std::nullptr_t,cg::TaskPoolGroupExecutionPolicy&lt;std::nullptr_t,1&gt;,std::string const &amp;,std::vector&lt;cg::GroupPoolDescription&gt; const &amp;&gt;,cg::details::WorkToken&gt;</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creditsrenderer-creditscontent" tabindex="-1"><a class="header-anchor" href="#creditsrenderer-creditscontent"><span><code>CreditsRenderer::CreditsContent</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CreditsRenderer::CreditsContent</span>
<span class="line">{</span>
<span class="line">  CreditsRenderer::CreditsContent::Type mType;</span>
<span class="line">  int mHeight;</span>
<span class="line">  int mPaddingAfter;</span>
<span class="line">  std::string mText;</span>
<span class="line">  bool mCentered;</span>
<span class="line">  mce::TexturePtr mTexturePtr;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creditsrenderer" tabindex="-1"><a class="header-anchor" href="#creditsrenderer"><span><code>CreditsRenderer</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CreditsRenderer : MinecraftUICustomRenderer</span>
<span class="line">{</span>
<span class="line">  bool mInitialized;</span>
<span class="line">  glm::tvec2&lt;float,0&gt; mOwnerSize;</span>
<span class="line">  std::vector&lt;CreditsRenderer::CreditsContent&gt; mContent;</span>
<span class="line">  unsigned int mIndex;</span>
<span class="line">  float mCurrentOffset;</span>
<span class="line">  std::string mPlayerName;</span>
<span class="line">  float mScrollSpeed;</span>
<span class="line">  bool mFinished;</span>
<span class="line">  std::vector&lt;ScreenEvent&gt; mScreenEvents;</span>
<span class="line">  unsigned int mCreditsEndEventId;</span>
<span class="line">  long double mTimeNowSeconds;</span>
<span class="line">  long double mTimeLastSeconds;</span>
<span class="line">  long double mDeltaTimeSeconds;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="creditsrenderer-vtbl" tabindex="-1"><a class="header-anchor" href="#creditsrenderer-vtbl"><span><code>CreditsRenderer_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CreditsRenderer_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);</span>
<span class="line">  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);</span>
<span class="line">  std::shared_ptr&lt;UICustomRenderer&gt; *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr&lt;UICustomRenderer&gt; *result);</span>
<span class="line">  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);</span>
<span class="line">  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getCustomId)(UICustomRenderer *this);</span>
<span class="line">  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);</span>
<span class="line">  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);</span>
<span class="line">  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);</span>
<span class="line">  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);</span>
<span class="line">  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);</span>
<span class="line">  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue&lt;ScreenEvent&gt; *);</span>
<span class="line">  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);</span>
<span class="line">  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);</span>
<span class="line">  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="callbackprogresshandler" tabindex="-1"><a class="header-anchor" href="#callbackprogresshandler"><span><code>CallbackProgressHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) CallbackProgressHandler : EmptyProgressHandler</span>
<span class="line">{</span>
<span class="line">  std::function&lt;enum LoadingState __cdecl(void)&gt; mOnStart;</span>
<span class="line">  _BYTE mLoadingState[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="callbackprogresshandler-vtbl" tabindex="-1"><a class="header-anchor" href="#callbackprogresshandler-vtbl"><span><code>CallbackProgressHandler_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CallbackProgressHandler_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ProgressHandler)(ProgressHandler *this);</span>
<span class="line">  void (__fastcall *onStart)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *tick)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *onCancel)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *onExit)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  LoadingState (__fastcall *getLoadingState)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  float (__fastcall *getLoadingProgress)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  std::string *(__fastcall *getProgressMessage)(ProgressHandler *this, std::string *result, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *addEventProperties)(ProgressHandler *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  std::string *(__fastcall *getTTSProgressMessage)(ProgressHandler *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTitleText)(ProgressHandler *this, std::string *result);</span>
<span class="line">  ProgressAnimation (__fastcall *showLoadingBar)(ProgressHandler *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlogfiledeleteprogresshandler" tabindex="-1"><a class="header-anchor" href="#contentlogfiledeleteprogresshandler"><span><code>ContentLogFileDeleteProgressHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentLogFileDeleteProgressHandler : ProgressHandler</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;TaskGroup&gt; mIOTaskGroup;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlogfiledeleteprogresshandler-vtbl" tabindex="-1"><a class="header-anchor" href="#contentlogfiledeleteprogresshandler-vtbl"><span><code>ContentLogFileDeleteProgressHandler_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContentLogFileDeleteProgressHandler_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ProgressHandler)(ProgressHandler *this);</span>
<span class="line">  void (__fastcall *onStart)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *tick)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *onCancel)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *onExit)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  LoadingState (__fastcall *getLoadingState)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  float (__fastcall *getLoadingProgress)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  std::string *(__fastcall *getProgressMessage)(ProgressHandler *this, std::string *result, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *addEventProperties)(ProgressHandler *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  std::string *(__fastcall *getTTSProgressMessage)(ProgressHandler *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTitleText)(ProgressHandler *this, std::string *result);</span>
<span class="line">  ProgressAnimation (__fastcall *showLoadingBar)(ProgressHandler *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlogfiledeleteprogresshandler-onstart-l2-lambda-4c44ad55a9de036e094d9593064c39b6" tabindex="-1"><a class="header-anchor" href="#contentlogfiledeleteprogresshandler-onstart-l2-lambda-4c44ad55a9de036e094d9593064c39b6"><span><code>ContentLogFileDeleteProgressHandler::onStart::__l2::&lt;lambda_4c44ad55a9de036e094d9593064c39b6&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentLogFileDeleteProgressHandler::onStart::__l2::&lt;lambda_4c44ad55a9de036e094d9593064c39b6&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;MinecraftScreenModel&gt; weakModel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlogfiledeleteprogresshandler-onstart-l2-lambda-df8545a0f7b237ada6fdb7790c17e3e2" tabindex="-1"><a class="header-anchor" href="#contentlogfiledeleteprogresshandler-onstart-l2-lambda-df8545a0f7b237ada6fdb7790c17e3e2"><span><code>ContentLogFileDeleteProgressHandler::onStart::__l2::&lt;lambda_df8545a0f7b237ada6fdb7790c17e3e2&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentLogFileDeleteProgressHandler::onStart::__l2::&lt;lambda_df8545a0f7b237ada6fdb7790c17e3e2&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;MinecraftScreenModel&gt; weakModel;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checkdoneprogresshandler" tabindex="-1"><a class="header-anchor" href="#checkdoneprogresshandler"><span><code>CheckDoneProgressHandler</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CheckDoneProgressHandler : EmptyProgressHandler</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checkdoneprogresshandler-vtbl" tabindex="-1"><a class="header-anchor" href="#checkdoneprogresshandler-vtbl"><span><code>CheckDoneProgressHandler_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CheckDoneProgressHandler_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ProgressHandler)(ProgressHandler *this);</span>
<span class="line">  void (__fastcall *onStart)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *tick)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *onCancel)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *onExit)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  LoadingState (__fastcall *getLoadingState)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  float (__fastcall *getLoadingProgress)(ProgressHandler *this, MinecraftScreenModel *);</span>
<span class="line">  std::string *(__fastcall *getProgressMessage)(ProgressHandler *this, std::string *result, MinecraftScreenModel *);</span>
<span class="line">  void (__fastcall *addEventProperties)(ProgressHandler *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  std::string *(__fastcall *getTTSProgressMessage)(ProgressHandler *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTitleText)(ProgressHandler *this, std::string *result);</span>
<span class="line">  ProgressAnimation (__fastcall *showLoadingBar)(ProgressHandler *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containerinteractionstatemachine" tabindex="-1"><a class="header-anchor" href="#containerinteractionstatemachine"><span><code>ContainerInteractionStateMachine</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ContainerInteractionStateMachine</span>
<span class="line">{</span>
<span class="line">  Node mCurrentNode;</span>
<span class="line">  _BYTE mCurrentNodeId[4];</span>
<span class="line">  _BYTE mDefaultNodeId[4];</span>
<span class="line">  std::unordered_map&lt;int,Node&gt; mNodes;</span>
<span class="line">  std::unordered_map&lt;int,std::vector&lt;ButtonEdge&gt;&gt; mButtonEdges;</span>
<span class="line">  std::unordered_map&lt;int,std::vector&lt;PointerHeldEdge&gt;&gt; mPointerHeldEdges;</span>
<span class="line">  _BYTE mNodeChangeRequest[4];</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cannotusenetworkfeaturesscreencontroller" tabindex="-1"><a class="header-anchor" href="#cannotusenetworkfeaturesscreencontroller"><span><code>CannotUseNetworkFeaturesScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CannotUseNetworkFeaturesScreenController : MinecraftScreenController</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(bool)&gt; mCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cannotusenetworkfeaturesscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#cannotusenetworkfeaturesscreencontroller-vtbl"><span><code>CannotUseNetworkFeaturesScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CannotUseNetworkFeaturesScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cellulardatawarningscreencontroller" tabindex="-1"><a class="header-anchor" href="#cellulardatawarningscreencontroller"><span><code>CellularDataWarningScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CellularDataWarningScreenController : MinecraftScreenController</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(bool)&gt; mCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cellulardatawarningscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#cellulardatawarningscreencontroller-vtbl"><span><code>CellularDataWarningScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CellularDataWarningScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chalkboardscreencontroller" tabindex="-1"><a class="header-anchor" href="#chalkboardscreencontroller"><span><code>ChalkboardScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(4)) ChalkboardScreenController : ClientInstanceScreenController</span>
<span class="line">{</span>
<span class="line">  std::unique_ptr&lt;DeferredTextObject&gt; mDeferredTextObject;</span>
<span class="line">  BlockPos mBlockPosition;</span>
<span class="line">  bool mLockVisible;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chalkboardscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#chalkboardscreencontroller-vtbl"><span><code>ChalkboardScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChalkboardScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chalkboardscreencontroller-registerbindings-l2-lambda-c19ad1e94829ad65b348c00d4b053945" tabindex="-1"><a class="header-anchor" href="#chalkboardscreencontroller-registerbindings-l2-lambda-c19ad1e94829ad65b348c00d4b053945"><span><code>ChalkboardScreenController::_registerBindings::__l2::&lt;lambda_c19ad1e94829ad65b348c00d4b053945&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChalkboardScreenController::_registerBindings::__l2::&lt;lambda_c19ad1e94829ad65b348c00d4b053945&gt;</span>
<span class="line">{</span>
<span class="line">  ChalkboardScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chalkboardscreencontroller-registerbindings-l2-lambda-e6cf651c2b9c075e876ca69014ef3811" tabindex="-1"><a class="header-anchor" href="#chalkboardscreencontroller-registerbindings-l2-lambda-e6cf651c2b9c075e876ca69014ef3811"><span><code>ChalkboardScreenController::_registerBindings::__l2::&lt;lambda_e6cf651c2b9c075e876ca69014ef3811&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChalkboardScreenController::_registerBindings::__l2::&lt;lambda_e6cf651c2b9c075e876ca69014ef3811&gt;</span>
<span class="line">{</span>
<span class="line">  ChalkboardScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chalkboardscreencontroller-registerbindings-l2-lambda-af391edb9ee7620a22893f79e25173cc" tabindex="-1"><a class="header-anchor" href="#chalkboardscreencontroller-registerbindings-l2-lambda-af391edb9ee7620a22893f79e25173cc"><span><code>ChalkboardScreenController::_registerBindings::__l2::&lt;lambda_af391edb9ee7620a22893f79e25173cc&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChalkboardScreenController::_registerBindings::__l2::&lt;lambda_af391edb9ee7620a22893f79e25173cc&gt;</span>
<span class="line">{</span>
<span class="line">  ChalkboardScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chalkboardscreencontroller-registerbindings-l2-lambda-8c03d1cb961bf5361ba907cd86efe50f" tabindex="-1"><a class="header-anchor" href="#chalkboardscreencontroller-registerbindings-l2-lambda-8c03d1cb961bf5361ba907cd86efe50f"><span><code>ChalkboardScreenController::_registerBindings::__l2::&lt;lambda_8c03d1cb961bf5361ba907cd86efe50f&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChalkboardScreenController::_registerBindings::__l2::&lt;lambda_8c03d1cb961bf5361ba907cd86efe50f&gt;</span>
<span class="line">{</span>
<span class="line">  ChalkboardScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chalkboardscreencontroller-registereventhandlers-l2-lambda-fa542fb72eb60c5ac5c4fac0c505fbf8" tabindex="-1"><a class="header-anchor" href="#chalkboardscreencontroller-registereventhandlers-l2-lambda-fa542fb72eb60c5ac5c4fac0c505fbf8"><span><code>ChalkboardScreenController::_registerEventHandlers::__l2::&lt;lambda_fa542fb72eb60c5ac5c4fac0c505fbf8&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChalkboardScreenController::_registerEventHandlers::__l2::&lt;lambda_fa542fb72eb60c5ac5c4fac0c505fbf8&gt;</span>
<span class="line">{</span>
<span class="line">  ChalkboardScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chalkboardscreencontroller-registereventhandlers-l2-lambda-b42cf05c41a2e21b640eb802e5774fa5" tabindex="-1"><a class="header-anchor" href="#chalkboardscreencontroller-registereventhandlers-l2-lambda-b42cf05c41a2e21b640eb802e5774fa5"><span><code>ChalkboardScreenController::_registerEventHandlers::__l2::&lt;lambda_b42cf05c41a2e21b640eb802e5774fa5&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChalkboardScreenController::_registerEventHandlers::__l2::&lt;lambda_b42cf05c41a2e21b640eb802e5774fa5&gt;</span>
<span class="line">{</span>
<span class="line">  ChalkboardScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chalkboardscreencontroller-ctor-l2-lambda-fff40c3734e5a3c973fe8967245ac69b" tabindex="-1"><a class="header-anchor" href="#chalkboardscreencontroller-ctor-l2-lambda-fff40c3734e5a3c973fe8967245ac69b"><span><code>ChalkboardScreenController::{ctor}::__l2::&lt;lambda_fff40c3734e5a3c973fe8967245ac69b&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChalkboardScreenController::{ctor}::__l2::&lt;lambda_fff40c3734e5a3c973fe8967245ac69b&gt;</span>
<span class="line">{</span>
<span class="line">  ChalkboardScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cellulardatawarningscreencontroller-onopen-l2-lambda-6d10d2c4851a646b8d330e59b5f34f14" tabindex="-1"><a class="header-anchor" href="#cellulardatawarningscreencontroller-onopen-l2-lambda-6d10d2c4851a646b8d330e59b5f34f14"><span><code>CellularDataWarningScreenController::onOpen::__l2::&lt;lambda_6d10d2c4851a646b8d330e59b5f34f14&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CellularDataWarningScreenController::onOpen::__l2::&lt;lambda_6d10d2c4851a646b8d330e59b5f34f14&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;CellularDataWarningScreenController&gt; weakThis;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cannotusenetworkfeaturesscreencontroller-onopen-l2-lambda-b48d9a7038debf97dda08a06e326b111" tabindex="-1"><a class="header-anchor" href="#cannotusenetworkfeaturesscreencontroller-onopen-l2-lambda-b48d9a7038debf97dda08a06e326b111"><span><code>CannotUseNetworkFeaturesScreenController::onOpen::__l2::&lt;lambda_b48d9a7038debf97dda08a06e326b111&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CannotUseNetworkFeaturesScreenController::onOpen::__l2::&lt;lambda_b48d9a7038debf97dda08a06e326b111&gt;</span>
<span class="line">{</span>
<span class="line">  std::weak_ptr&lt;CannotUseNetworkFeaturesScreenController&gt; weakThis;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chatsettingsscreencontroller-chatsettings" tabindex="-1"><a class="header-anchor" href="#chatsettingsscreencontroller-chatsettings"><span><code>ChatSettingsScreenController::ChatSettings</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct ChatSettingsScreenController::ChatSettings</span>
<span class="line">{</span>
<span class="line">  bool mIsChatMute;</span>
<span class="line">  bool mIsTTSOn;</span>
<span class="line">  Typeface mTypeface;</span>
<span class="line">  int mFontSize;</span>
<span class="line">  float mLineSpacing;</span>
<span class="line">  int mChatColorCode;</span>
<span class="line">  int mMentionsColorCode;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chatsettingsscreencontroller" tabindex="-1"><a class="header-anchor" href="#chatsettingsscreencontroller"><span><code>ChatSettingsScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChatSettingsScreenController : ClientInstanceScreenController</span>
<span class="line">{</span>
<span class="line">  ChatSettingsScreenController::ChatSettings mInitialSettings;</span>
<span class="line">  ChatSettingsScreenController::ChatSettings mSettings;</span>
<span class="line">  const bool mLanguageCanBeSmooth;</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; mRefreshChatCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chatsettingsscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#chatsettingsscreencontroller-vtbl"><span><code>ChatSettingsScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChatSettingsScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chatscreencontroller" tabindex="-1"><a class="header-anchor" href="#chatscreencontroller"><span><code>ChatScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ChatScreenController : ClientInstanceScreenController</span>
<span class="line">{</span>
<span class="line">  std::string mCurrentMessage;</span>
<span class="line">  bool mRefreshChatMessages;</span>
<span class="line">  int mCurrentSentMessageIndex;</span>
<span class="line">  bool mNeedsLayoutUpdate;</span>
<span class="line">  bool mLastKeyboardActive;</span>
<span class="line">  bool mIsDevConsole;</span>
<span class="line">  bool mSendMessage;</span>
<span class="line">  bool mUpdateIntellisense;</span>
<span class="line">  IntellisenseHandler mIntellisense;</span>
<span class="line">  _BYTE mCurrentHostOption[4];</span>
<span class="line">  std::vector&lt;std::string&gt; mHostCommands;</span>
<span class="line">  unsigned int mExpectedCommandDepth;</span>
<span class="line">  std::string mTeleportWhoName;</span>
<span class="line">  std::string mTeleportWhereName;</span>
<span class="line">  std::string mDeferedCollectionFocusName;</span>
<span class="line">  int mDeferedCollectionFocusIndex;</span>
<span class="line">  bool mWaitOneTick;</span>
<span class="line">  std::vector&lt;std::pair&lt;enum HostOptionStates,std::string &gt;&gt; mMainHostButtons;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chatscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#chatscreencontroller-vtbl"><span><code>ChatScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChatScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chooserealmscreencontroller-realmsworld" tabindex="-1"><a class="header-anchor" href="#chooserealmscreencontroller-realmsworld"><span><code>ChooseRealmScreenController::RealmsWorld</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ChooseRealmScreenController::RealmsWorld</span>
<span class="line">{</span>
<span class="line">  RealmsWorldInfo world;</span>
<span class="line">  bool doneLoading;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chooserealmscreencontroller" tabindex="-1"><a class="header-anchor" href="#chooserealmscreencontroller"><span><code>ChooseRealmScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ChooseRealmScreenController : MainMenuScreenController</span>
<span class="line">{</span>
<span class="line">  bool mDirty;</span>
<span class="line">  std::vector&lt;Realms::World&gt; mRealms;</span>
<span class="line">  std::vector&lt;ChooseRealmScreenController::RealmsWorld&gt; mRealmWorldList;</span>
<span class="line">  std::function&lt;void __cdecl(Realms::World)&gt; mCallback;</span>
<span class="line">  ChooseRealmScreenController::RealmsSubscriptionsLoadingState mRealmsSubscriptionsLoadingState;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="chooserealmscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#chooserealmscreencontroller-vtbl"><span><code>ChooseRealmScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ChooseRealmScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="codescreencontrollerproxy" tabindex="-1"><a class="header-anchor" href="#codescreencontrollerproxy"><span><code>CodeScreenControllerProxy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CodeScreenControllerProxy : ScreenControllerProxy</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="codescreencontrollerproxy-vtbl" tabindex="-1"><a class="header-anchor" href="#codescreencontrollerproxy-vtbl"><span><code>CodeScreenControllerProxy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CodeScreenControllerProxy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ScreenControllerProxy)(ScreenControllerProxy *this);</span>
<span class="line">  void (__fastcall *selectCodeButton)(CodeScreenControllerProxy *this, int);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="codescreeneditorbutton" tabindex="-1"><a class="header-anchor" href="#codescreeneditorbutton"><span><code>CodeScreenEditorButton</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CodeScreenEditorButton</span>
<span class="line">{</span>
<span class="line">  std::string name;</span>
<span class="line">  std::string description;</span>
<span class="line">  std::string url;</span>
<span class="line">  std::string defaultImage;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="codescreencontroller" tabindex="-1"><a class="header-anchor" href="#codescreencontroller"><span><code>CodeScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CodeScreenController : ClientInstanceScreenController, CodeScreenControllerProxy, WebviewObserver</span>
<span class="line">{</span>
<span class="line">  std::vector&lt;CodeScreenEditorButton&gt; mEditorButtons;</span>
<span class="line">  std::string mChosenUrl;</span>
<span class="line">  CodeScreenController::View mView;</span>
<span class="line">  _BYTE mModalView[4];</span>
<span class="line">  bool mNeedsRefresh;</span>
<span class="line">  bool mWebviewLoading;</span>
<span class="line">  bool mHasDefaultUri;</span>
<span class="line">  bool mHasOverrideUri;</span>
<span class="line">  WebviewInterfaceOptions mCodebuilderDef;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="codescreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#codescreencontroller-vtbl"><span><code>CodeScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CodeScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="codescreencontroller-registerbindings-l2-lambda-16de65ca34e12ac497d252dfd6d10cf9" tabindex="-1"><a class="header-anchor" href="#codescreencontroller-registerbindings-l2-lambda-16de65ca34e12ac497d252dfd6d10cf9"><span><code>CodeScreenController::_registerBindings::__l2::&lt;lambda_16de65ca34e12ac497d252dfd6d10cf9&gt;</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CodeScreenController::_registerBindings::__l2::&lt;lambda_16de65ca34e12ac497d252dfd6d10cf9&gt;</span>
<span class="line">{</span>
<span class="line">  CodeScreenController *const __this;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commondialoginfoscreencontroller" tabindex="-1"><a class="header-anchor" href="#commondialoginfoscreencontroller"><span><code>CommonDialogInfoScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CommonDialogInfoScreenController : MinecraftScreenController</span>
<span class="line">{</span>
<span class="line">  const std::string mDialogTitle;</span>
<span class="line">  const std::string mDialogBody;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="commondialoginfoscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#commondialoginfoscreencontroller-vtbl"><span><code>CommonDialogInfoScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ CommonDialogInfoScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connectgamepadscreencontroller" tabindex="-1"><a class="header-anchor" href="#connectgamepadscreencontroller"><span><code>ConnectGamepadScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ConnectGamepadScreenController : MinecraftScreenController</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(void)&gt; mOnCompleteCallback;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="connectgamepadscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#connectgamepadscreencontroller-vtbl"><span><code>ConnectGamepadScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ConnectGamepadScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containerscreencontroller" tabindex="-1"><a class="header-anchor" href="#containerscreencontroller"><span><code>ContainerScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ContainerScreenController : ClientInstanceScreenController</span>
<span class="line">{</span>
<span class="line">  BlockPos mBlockPos;</span>
<span class="line">  ActorUniqueID mEntityUniqueID;</span>
<span class="line">  _BYTE mTypeInContainer[4];</span>
<span class="line">  bool mShowItemCategory;</span>
<span class="line">  ContainerInteractionStateMachine mContainerStateMachine;</span>
<span class="line">  SlotData mLastStateSlot;</span>
<span class="line">  int mLastPlacedAmount;</span>
<span class="line">  bool mSingleSplit;</span>
<span class="line">  SlotData mTouchSplitData;</span>
<span class="line">  ItemGroup mSelectedSplitTarget;</span>
<span class="line">  ProgressiveTakeButtonData mProgressiveTakeButton;</span>
<span class="line">  unsigned int mTouchProgressiveSelectButton;</span>
<span class="line">  std::vector&lt;ItemStateData&gt; mPreviousState;</span>
<span class="line">  SlotData mSelectedSlotData;</span>
<span class="line">  SlotData mLastSelectedSlotData;</span>
<span class="line">  SlotData mHoveredSlotData;</span>
<span class="line">  std::unordered_map&lt;std::string,std::vector&lt;std::string&gt;&gt; mCoalesceOrderMap;</span>
<span class="line">  std::unordered_map&lt;std::string,std::vector&lt;AutoPlaceItem&gt;&gt; mAutoPlaceOrderMap;</span>
<span class="line">  InteractionModel mInteractionModel;</span>
<span class="line">  std::shared_ptr&lt;ContainerManagerController&gt; mContainerManagerController;</span>
<span class="line">  bool mNeedsUpdatedBinds;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containerscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#containerscreencontroller-vtbl"><span><code>ContainerScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *_handlePlaceAll)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  void (__fastcall *_handlePlaceOne)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  void (__fastcall *_handleSelectSlot)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  const SelectedSlotInfo *(__fastcall *_getSelectedSlotInfo)(ContainerScreenController *this, const SelectedSlotInfo *result);</span>
<span class="line">  const ItemStack *(__fastcall *_getItemStack)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  const ItemStackBase *(__fastcall *_getVisualItemStack)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  const ItemStackBase *(__fastcall *_getTakeableItemStackBase)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  ui::ViewRequest (__fastcall *_onContainerSlotHovered)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  ui::ViewRequest (__fastcall *_onContainerSlotSelected)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  ui::ViewRequest (__fastcall *_onContainerSlotPressed)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  bool (__fastcall *_shouldSwap)(ContainerScreenController *this, const std::string *, int, const std::string *, int);</span>
<span class="line">  std::string *(__fastcall *_getCollectionName)(ContainerScreenController *this, std::string *result, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *_canSplit)(ContainerScreenController *this, const std::string *, int);</span>
<span class="line">  void (__fastcall *_sendFlyingItem)(ContainerScreenController *this, const ItemStackBase *, const std::string *, int, const std::string *, int);</span>
<span class="line">  void (__fastcall *_registerCoalesceOrder)(ContainerScreenController *this);</span>
<span class="line">  void (__fastcall *_registerAutoPlaceOrder)(ContainerScreenController *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containerfactory" tabindex="-1"><a class="header-anchor" href="#containerfactory"><span><code>ContainerFactory</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerFactory</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containerscreencontrollerproxycallbacks" tabindex="-1"><a class="header-anchor" href="#containerscreencontrollerproxycallbacks"><span><code>ContainerScreenControllerProxyCallbacks</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerScreenControllerProxyCallbacks</span>
<span class="line">{</span>
<span class="line">  std::function&lt;ItemStack const &amp; __cdecl(std::string const &amp;,int)&gt; mGetItemInstance;</span>
<span class="line">  std::function&lt;void __cdecl(int,std::string const &amp;,int)&gt; mAutoPlace;</span>
<span class="line">  std::function&lt;unsigned int __cdecl(std::string const &amp;)&gt; mGetNameId;</span>
<span class="line">  std::function&lt;enum NodeId __cdecl(unsigned int,enum ButtonEventType,std::string const &amp;,int)&gt; mReceiveEvent;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containerscreencontrollerproxy" tabindex="-1"><a class="header-anchor" href="#containerscreencontrollerproxy"><span><code>ContainerScreenControllerProxy</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContainerScreenControllerProxy : ScreenControllerProxy</span>
<span class="line">{</span>
<span class="line">  const ContainerScreenControllerProxyCallbacks mCallbacks;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="containerscreencontrollerproxy-vtbl" tabindex="-1"><a class="header-anchor" href="#containerscreencontrollerproxy-vtbl"><span><code>ContainerScreenControllerProxy_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContainerScreenControllerProxy_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~ScreenControllerProxy)(ScreenControllerProxy *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlogscreencontroller" tabindex="-1"><a class="header-anchor" href="#contentlogscreencontroller"><span><code>ContentLogScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentLogScreenController : MinecraftScreenController</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentlogscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#contentlogscreencontroller-vtbl"><span><code>ContentLogScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContentLogScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentloghistoryscreencontroller" tabindex="-1"><a class="header-anchor" href="#contentloghistoryscreencontroller"><span><code>ContentLogHistoryScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ContentLogHistoryScreenController : MinecraftScreenController</span>
<span class="line">{</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="contentloghistoryscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#contentloghistoryscreencontroller-vtbl"><span><code>ContentLogHistoryScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ContentLogHistoryScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controlssettingsscreencontroller" tabindex="-1"><a class="header-anchor" href="#controlssettingsscreencontroller"><span><code>ControlsSettingsScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj ControlsSettingsScreenController : SettingsScreenControllerBase</span>
<span class="line">{</span>
<span class="line">  GamePadRemappingLayout *mGamepadLayout;</span>
<span class="line">  std::vector&lt;ControlsSettingsScreenController::BindingInfo&gt; mGamepadBindings;</span>
<span class="line">  KeyboardType mCurrentKeyboardType;</span>
<span class="line">  std::vector&lt;ControlsSettingsScreenController::KeyboardLayoutInfo&gt; mKeyboardLayoutInformation;</span>
<span class="line">  int mSelectedIndex;</span>
<span class="line">  InputBindingMode mActiveBindingMode;</span>
<span class="line">  const std::vector&lt;std::string&gt; *mDisabledInputMappings;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controlssettingsscreencontroller-bindinginfo" tabindex="-1"><a class="header-anchor" href="#controlssettingsscreencontroller-bindinginfo"><span><code>ControlsSettingsScreenController::BindingInfo</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ControlsSettingsScreenController::BindingInfo</span>
<span class="line">{</span>
<span class="line">  std::string mAction;</span>
<span class="line">  std::string mIcon;</span>
<span class="line">  std::vector&lt;int&gt; mKeys;</span>
<span class="line">  bool mActive;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controlssettingsscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#controlssettingsscreencontroller-vtbl"><span><code>ControlsSettingsScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ControlsSettingsScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *_registerControllerCallbacks)(ControlsSettingsScreenController *this);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="convertpurchasestoxblscreencontroller" tabindex="-1"><a class="header-anchor" href="#convertpurchasestoxblscreencontroller"><span><code>ConvertPurchasesToXBLScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj __declspec(align(8)) ConvertPurchasesToXBLScreenController : MinecraftScreenController</span>
<span class="line">{</span>
<span class="line">  std::function&lt;void __cdecl(bool)&gt; mExitScreenCallback;</span>
<span class="line">  bool mTryConversionAgain;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="convertpurchasestoxblscreencontroller-vtbl" tabindex="-1"><a class="header-anchor" href="#convertpurchasestoxblscreencontroller-vtbl"><span><code>ConvertPurchasesToXBLScreenController_vtbl</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct /*VFT*/ ConvertPurchasesToXBLScreenController_vtbl</span>
<span class="line">{</span>
<span class="line">  void (__fastcall *~IScreenController)(IScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);</span>
<span class="line">  std::optional&lt;std::string &gt; *(__fastcall *getRoute)(IScreenController *this, std::optional&lt;std::string &gt; *result);</span>
<span class="line">  void (__fastcall *setScreenState)(IScreenController *this, const std::vector&lt;std::pair&lt;std::string,std::string &gt;&gt; *);</span>
<span class="line">  void (__fastcall *onOpen)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onTerminate)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onInit)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDelete)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *canExit)(ScreenController *this);</span>
<span class="line">  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onCreation)(ScreenController *this);</span>
<span class="line">  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);</span>
<span class="line">  void (__fastcall *onLeave)(ScreenController *this);</span>
<span class="line">  void (__fastcall *leaveScreen)(ScreenController *this);</span>
<span class="line">  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);</span>
<span class="line">  void (__fastcall *handleLicenseChanged)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);</span>
<span class="line">  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);</span>
<span class="line">  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);</span>
<span class="line">  void (__fastcall *setSuspendInput)(ScreenController *this, bool);</span>
<span class="line">  float (__fastcall *getCallbackInterval)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onRender)(ScreenController *this);</span>
<span class="line">  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);</span>
<span class="line">  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);</span>
<span class="line">  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map&lt;std::string,std::string&gt; *);</span>
<span class="line">  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);</span>
<span class="line">  int (__fastcall *getScreenVersion)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);</span>
<span class="line">  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);</span>
<span class="line">  void (__fastcall *onEntered)(ScreenController *this);</span>
<span class="line">  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);</span>
<span class="line">  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);</span>
<span class="line">  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);</span>
<span class="line">  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);</span>
<span class="line">  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="coursescreencontroller" tabindex="-1"><a class="header-anchor" href="#coursescreencontroller"><span><code>CourseScreenController</code></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">struct __cppobj CourseScreenController : MainMenuScreenController</span>
<span class="line">{</span>
<span class="line">  std::shared_ptr&lt;TutorialCollection&gt; mTutorialCollection;</span>
<span class="line">  int mActiveItemIndex;</span>
<span class="line">  std::string mCourseTitle;</span>
<span class="line">  std::string mCourseId;</span>
<span class="line">  bool mHasComputedInitialActiveIndex;</span>
<span class="line">  CourseScreenController::LoadingProgress mLocalWorldLoadingProgress;</span>
<span class="line">  int mHoveredItemIndex;</span>
<span class="line">  std::shared_ptr&lt;PlayScreenModel&gt; mPlayScreenModel;</span>
<span class="line">  std::shared_ptr&lt;MultiplayerLessonScreenController&gt; mMultiplayerLessonScreenController;</span>
<span class="line">  std::shared_ptr&lt;EducationContentManagerScreenController&gt; mEducationContentManagerScreenController;</span>
<span class="line">  std::shared_ptr&lt;LessonProgressionService&gt; mLessonProgressionService;</span>
<span class="line">};</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2785),i=[l];function d(r,c){return a(),n("div",null,i)}const p=e(s,[["render",d],["__file","C.html.vue"]]),u=JSON.parse('{"path":"/1.16.201/structure/C.html","title":"C","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"Core::Profile::GroupToken","slug":"core-profile-grouptoken","link":"#core-profile-grouptoken","children":[]},{"level":3,"title":"Core::Profile::CPUProfileTokenMicroProfile","slug":"core-profile-cpuprofiletokenmicroprofile","link":"#core-profile-cpuprofiletokenmicroprofile","children":[]},{"level":3,"title":"ClientBlockPipeline::SmoothLightBakingStep::_computeLightBrightness::__l2::<lambda_44f4050c3c928648c37d299e6a06abad>","slug":"clientblockpipeline-smoothlightbakingstep-computelightbrightness-l2-lambda-44f4050c3c928648c37d299e6a06abad","link":"#clientblockpipeline-smoothlightbakingstep-computelightbrightness-l2-lambda-44f4050c3c928648c37d299e6a06abad","children":[]},{"level":3,"title":"Core::PathBuffer<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >","slug":"core-pathbuffer-std-basic-string-char-std-char-traits-char-std-allocator-char","link":"#core-pathbuffer-std-basic-string-char-std-char-traits-char-std-allocator-char","children":[]},{"level":3,"title":"Core::Path","slug":"core-path","link":"#core-path","children":[]},{"level":3,"title":"Core::PathPart","slug":"core-pathpart","link":"#core-pathpart","children":[]},{"level":3,"title":"ContentIdentity","slug":"contentidentity","link":"#contentidentity","children":[]},{"level":3,"title":"ClientBlobCache::Cache::_trimIfNeeded::__l5::<lambda_cfc6481d33223e5533d33a80b1ed8b6a>","slug":"clientblobcache-cache-trimifneeded-l5-lambda-cfc6481d33223e5533d33a80b1ed8b6a","link":"#clientblobcache-cache-trimifneeded-l5-lambda-cfc6481d33223e5533d33a80b1ed8b6a","children":[]},{"level":3,"title":"ChunkPos","slug":"chunkpos","link":"#chunkpos","children":[]},{"level":3,"title":"Core::PathBuffer<Core::StackString<char,1024> >","slug":"core-pathbuffer-core-stackstring-char-1024","link":"#core-pathbuffer-core-stackstring-char-1024","children":[]},{"level":3,"title":"Core::StackString<char,1024>","slug":"core-stackstring-char-1024","link":"#core-stackstring-char-1024","children":[]},{"level":3,"title":"ContentAcquisition::_sortContentTrackersByPriority::__l2::<lambda_9747ad26564c82a94e7199d71afa4537>","slug":"contentacquisition-sortcontenttrackersbypriority-l2-lambda-9747ad26564c82a94e7199d71afa4537","link":"#contentacquisition-sortcontenttrackersbypriority-l2-lambda-9747ad26564c82a94e7199d71afa4537","children":[]},{"level":3,"title":"CommonDocument","slug":"commondocument","link":"#commondocument","children":[]},{"level":3,"title":"CommonLocTextPair","slug":"commonloctextpair","link":"#commonloctextpair","children":[]},{"level":3,"title":"ContentTierManager::ValidatorRegistry::ValidatorRegisterer","slug":"contenttiermanager-validatorregistry-validatorregisterer","link":"#contenttiermanager-validatorregistry-validatorregisterer","children":[]},{"level":3,"title":"ContentTierManager::ValidatorRegistry","slug":"contenttiermanager-validatorregistry","link":"#contenttiermanager-validatorregistry","children":[]},{"level":3,"title":"CommandFlag","slug":"commandflag","link":"#commandflag","children":[]},{"level":3,"title":"CommandOrigin","slug":"commandorigin","link":"#commandorigin","children":[]},{"level":3,"title":"Core::Random","slug":"core-random","link":"#core-random","children":[]},{"level":3,"title":"ComponentDescription","slug":"componentdescription","link":"#componentdescription","children":[]},{"level":3,"title":"CompoundTag","slug":"compoundtag","link":"#compoundtag","children":[]},{"level":3,"title":"CraftableCompounds::_getCompoundId::__l2::<lambda_cb3f8bb483eddc0a11d03ac37babd3ba>","slug":"craftablecompounds-getcompoundid-l2-lambda-cb3f8bb483eddc0a11d03ac37babd3ba","link":"#craftablecompounds-getcompoundid-l2-lambda-cb3f8bb483eddc0a11d03ac37babd3ba","children":[]},{"level":3,"title":"ContainerPopulationData","slug":"containerpopulationdata","link":"#containerpopulationdata","children":[]},{"level":3,"title":"ContainerScreenContext","slug":"containerscreencontext","link":"#containerscreencontext","children":[]},{"level":3,"title":"ChemicalHeatBlock::_getRelativeOffsets::__l5::<lambda_b0dd78f1bda910ef2822257e4eb6eb5b>","slug":"chemicalheatblock-getrelativeoffsets-l5-lambda-b0dd78f1bda910ef2822257e4eb6eb5b","link":"#chemicalheatblock-getrelativeoffsets-l5-lambda-b0dd78f1bda910ef2822257e4eb6eb5b","children":[]},{"level":3,"title":"ChunkLocalHeight","slug":"chunklocalheight","link":"#chunklocalheight","children":[]},{"level":3,"title":"ChunkSource::_spawnChunkGenerationTasks::__l3::<lambda_7e0f765fe899e3b8d51a4ee6497a8231>","slug":"chunksource-spawnchunkgenerationtasks-l3-lambda-7e0f765fe899e3b8d51a4ee6497a8231","link":"#chunksource-spawnchunkgenerationtasks-l3-lambda-7e0f765fe899e3b8d51a4ee6497a8231","children":[]},{"level":3,"title":"cst_diphone_entry_struct","slug":"cst-diphone-entry-struct","link":"#cst-diphone-entry-struct","children":[]},{"level":3,"title":"cst_dur_stats_struct","slug":"cst-dur-stats-struct","link":"#cst-dur-stats-struct","children":[]},{"level":3,"title":"cst_val_struct","slug":"cst-val-struct","link":"#cst-val-struct","children":[]},{"level":3,"title":"cst_val_cons_struct","slug":"cst-val-cons-struct","link":"#cst-val-cons-struct","children":[]},{"level":3,"title":"cst_val_atom_struct","slug":"cst-val-atom-struct","link":"#cst-val-atom-struct","children":[]},{"level":3,"title":"cst_val_atom_struct::<unnamed_type_v>","slug":"cst-val-atom-struct-unnamed-type-v","link":"#cst-val-atom-struct-unnamed-type-v","children":[]},{"level":3,"title":"cst_cart_node_struct","slug":"cst-cart-node-struct","link":"#cst-cart-node-struct","children":[]},{"level":3,"title":"cst_regex_struct","slug":"cst-regex-struct","link":"#cst-regex-struct","children":[]},{"level":3,"title":"cst_synth_module_struct","slug":"cst-synth-module-struct","link":"#cst-synth-module-struct","children":[]},{"level":3,"title":"config_s","slug":"config-s","link":"#config-s","children":[]},{"level":3,"title":"code","slug":"code","link":"#code","children":[]},{"level":3,"title":"ct_data_s","slug":"ct-data-s","link":"#ct-data-s","children":[]},{"level":3,"title":"Core::FileOpenMode","slug":"core-fileopenmode","link":"#core-fileopenmode","children":[]},{"level":3,"title":"CompareScheduledCallback","slug":"comparescheduledcallback","link":"#comparescheduledcallback","children":[]},{"level":3,"title":"CFF_Field_Handler_","slug":"cff-field-handler","link":"#cff-field-handler","children":[]},{"level":3,"title":"Core::Profile::ProfileGroupManager","slug":"core-profile-profilegroupmanager","link":"#core-profile-profilegroupmanager","children":[]},{"level":3,"title":"Core::Profile::CounterTokenMicroProfile","slug":"core-profile-countertokenmicroprofile","link":"#core-profile-countertokenmicroprofile","children":[]},{"level":3,"title":"ColorChannel","slug":"colorchannel","link":"#colorchannel","children":[]},{"level":3,"title":"CatalogPropertyBag","slug":"catalogpropertybag","link":"#catalogpropertybag","children":[]},{"level":3,"title":"CompassSpriteCalculator","slug":"compassspritecalculator","link":"#compassspritecalculator","children":[]},{"level":3,"title":"cst_lang_struct","slug":"cst-lang-struct","link":"#cst-lang-struct","children":[]},{"level":3,"title":"CrashDumpFormatEntryImpl","slug":"crashdumpformatentryimpl","link":"#crashdumpformatentryimpl","children":[]},{"level":3,"title":"CrashDumpLogFieldFormat","slug":"crashdumplogfieldformat","link":"#crashdumplogfieldformat","children":[]},{"level":3,"title":"cst_cart_struct","slug":"cst-cart-struct","link":"#cst-cart-struct","children":[]},{"level":3,"title":"Core::Subject<I18nObserver,Core::SingleThreadedLock>","slug":"core-subject-i18nobserver-core-singlethreadedlock","link":"#core-subject-i18nobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::SingleThreadedLock","slug":"core-singlethreadedlock","link":"#core-singlethreadedlock","children":[]},{"level":3,"title":"Core::StorageAreasTree","slug":"core-storageareastree","link":"#core-storageareastree","children":[]},{"level":3,"title":"Core::StorageAreasTree::TreeNode","slug":"core-storageareastree-treenode","link":"#core-storageareastree-treenode","children":[]},{"level":3,"title":"cst_lts_rules_struct","slug":"cst-lts-rules-struct","link":"#cst-lts-rules-struct","children":[]},{"level":3,"title":"Core::OutputFileStream","slug":"core-outputfilestream","link":"#core-outputfilestream","children":[]},{"level":3,"title":"Core::FileStream","slug":"core-filestream","link":"#core-filestream","children":[]},{"level":3,"title":"CommandRegistry::Symbol","slug":"commandregistry-symbol","link":"#commandregistry-symbol","children":[]},{"level":3,"title":"CFF_Decoder_FuncsRec_","slug":"cff-decoder-funcsrec","link":"#cff-decoder-funcsrec","children":[]},{"level":3,"title":"Core::FileStats","slug":"core-filestats","link":"#core-filestats","children":[]},{"level":3,"title":"cst_sts_list_struct","slug":"cst-sts-list-struct","link":"#cst-sts-list-struct","children":[]},{"level":3,"title":"cst_phoneset_struct","slug":"cst-phoneset-struct","link":"#cst-phoneset-struct","children":[]},{"level":3,"title":"CFF_Builder_FuncsRec_","slug":"cff-builder-funcsrec","link":"#cff-builder-funcsrec","children":[]},{"level":3,"title":"cst_val_def_struct","slug":"cst-val-def-struct","link":"#cst-val-def-struct","children":[]},{"level":3,"title":"cg::TextureDescription","slug":"cg-texturedescription","link":"#cg-texturedescription","children":[]},{"level":3,"title":"cg::ImageDescription","slug":"cg-imagedescription","link":"#cg-imagedescription","children":[]},{"level":3,"title":"cg::TextureSetImageDescription","slug":"cg-texturesetimagedescription","link":"#cg-texturesetimagedescription","children":[]},{"level":3,"title":"cst_diphone_db_struct","slug":"cst-diphone-db-struct","link":"#cst-diphone-db-struct","children":[]},{"level":3,"title":"ContentTierIncompatibleReason","slug":"contenttierincompatiblereason","link":"#contenttierincompatiblereason","children":[]},{"level":3,"title":"C_SCOPE_TABLE","slug":"c-scope-table","link":"#c-scope-table","children":[]},{"level":3,"title":"Core::FileStdStreamBuf","slug":"core-filestdstreambuf","link":"#core-filestdstreambuf","children":[]},{"level":3,"title":"Core::File","slug":"core-file","link":"#core-file","children":[]},{"level":3,"title":"cg::TypeFlagPair","slug":"cg-typeflagpair","link":"#cg-typeflagpair","children":[]},{"level":3,"title":"CameraShakeComponent","slug":"camerashakecomponent","link":"#camerashakecomponent","children":[]},{"level":3,"title":"ComplexInventoryTransaction","slug":"complexinventorytransaction","link":"#complexinventorytransaction","children":[]},{"level":3,"title":"ClientBlockPipeline::Inputs","slug":"clientblockpipeline-inputs","link":"#clientblockpipeline-inputs","children":[]},{"level":3,"title":"Core::Profile::ProfileSectionGroup","slug":"core-profile-profilesectiongroup","link":"#core-profile-profilesectiongroup","children":[]},{"level":3,"title":"Core::Profile::ProfileGroup","slug":"core-profile-profilegroup","link":"#core-profile-profilegroup","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeViewOf<BrightnessPair const >","slug":"clientblockpipeline-volumeviewof-brightnesspair-const","link":"#clientblockpipeline-volumeviewof-brightnesspair-const","children":[]},{"level":3,"title":"ClientBlockPipeline::UvTransform","slug":"clientblockpipeline-uvtransform","link":"#clientblockpipeline-uvtransform","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeViewOf<ClientBlockPipeline::BlockSchematicCell const >","slug":"clientblockpipeline-volumeviewof-clientblockpipeline-blockschematiccell-const","link":"#clientblockpipeline-volumeviewof-clientblockpipeline-blockschematiccell-const","children":[]},{"level":3,"title":"ClientBlockPipeline::BoxSchematicInstance","slug":"clientblockpipeline-boxschematicinstance","link":"#clientblockpipeline-boxschematicinstance","children":[]},{"level":3,"title":"ClientBlockPipeline::SchematicsJoiningStep::StaticStepData","slug":"clientblockpipeline-schematicsjoiningstep-staticstepdata","link":"#clientblockpipeline-schematicsjoiningstep-staticstepdata","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeViewOf<ClientBlockPipeline::BlockCell const >","slug":"clientblockpipeline-volumeviewof-clientblockpipeline-blockcell-const","link":"#clientblockpipeline-volumeviewof-clientblockpipeline-blockcell-const","children":[]},{"level":3,"title":"ClientBlockPipeline::SchematicsJoiningStep::BlockCellStepData","slug":"clientblockpipeline-schematicsjoiningstep-blockcellstepdata","link":"#clientblockpipeline-schematicsjoiningstep-blockcellstepdata","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeViewOf<ClientBlockPipeline::BlockOpacityData const >","slug":"clientblockpipeline-volumeviewof-clientblockpipeline-blockopacitydata-const","link":"#clientblockpipeline-volumeviewof-clientblockpipeline-blockopacitydata-const","children":[]},{"level":3,"title":"ClientBlockPipeline::BoxFaceSchematic","slug":"clientblockpipeline-boxfaceschematic","link":"#clientblockpipeline-boxfaceschematic","children":[]},{"level":3,"title":"ClientBlockPipeline::BoxSchematic","slug":"clientblockpipeline-boxschematic","link":"#clientblockpipeline-boxschematic","children":[]},{"level":3,"title":"ClientBlockPipeline::SmoothLightBakingStep::SampledLightValues","slug":"clientblockpipeline-smoothlightbakingstep-sampledlightvalues","link":"#clientblockpipeline-smoothlightbakingstep-sampledlightvalues","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeViewOf<float const >","slug":"clientblockpipeline-volumeviewof-float-const","link":"#clientblockpipeline-volumeviewof-float-const","children":[]},{"level":3,"title":"ClientBlockPipeline::BakedMaterialMap","slug":"clientblockpipeline-bakedmaterialmap","link":"#clientblockpipeline-bakedmaterialmap","children":[]},{"level":3,"title":"ClientBlockPipeline::DimensionDimmingScalars","slug":"clientblockpipeline-dimensiondimmingscalars","link":"#clientblockpipeline-dimensiondimmingscalars","children":[]},{"level":3,"title":"ClientBlockPipeline::Description::BakedStep","slug":"clientblockpipeline-description-bakedstep","link":"#clientblockpipeline-description-bakedstep","children":[]},{"level":3,"title":"ClientBlockPipeline::BlockCell","slug":"clientblockpipeline-blockcell","link":"#clientblockpipeline-blockcell","children":[]},{"level":3,"title":"ContentSource","slug":"contentsource","link":"#contentsource","children":[]},{"level":3,"title":"Core::Result","slug":"core-result","link":"#core-result","children":[]},{"level":3,"title":"cg::ImageBuffer","slug":"cg-imagebuffer","link":"#cg-imagebuffer","children":[]},{"level":3,"title":"Core::SplitPathT<1024,64>","slug":"core-splitpatht-1024-64","link":"#core-splitpatht-1024-64","children":[]},{"level":3,"title":"CameraBlendSettings","slug":"camerablendsettings","link":"#camerablendsettings","children":[]},{"level":3,"title":"CameraDirector","slug":"cameradirector","link":"#cameradirector","children":[]},{"level":3,"title":"Camera","slug":"camera","link":"#camera","children":[]},{"level":3,"title":"CommandVersion","slug":"commandversion","link":"#commandversion","children":[]},{"level":3,"title":"ContextMessageLogger","slug":"contextmessagelogger","link":"#contextmessagelogger","children":[]},{"level":3,"title":"ContextMessageLoggerOptions","slug":"contextmessageloggeroptions","link":"#contextmessageloggeroptions","children":[]},{"level":3,"title":"Config","slug":"config","link":"#config","children":[]},{"level":3,"title":"CrashDumpGameplayData","slug":"crashdumpgameplaydata","link":"#crashdumpgameplaydata","children":[]},{"level":3,"title":"ClientInstance::_leaveGameOnUnrecoverableError::__l11::<lambda_9e193ddaee367b7b7b07833f6136df6c>","slug":"clientinstance-leavegameonunrecoverableerror-l11-lambda-9e193ddaee367b7b7b07833f6136df6c","link":"#clientinstance-leavegameonunrecoverableerror-l11-lambda-9e193ddaee367b7b7b07833f6136df6c","children":[]},{"level":3,"title":"ClientFrameUpdateContext","slug":"clientframeupdatecontext","link":"#clientframeupdatecontext","children":[]},{"level":3,"title":"ClientInstance::update::__l42::<lambda_2eadb951cae52f74e068bad3dd7fa7f4>","slug":"clientinstance-update-l42-lambda-2eadb951cae52f74e068bad3dd7fa7f4","link":"#clientinstance-update-l42-lambda-2eadb951cae52f74e068bad3dd7fa7f4","children":[]},{"level":3,"title":"ClientInstance::setupClientGame::__l8::<lambda_f8252ab8124c045f24524d1760b419d8>","slug":"clientinstance-setupclientgame-l8-lambda-f8252ab8124c045f24524d1760b419d8","link":"#clientinstance-setupclientgame-l8-lambda-f8252ab8124c045f24524d1760b419d8","children":[]},{"level":3,"title":"ClientInstance::_startExternalNetworkWorld::__l2::<lambda_2f4e89c11809877f171d784f43a2bb0a>","slug":"clientinstance-startexternalnetworkworld-l2-lambda-2f4e89c11809877f171d784f43a2bb0a","link":"#clientinstance-startexternalnetworkworld-l2-lambda-2f4e89c11809877f171d784f43a2bb0a","children":[]},{"level":3,"title":"ClientInstance::_startExternalNetworkWorld::__l2::<lambda_2f4e89c11809877f171d784f43a2bb0a>::()::__l25::<lambda_89f9ae71cef463ef90f3d3d6d3c5a294>","slug":"clientinstance-startexternalnetworkworld-l2-lambda-2f4e89c11809877f171d784f43a2bb0a-l25-lambda-89f9ae71cef463ef90f3d3d6d3c5a294","link":"#clientinstance-startexternalnetworkworld-l2-lambda-2f4e89c11809877f171d784f43a2bb0a-l25-lambda-89f9ae71cef463ef90f3d3d6d3c5a294","children":[]},{"level":3,"title":"ConstCompositeSceneStackView","slug":"constcompositescenestackview","link":"#constcompositescenestackview","children":[]},{"level":3,"title":"ClientInstance::_isShowingScreen::__l2::<lambda_851bb6c3689e76182cb941d3bd1036a4>","slug":"clientinstance-isshowingscreen-l2-lambda-851bb6c3689e76182cb941d3bd1036a4","link":"#clientinstance-isshowingscreen-l2-lambda-851bb6c3689e76182cb941d3bd1036a4","children":[]},{"level":3,"title":"ClientInstance::navigateToCoinPurchaseScreen::__l2::<lambda_e1cf1260acbd6347c10ba2122d74ca7a>","slug":"clientinstance-navigatetocoinpurchasescreen-l2-lambda-e1cf1260acbd6347c10ba2122d74ca7a","link":"#clientinstance-navigatetocoinpurchasescreen-l2-lambda-e1cf1260acbd6347c10ba2122d74ca7a","children":[]},{"level":3,"title":"ClientInstance::navigateToStoreSeeAllByCreatorScreen::__l2::<lambda_15d8531333f726aeede88a06a28b4fd0>","slug":"clientinstance-navigatetostoreseeallbycreatorscreen-l2-lambda-15d8531333f726aeede88a06a28b4fd0","link":"#clientinstance-navigatetostoreseeallbycreatorscreen-l2-lambda-15d8531333f726aeede88a06a28b4fd0","children":[]},{"level":3,"title":"ClientInstance::ClientDestroyBlockState","slug":"clientinstance-clientdestroyblockstate","link":"#clientinstance-clientdestroyblockstate","children":[]},{"level":3,"title":"ClientSkin","slug":"clientskin","link":"#clientskin","children":[]},{"level":3,"title":"ClientSkinInfoData","slug":"clientskininfodata","link":"#clientskininfodata","children":[]},{"level":3,"title":"ClientParticleTrackingComponent","slug":"clientparticletrackingcomponent","link":"#clientparticletrackingcomponent","children":[]},{"level":3,"title":"CatalogInfo","slug":"cataloginfo","link":"#cataloginfo","children":[]},{"level":3,"title":"CallbackToken","slug":"callbacktoken","link":"#callbacktoken","children":[]},{"level":3,"title":"cg::math::Rect<float>","slug":"cg-math-rect-float","link":"#cg-math-rect-float","children":[]},{"level":3,"title":"CrashDumpKeyValueData","slug":"crashdumpkeyvaluedata","link":"#crashdumpkeyvaluedata","children":[]},{"level":3,"title":"ContentLog::ContentLogEndPointData","slug":"contentlog-contentlogendpointdata","link":"#contentlog-contentlogendpointdata","children":[]},{"level":3,"title":"ControllerDirectionEventData","slug":"controllerdirectioneventdata","link":"#controllerdirectioneventdata","children":[]},{"level":3,"title":"ClippedCollectionEventData","slug":"clippedcollectioneventdata","link":"#clippedcollectioneventdata","children":[]},{"level":3,"title":"ClipStateChangeEventData","slug":"clipstatechangeeventdata","link":"#clipstatechangeeventdata","children":[]},{"level":3,"title":"CustomRendererEventData","slug":"customrenderereventdata","link":"#customrenderereventdata","children":[]},{"level":3,"title":"CollisionGrid<15>","slug":"collisiongrid-15","link":"#collisiongrid-15","children":[]},{"level":3,"title":"ClientBlockPipeline::TessellatorContext","slug":"clientblockpipeline-tessellatorcontext","link":"#clientblockpipeline-tessellatorcontext","children":[]},{"level":3,"title":"CommandListTaskContext","slug":"commandlisttaskcontext","link":"#commandlisttaskcontext","children":[]},{"level":3,"title":"ChunkLayerRenderObject","slug":"chunklayerrenderobject","link":"#chunklayerrenderobject","children":[]},{"level":3,"title":"ContentLog::ContentLogScope","slug":"contentlog-contentlogscope","link":"#contentlog-contentlogscope","children":[]},{"level":3,"title":"ClientInstanceScreenModel","slug":"clientinstancescreenmodel","link":"#clientinstancescreenmodel","children":[]},{"level":3,"title":"ContainerScreenController::_registerStateMachine::__l2::<lambda_22ba86bea9db98d4be3d24a41addfd59>","slug":"containerscreencontroller-registerstatemachine-l2-lambda-22ba86bea9db98d4be3d24a41addfd59","link":"#containerscreencontroller-registerstatemachine-l2-lambda-22ba86bea9db98d4be3d24a41addfd59","children":[]},{"level":3,"title":"ControlsSettingsScreenController::_registerControllerCallbacks::__l2::<lambda_7847dc19740a716fdd766d12d5c86f1d>::()::__l2::<lambda_e1ed6117cdc1faf979ad9c55cf15bfe3>","slug":"controlssettingsscreencontroller-registercontrollercallbacks-l2-lambda-7847dc19740a716fdd766d12d5c86f1d-l2-lambda-e1ed6117cdc1faf979ad9c55cf15bfe3","link":"#controlssettingsscreencontroller-registercontrollercallbacks-l2-lambda-7847dc19740a716fdd766d12d5c86f1d-l2-lambda-e1ed6117cdc1faf979ad9c55cf15bfe3","children":[]},{"level":3,"title":"ControlsSettingsScreenController::KeyboardLayoutInfo","slug":"controlssettingsscreencontroller-keyboardlayoutinfo","link":"#controlssettingsscreencontroller-keyboardlayoutinfo","children":[]},{"level":3,"title":"CourseScreenController::_setLeaveGameOverride::__l2::<lambda_b1807e78fd2d1443f9792a801376796c>","slug":"coursescreencontroller-setleavegameoverride-l2-lambda-b1807e78fd2d1443f9792a801376796c","link":"#coursescreencontroller-setleavegameoverride-l2-lambda-b1807e78fd2d1443f9792a801376796c","children":[]},{"level":3,"title":"CraftingScreenControllerProxyCallbacks","slug":"craftingscreencontrollerproxycallbacks","link":"#craftingscreencontrollerproxycallbacks","children":[]},{"level":3,"title":"CraftableCountingData","slug":"craftablecountingdata","link":"#craftablecountingdata","children":[]},{"level":3,"title":"CraftingScreenController::_registerStateMachine::__l2::<lambda_be0bf6bd90e4b29638d1008293b3501b>","slug":"craftingscreencontroller-registerstatemachine-l2-lambda-be0bf6bd90e4b29638d1008293b3501b","link":"#craftingscreencontroller-registerstatemachine-l2-lambda-be0bf6bd90e4b29638d1008293b3501b","children":[]},{"level":3,"title":"CraftingScreenController::_recipeAutoCraft::__l2::<lambda_6aa2f103e2c2f5d7d0fafc45ee252653>","slug":"craftingscreencontroller-recipeautocraft-l2-lambda-6aa2f103e2c2f5d7d0fafc45ee252653","link":"#craftingscreencontroller-recipeautocraft-l2-lambda-6aa2f103e2c2f5d7d0fafc45ee252653","children":[]},{"level":3,"title":"CraftingTableComponent","slug":"craftingtablecomponent","link":"#craftingtablecomponent","children":[]},{"level":3,"title":"CustomTemplatesScreenController::_registerEvents::__l2::<lambda_faa911ab3abefbbffed8c9d57cca4fc8>::()::__l8::<lambda_855dc3b3dd5168adfa3023a3c097783b>","slug":"customtemplatesscreencontroller-registerevents-l2-lambda-faa911ab3abefbbffed8c9d57cca4fc8-l8-lambda-855dc3b3dd5168adfa3023a3c097783b","link":"#customtemplatesscreencontroller-registerevents-l2-lambda-faa911ab3abefbbffed8c9d57cca4fc8-l8-lambda-855dc3b3dd5168adfa3023a3c097783b","children":[]},{"level":3,"title":"CustomTemplatesScreenController::_handleWorldTemplateClicked::__l2::<lambda_0fd1354ad3496433dfc1a1fe4fe2b8a7>","slug":"customtemplatesscreencontroller-handleworldtemplateclicked-l2-lambda-0fd1354ad3496433dfc1a1fe4fe2b8a7","link":"#customtemplatesscreencontroller-handleworldtemplateclicked-l2-lambda-0fd1354ad3496433dfc1a1fe4fe2b8a7","children":[]},{"level":3,"title":"CustomTemplatesScreenController::_createWorldTemplate::__l5::<lambda_bc20e33a775adc61e26b6412226bb3d7>","slug":"customtemplatesscreencontroller-createworldtemplate-l5-lambda-bc20e33a775adc61e26b6412226bb3d7","link":"#customtemplatesscreencontroller-createworldtemplate-l5-lambda-bc20e33a775adc61e26b6412226bb3d7","children":[]},{"level":3,"title":"CustomTemplatesScreenController::_createWorldTemplate::__l5::<lambda_bc20e33a775adc61e26b6412226bb3d7>::()::__l5::<lambda_1e628f6eed268bb442e37bdf2a00b8a2>","slug":"customtemplatesscreencontroller-createworldtemplate-l5-lambda-bc20e33a775adc61e26b6412226bb3d7-l5-lambda-1e628f6eed268bb442e37bdf2a00b8a2","link":"#customtemplatesscreencontroller-createworldtemplate-l5-lambda-bc20e33a775adc61e26b6412226bb3d7-l5-lambda-1e628f6eed268bb442e37bdf2a00b8a2","children":[]},{"level":3,"title":"ClientInstanceScreenController","slug":"clientinstancescreencontroller","link":"#clientinstancescreencontroller","children":[]},{"level":3,"title":"ContentTierInfo","slug":"contenttierinfo","link":"#contenttierinfo","children":[]},{"level":3,"title":"Clubs::ClubModel","slug":"clubs-clubmodel","link":"#clubs-clubmodel","children":[]},{"level":3,"title":"ControlScreenAction","slug":"controlscreenaction","link":"#controlscreenaction","children":[]},{"level":3,"title":"CommandSyntaxInformation","slug":"commandsyntaxinformation","link":"#commandsyntaxinformation","children":[]},{"level":3,"title":"Core::ZipUtils::ZipFileRestrictions","slug":"core-ziputils-zipfilerestrictions","link":"#core-ziputils-zipfilerestrictions","children":[]},{"level":3,"title":"Core::ZipUtils::ZipProgress","slug":"core-ziputils-zipprogress","link":"#core-ziputils-zipprogress","children":[]},{"level":3,"title":"CommandBlockComponent","slug":"commandblockcomponent","link":"#commandblockcomponent","children":[]},{"level":3,"title":"CommonSearchResults","slug":"commonsearchresults","link":"#commonsearchresults","children":[]},{"level":3,"title":"ClientInstanceScreenModel::navigateToLeaveLevelScreen::__l5::<lambda_ef00954ff1e757a0ee5bf3eac0e1e9ef>::()::__l5::<lambda_f55e9c9a0c9d5b1a28a0ec013240d974>","slug":"clientinstancescreenmodel-navigatetoleavelevelscreen-l5-lambda-ef00954ff1e757a0ee5bf3eac0e1e9ef-l5-lambda-f55e9c9a0c9d5b1a28a0ec013240d974","link":"#clientinstancescreenmodel-navigatetoleavelevelscreen-l5-lambda-ef00954ff1e757a0ee5bf3eac0e1e9ef-l5-lambda-f55e9c9a0c9d5b1a28a0ec013240d974","children":[]},{"level":3,"title":"ClientInstanceScreenModel::initiateGLBFileSave::__l5::<lambda_18e2ef64fe5ed0094ca318e07172f502>","slug":"clientinstancescreenmodel-initiateglbfilesave-l5-lambda-18e2ef64fe5ed0094ca318e07172f502","link":"#clientinstancescreenmodel-initiateglbfilesave-l5-lambda-18e2ef64fe5ed0094ca318e07172f502","children":[]},{"level":3,"title":"Crypto::Hash::Hash","slug":"crypto-hash-hash","link":"#crypto-hash-hash","children":[]},{"level":3,"title":"Crypto::Hash::IHash","slug":"crypto-hash-ihash","link":"#crypto-hash-ihash","children":[]},{"level":3,"title":"ClipAreas","slug":"clipareas","link":"#clipareas","children":[]},{"level":3,"title":"ClippedControlMetadata","slug":"clippedcontrolmetadata","link":"#clippedcontrolmetadata","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l5::<lambda_f4ef36c9c2241edd05e2049a4cc37d3c>","slug":"clientbindingfactory-getareabinding-l5-lambda-f4ef36c9c2241edd05e2049a4cc37d3c","link":"#clientbindingfactory-getareabinding-l5-lambda-f4ef36c9c2241edd05e2049a4cc37d3c","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l9::<lambda_86bc8e749623499401e3fdbcc7ae7f39>","slug":"clientbindingfactory-getareabinding-l9-lambda-86bc8e749623499401e3fdbcc7ae7f39","link":"#clientbindingfactory-getareabinding-l9-lambda-86bc8e749623499401e3fdbcc7ae7f39","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l13::<lambda_dcb08eb3e54defb9e64370fd721b66b7>","slug":"clientbindingfactory-getareabinding-l13-lambda-dcb08eb3e54defb9e64370fd721b66b7","link":"#clientbindingfactory-getareabinding-l13-lambda-dcb08eb3e54defb9e64370fd721b66b7","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l17::<lambda_6b703eda3e6b7618b784bcc537ad3c62>","slug":"clientbindingfactory-getareabinding-l17-lambda-6b703eda3e6b7618b784bcc537ad3c62","link":"#clientbindingfactory-getareabinding-l17-lambda-6b703eda3e6b7618b784bcc537ad3c62","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l21::<lambda_363f1cc72b078a154ed0ead09b4d024d>","slug":"clientbindingfactory-getareabinding-l21-lambda-363f1cc72b078a154ed0ead09b4d024d","link":"#clientbindingfactory-getareabinding-l21-lambda-363f1cc72b078a154ed0ead09b4d024d","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l25::<lambda_fa86098d63427aae10170ef55fc211e6>","slug":"clientbindingfactory-getareabinding-l25-lambda-fa86098d63427aae10170ef55fc211e6","link":"#clientbindingfactory-getareabinding-l25-lambda-fa86098d63427aae10170ef55fc211e6","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l29::<lambda_4ad4abaf36d194589aeacc2087f8e5d8>","slug":"clientbindingfactory-getareabinding-l29-lambda-4ad4abaf36d194589aeacc2087f8e5d8","link":"#clientbindingfactory-getareabinding-l29-lambda-4ad4abaf36d194589aeacc2087f8e5d8","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l33::<lambda_c124153a23bc74bb259e700314fabfe5>","slug":"clientbindingfactory-getareabinding-l33-lambda-c124153a23bc74bb259e700314fabfe5","link":"#clientbindingfactory-getareabinding-l33-lambda-c124153a23bc74bb259e700314fabfe5","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l37::<lambda_ad03e7fd0cd44601e962483c0c526b9c>","slug":"clientbindingfactory-getareabinding-l37-lambda-ad03e7fd0cd44601e962483c0c526b9c","link":"#clientbindingfactory-getareabinding-l37-lambda-ad03e7fd0cd44601e962483c0c526b9c","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l41::<lambda_15d4d27fc3fab10c113ccc141c937ae8>","slug":"clientbindingfactory-getareabinding-l41-lambda-15d4d27fc3fab10c113ccc141c937ae8","link":"#clientbindingfactory-getareabinding-l41-lambda-15d4d27fc3fab10c113ccc141c937ae8","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l45::<lambda_8ff1de1eef774dd1106ac7f5857e2d9b>","slug":"clientbindingfactory-getareabinding-l45-lambda-8ff1de1eef774dd1106ac7f5857e2d9b","link":"#clientbindingfactory-getareabinding-l45-lambda-8ff1de1eef774dd1106ac7f5857e2d9b","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l49::<lambda_b41f787d80d65477826583f3d77947ad>","slug":"clientbindingfactory-getareabinding-l49-lambda-b41f787d80d65477826583f3d77947ad","link":"#clientbindingfactory-getareabinding-l49-lambda-b41f787d80d65477826583f3d77947ad","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l53::<lambda_02e65bc75bc403a0d5915dac1a58e8c2>","slug":"clientbindingfactory-getareabinding-l53-lambda-02e65bc75bc403a0d5915dac1a58e8c2","link":"#clientbindingfactory-getareabinding-l53-lambda-02e65bc75bc403a0d5915dac1a58e8c2","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l57::<lambda_662ee5d55e561d65a044d078186e83d9>","slug":"clientbindingfactory-getareabinding-l57-lambda-662ee5d55e561d65a044d078186e83d9","link":"#clientbindingfactory-getareabinding-l57-lambda-662ee5d55e561d65a044d078186e83d9","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l65::<lambda_11cb320c71eb9c2c133ff6d68d8de661>","slug":"clientbindingfactory-getareabinding-l65-lambda-11cb320c71eb9c2c133ff6d68d8de661","link":"#clientbindingfactory-getareabinding-l65-lambda-11cb320c71eb9c2c133ff6d68d8de661","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l69::<lambda_9003cc46be8ff06e6019466117b648cb>","slug":"clientbindingfactory-getareabinding-l69-lambda-9003cc46be8ff06e6019466117b648cb","link":"#clientbindingfactory-getareabinding-l69-lambda-9003cc46be8ff06e6019466117b648cb","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l73::<lambda_63d65d763c745e34cfd24e2ed9e972e9>","slug":"clientbindingfactory-getareabinding-l73-lambda-63d65d763c745e34cfd24e2ed9e972e9","link":"#clientbindingfactory-getareabinding-l73-lambda-63d65d763c745e34cfd24e2ed9e972e9","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l81::<lambda_91076f5a9a3c55292508097fc4d6fac7>","slug":"clientbindingfactory-getareabinding-l81-lambda-91076f5a9a3c55292508097fc4d6fac7","link":"#clientbindingfactory-getareabinding-l81-lambda-91076f5a9a3c55292508097fc4d6fac7","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l85::<lambda_feb1532674b9f50b160f3ecdb14b5bbc>","slug":"clientbindingfactory-getareabinding-l85-lambda-feb1532674b9f50b160f3ecdb14b5bbc","link":"#clientbindingfactory-getareabinding-l85-lambda-feb1532674b9f50b160f3ecdb14b5bbc","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l89::<lambda_3045ae51b964740e158387af04a53e99>","slug":"clientbindingfactory-getareabinding-l89-lambda-3045ae51b964740e158387af04a53e99","link":"#clientbindingfactory-getareabinding-l89-lambda-3045ae51b964740e158387af04a53e99","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l93::<lambda_98c915c68a450916aaedca71464fb20d>","slug":"clientbindingfactory-getareabinding-l93-lambda-98c915c68a450916aaedca71464fb20d","link":"#clientbindingfactory-getareabinding-l93-lambda-98c915c68a450916aaedca71464fb20d","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l97::<lambda_30a6bbd5c8267ea08db9dc591f356dc6>","slug":"clientbindingfactory-getareabinding-l97-lambda-30a6bbd5c8267ea08db9dc591f356dc6","link":"#clientbindingfactory-getareabinding-l97-lambda-30a6bbd5c8267ea08db9dc591f356dc6","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l101::<lambda_9dbc146f72c67fa5eb0eb81ee8beb838>","slug":"clientbindingfactory-getareabinding-l101-lambda-9dbc146f72c67fa5eb0eb81ee8beb838","link":"#clientbindingfactory-getareabinding-l101-lambda-9dbc146f72c67fa5eb0eb81ee8beb838","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l105::<lambda_8236814038f22a3770d7eb365f42c1bb>","slug":"clientbindingfactory-getareabinding-l105-lambda-8236814038f22a3770d7eb365f42c1bb","link":"#clientbindingfactory-getareabinding-l105-lambda-8236814038f22a3770d7eb365f42c1bb","children":[]},{"level":3,"title":"ClientBindingFactory::getAreaBinding::__l109::<lambda_5be19c9e68037c701d60f79feeb8b6fc>","slug":"clientbindingfactory-getareabinding-l109-lambda-5be19c9e68037c701d60f79feeb8b6fc","link":"#clientbindingfactory-getareabinding-l109-lambda-5be19c9e68037c701d60f79feeb8b6fc","children":[]},{"level":3,"title":"ClientBindingFactory","slug":"clientbindingfactory","link":"#clientbindingfactory","children":[]},{"level":3,"title":"ChannelListQuery","slug":"channellistquery","link":"#channellistquery","children":[]},{"level":3,"title":"Cube","slug":"cube","link":"#cube","children":[]},{"level":3,"title":"Cube::FaceUVData","slug":"cube-faceuvdata","link":"#cube-faceuvdata","children":[]},{"level":3,"title":"ClientNetworkHandler::handle::__l2::<lambda_3a932b1c4cad8a420efad8f5991d860f>","slug":"clientnetworkhandler-handle-l2-lambda-3a932b1c4cad8a420efad8f5991d860f","link":"#clientnetworkhandler-handle-l2-lambda-3a932b1c4cad8a420efad8f5991d860f","children":[]},{"level":3,"title":"ClientNetworkHandler::handle::__l2::<lambda_57a8c0175a82e2b1f2fddb694a815e8f>","slug":"clientnetworkhandler-handle-l2-lambda-57a8c0175a82e2b1f2fddb694a815e8f","link":"#clientnetworkhandler-handle-l2-lambda-57a8c0175a82e2b1f2fddb694a815e8f","children":[]},{"level":3,"title":"ClientNetworkHandler::handle::__l2::<lambda_f7c9cc170d1b2d687b5ef307e2dd2a5f>","slug":"clientnetworkhandler-handle-l2-lambda-f7c9cc170d1b2d687b5ef307e2dd2a5f","link":"#clientnetworkhandler-handle-l2-lambda-f7c9cc170d1b2d687b5ef307e2dd2a5f","children":[]},{"level":3,"title":"ClientNetworkHandler::handle::__l2::<lambda_f7c9cc170d1b2d687b5ef307e2dd2a5f>::()::__l5::<lambda_c1b3156103bb292e2178303c3a153411>","slug":"clientnetworkhandler-handle-l2-lambda-f7c9cc170d1b2d687b5ef307e2dd2a5f-l5-lambda-c1b3156103bb292e2178303c3a153411","link":"#clientnetworkhandler-handle-l2-lambda-f7c9cc170d1b2d687b5ef307e2dd2a5f-l5-lambda-c1b3156103bb292e2178303c3a153411","children":[]},{"level":3,"title":"ClientNetworkHandler::handle::__l2::<lambda_d12db79ea14521c577faa9163e217abc>","slug":"clientnetworkhandler-handle-l2-lambda-d12db79ea14521c577faa9163e217abc","link":"#clientnetworkhandler-handle-l2-lambda-d12db79ea14521c577faa9163e217abc","children":[]},{"level":3,"title":"ConnectionRequest","slug":"connectionrequest","link":"#connectionrequest","children":[]},{"level":3,"title":"ContainerOpenPacket","slug":"containeropenpacket","link":"#containeropenpacket","children":[]},{"level":3,"title":"ContainerComponent","slug":"containercomponent","link":"#containercomponent","children":[]},{"level":3,"title":"ContainerContentChangeListener","slug":"containercontentchangelistener","link":"#containercontentchangelistener","children":[]},{"level":3,"title":"ChatOptions::ChatOption","slug":"chatoptions-chatoption","link":"#chatoptions-chatoption","children":[]},{"level":3,"title":"ConstDeserializeDataParams","slug":"constdeserializedataparams","link":"#constdeserializedataparams","children":[]},{"level":3,"title":"Core::InputFileStream","slug":"core-inputfilestream","link":"#core-inputfilestream","children":[]},{"level":3,"title":"CommonResourceDefinitionMap","slug":"commonresourcedefinitionmap","link":"#commonresourcedefinitionmap","children":[]},{"level":3,"title":"ClientBlockPipeline::Transforms","slug":"clientblockpipeline-transforms","link":"#clientblockpipeline-transforms","children":[]},{"level":3,"title":"ChalkboardBlockActor::CachedMessageData","slug":"chalkboardblockactor-cachedmessagedata","link":"#chalkboardblockactor-cachedmessagedata","children":[]},{"level":3,"title":"ChalkboardBlockActor::CachedLineData","slug":"chalkboardblockactor-cachedlinedata","link":"#chalkboardblockactor-cachedlinedata","children":[]},{"level":3,"title":"ChunkBlockPos","slug":"chunkblockpos","link":"#chunkblockpos","children":[]},{"level":3,"title":"ChunkSource","slug":"chunksource","link":"#chunksource","children":[]},{"level":3,"title":"CubeMap::renderCubeMap::__l17::<lambda_260eef0ecc0f3850dffbb1b638223cba>","slug":"cubemap-rendercubemap-l17-lambda-260eef0ecc0f3850dffbb1b638223cba","link":"#cubemap-rendercubemap-l17-lambda-260eef0ecc0f3850dffbb1b638223cba","children":[]},{"level":3,"title":"ClientRenderData","slug":"clientrenderdata","link":"#clientrenderdata","children":[]},{"level":3,"title":"CloudRenderObject","slug":"cloudrenderobject","link":"#cloudrenderobject","children":[]},{"level":3,"title":"ChunkRenderObjectCollection","slug":"chunkrenderobjectcollection","link":"#chunkrenderobjectcollection","children":[]},{"level":3,"title":"CrackRenderObjectCollection","slug":"crackrenderobjectcollection","link":"#crackrenderobjectcollection","children":[]},{"level":3,"title":"CrackRenderObject","slug":"crackrenderobject","link":"#crackrenderobject","children":[]},{"level":3,"title":"cg::BufferSpan","slug":"cg-bufferspan","link":"#cg-bufferspan","children":[]},{"level":3,"title":"cg::BufferDescription","slug":"cg-bufferdescription","link":"#cg-bufferdescription","children":[]},{"level":3,"title":"cg::RenderMaterialGroupLoader<std::unordered_map<HashedString,std::shared_ptr<mce::RenderMaterialInfo>,std::hash<HashedString>,std::equal_to<HashedString>,std::allocator<std::pair<HashedString const ,std::shared_ptr<mce::RenderMaterialInfo> > > >,mce::RenderMaterial,mce::RenderMaterialInfo,ResourcePackManager>","slug":"cg-rendermaterialgrouploader-std-unordered-map-hashedstring-std-shared-ptr-mce-rendermaterialinfo-std-hash-hashedstring-std-equal-to-hashedstring-std-allocator-std-pair-hashedstring-const-std-shared-ptr-mce-rendermaterialinfo-mce-rendermaterial-mce-rendermaterialinfo-resourcepackmanager","link":"#cg-rendermaterialgrouploader-std-unordered-map-hashedstring-std-shared-ptr-mce-rendermaterialinfo-std-hash-hashedstring-std-equal-to-hashedstring-std-allocator-std-pair-hashedstring-const-std-shared-ptr-mce-rendermaterialinfo-mce-rendermaterial-mce-rendermaterialinfo-resourcepackmanager","children":[]},{"level":3,"title":"cg::RenderFeaturesConfiguration","slug":"cg-renderfeaturesconfiguration","link":"#cg-renderfeaturesconfiguration","children":[]},{"level":3,"title":"cg::RenderMaterialBase","slug":"cg-rendermaterialbase","link":"#cg-rendermaterialbase","children":[]},{"level":3,"title":"cg::VariationMap","slug":"cg-variationmap","link":"#cg-variationmap","children":[]},{"level":3,"title":"cg::ResourceManager<std::shared_ptr<cg::ImageBuffer>,ResourceLocation,SharedImageBufferTracker,std::shared_ptr<cg::ImageBuffer>,std::map>","slug":"cg-resourcemanager-std-shared-ptr-cg-imagebuffer-resourcelocation-sharedimagebuffertracker-std-shared-ptr-cg-imagebuffer-std-map","link":"#cg-resourcemanager-std-shared-ptr-cg-imagebuffer-resourcelocation-sharedimagebuffertracker-std-shared-ptr-cg-imagebuffer-std-map","children":[]},{"level":3,"title":"ContentCatalogPackSource::_collectAllCatalogItems::__l2::<lambda_baa95d9a96c4efb4ae292f92f510cc21>","slug":"contentcatalogpacksource-collectallcatalogitems-l2-lambda-baa95d9a96c4efb4ae292f92f510cc21","link":"#contentcatalogpacksource-collectallcatalogitems-l2-lambda-baa95d9a96c4efb4ae292f92f510cc21","children":[]},{"level":3,"title":"ContentCatalogPackSource::_addCatalogItemsFromSearch::__l9::<lambda_6c2cc72359c8774f2a3e9185f6c63471>","slug":"contentcatalogpacksource-addcatalogitemsfromsearch-l9-lambda-6c2cc72359c8774f2a3e9185f6c63471","link":"#contentcatalogpacksource-addcatalogitemsfromsearch-l9-lambda-6c2cc72359c8774f2a3e9185f6c63471","children":[]},{"level":3,"title":"Core::ZipUtils::UnzipSettings","slug":"core-ziputils-unzipsettings","link":"#core-ziputils-unzipsettings","children":[]},{"level":3,"title":"ContentAcquisition::searchForDlcIdsByPackIds::__l11::<lambda_b5e7ac097f87844b528ff4a5d3cae47b>","slug":"contentacquisition-searchfordlcidsbypackids-l11-lambda-b5e7ac097f87844b528ff4a5d3cae47b","link":"#contentacquisition-searchfordlcidsbypackids-l11-lambda-b5e7ac097f87844b528ff4a5d3cae47b","children":[]},{"level":3,"title":"ContentAcquisition::searchForDlcIdsByPackIds::__l6::<lambda_1d55797dc2ac18165f6bbd44e10719d3>","slug":"contentacquisition-searchfordlcidsbypackids-l6-lambda-1d55797dc2ac18165f6bbd44e10719d3","link":"#contentacquisition-searchfordlcidsbypackids-l6-lambda-1d55797dc2ac18165f6bbd44e10719d3","children":[]},{"level":3,"title":"ContentAcquisition::checkStorageRequirements::__l2::<lambda_9e238074f4708f40d39951c6bbb8c3d5>","slug":"contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5","link":"#contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5","children":[]},{"level":3,"title":"ContentAcquisition::checkStorageRequirements::__l2::<lambda_9e238074f4708f40d39951c6bbb8c3d5>::()::__l2::<lambda_23d0a1b8fd39adaa4c0cd04cd9e72a88>::()::__l5::<lambda_fb76be13b8fe047662fa721a3a77c9bb>","slug":"contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88-l5-lambda-fb76be13b8fe047662fa721a3a77c9bb","link":"#contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88-l5-lambda-fb76be13b8fe047662fa721a3a77c9bb","children":[]},{"level":3,"title":"ContentAcquisition::checkStorageRequirements::__l2::<lambda_9e238074f4708f40d39951c6bbb8c3d5>::()::__l6::<lambda_5be28da840c3ba3420f6b07d0ad08a78>","slug":"contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l6-lambda-5be28da840c3ba3420f6b07d0ad08a78","link":"#contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l6-lambda-5be28da840c3ba3420f6b07d0ad08a78","children":[]},{"level":3,"title":"ContentAcquisition::checkStorageRequirements::__l2::<lambda_9e238074f4708f40d39951c6bbb8c3d5>::()::__l2::<lambda_23d0a1b8fd39adaa4c0cd04cd9e72a88>","slug":"contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88","link":"#contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88","children":[]},{"level":3,"title":"ContentTracker::fetchFileSize::__l7::<lambda_aa9599aea01d6dd62378f60e02738f2f>","slug":"contenttracker-fetchfilesize-l7-lambda-aa9599aea01d6dd62378f60e02738f2f","link":"#contenttracker-fetchfilesize-l7-lambda-aa9599aea01d6dd62378f60e02738f2f","children":[]},{"level":3,"title":"ContentAcquisition::checkStorageRequirements::__l2::<lambda_9e238074f4708f40d39951c6bbb8c3d5>::()::__l2::<lambda_23d0a1b8fd39adaa4c0cd04cd9e72a88>::()::__l5::<lambda_fb76be13b8fe047662fa721a3a77c9bb>::()::__l5::<lambda_5dde433396ba1836ea97aad5da28a35d>","slug":"contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88-l5-lambda-fb76be13b8fe047662fa721a3a77c9bb-l5-lambda-5dde433396ba1836ea97aad5da28a35d","link":"#contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88-l5-lambda-fb76be13b8fe047662fa721a3a77c9bb-l5-lambda-5dde433396ba1836ea97aad5da28a35d","children":[]},{"level":3,"title":"ContentAcquisition::checkStorageRequirements::__l2::<lambda_9e238074f4708f40d39951c6bbb8c3d5>::()::__l2::<lambda_23d0a1b8fd39adaa4c0cd04cd9e72a88>::()::__l5::<lambda_fb76be13b8fe047662fa721a3a77c9bb>::()::__l5::<lambda_06fba6772e5a40319ba863ad66ed81c5>","slug":"contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88-l5-lambda-fb76be13b8fe047662fa721a3a77c9bb-l5-lambda-06fba6772e5a40319ba863ad66ed81c5","link":"#contentacquisition-checkstoragerequirements-l2-lambda-9e238074f4708f40d39951c6bbb8c3d5-l2-lambda-23d0a1b8fd39adaa4c0cd04cd9e72a88-l5-lambda-fb76be13b8fe047662fa721a3a77c9bb-l5-lambda-06fba6772e5a40319ba863ad66ed81c5","children":[]},{"level":3,"title":"ContentAcquisition::getTitles::__l6::<lambda_6b2ec6fd37d40446a41ee22bbc465839>","slug":"contentacquisition-gettitles-l6-lambda-6b2ec6fd37d40446a41ee22bbc465839","link":"#contentacquisition-gettitles-l6-lambda-6b2ec6fd37d40446a41ee22bbc465839","children":[]},{"level":3,"title":"ContentAcquisition::getTitles::__l2::<lambda_c6179e0117411f607c7c2f5e595ff517>","slug":"contentacquisition-gettitles-l2-lambda-c6179e0117411f607c7c2f5e595ff517","link":"#contentacquisition-gettitles-l2-lambda-c6179e0117411f607c7c2f5e595ff517","children":[]},{"level":3,"title":"ContentTracker::fetchTitle::__l7::<lambda_580c010aa240fa46c9d3dfd81e8f23e3>","slug":"contenttracker-fetchtitle-l7-lambda-580c010aa240fa46c9d3dfd81e8f23e3","link":"#contenttracker-fetchtitle-l7-lambda-580c010aa240fa46c9d3dfd81e8f23e3","children":[]},{"level":3,"title":"ContentAcquisition::DownloadCallback","slug":"contentacquisition-downloadcallback","link":"#contentacquisition-downloadcallback","children":[]},{"level":3,"title":"ContentAcquisition::_getAvailableDiskFreeSpaceAsync::__l2::<lambda_450f8a999d305d9c737ff19408a1e820>","slug":"contentacquisition-getavailablediskfreespaceasync-l2-lambda-450f8a999d305d9c737ff19408a1e820","link":"#contentacquisition-getavailablediskfreespaceasync-l2-lambda-450f8a999d305d9c737ff19408a1e820","children":[]},{"level":3,"title":"ContentTracker::fetchFileSize::__l7::<lambda_aa9599aea01d6dd62378f60e02738f2f>::()::__l5::<lambda_b649e17da3516653addd3c4881defd02>","slug":"contenttracker-fetchfilesize-l7-lambda-aa9599aea01d6dd62378f60e02738f2f-l5-lambda-b649e17da3516653addd3c4881defd02","link":"#contenttracker-fetchfilesize-l7-lambda-aa9599aea01d6dd62378f60e02738f2f-l5-lambda-b649e17da3516653addd3c4881defd02","children":[]},{"level":3,"title":"ContentTracker::_fetchContentDetails::__l2::<lambda_852b98f00350dbcb07efe1ff2bc71eec>","slug":"contenttracker-fetchcontentdetails-l2-lambda-852b98f00350dbcb07efe1ff2bc71eec","link":"#contenttracker-fetchcontentdetails-l2-lambda-852b98f00350dbcb07efe1ff2bc71eec","children":[]},{"level":3,"title":"ContentTracker::_importLegacyMusicPack::__l2::<lambda_e71312bd262726470a6492efa540d394>","slug":"contenttracker-importlegacymusicpack-l2-lambda-e71312bd262726470a6492efa540d394","link":"#contenttracker-importlegacymusicpack-l2-lambda-e71312bd262726470a6492efa540d394","children":[]},{"level":3,"title":"ContentTracker::_importLegacyMusicPack::__l2::<lambda_4ae52eb2e663e20b64225feacde9ef21>","slug":"contenttracker-importlegacymusicpack-l2-lambda-4ae52eb2e663e20b64225feacde9ef21","link":"#contenttracker-importlegacymusicpack-l2-lambda-4ae52eb2e663e20b64225feacde9ef21","children":[]},{"level":3,"title":"ContentAcquisition::DownloadHistory","slug":"contentacquisition-downloadhistory","link":"#contentacquisition-downloadhistory","children":[]},{"level":3,"title":"Core::CallbackListeners<int,enum Social::SignInResult>::Listener","slug":"core-callbacklisteners-int-enum-social-signinresult-listener","link":"#core-callbacklisteners-int-enum-social-signinresult-listener","children":[]},{"level":3,"title":"CSHA1","slug":"csha1","link":"#csha1","children":[]},{"level":3,"title":"CloudSaveSystemWrapper::isSettingsOutOfDate::__l13::<lambda_c97df555e43ec3a5e05f628f8af02513>","slug":"cloudsavesystemwrapper-issettingsoutofdate-l13-lambda-c97df555e43ec3a5e05f628f8af02513","link":"#cloudsavesystemwrapper-issettingsoutofdate-l13-lambda-c97df555e43ec3a5e05f628f8af02513","children":[]},{"level":3,"title":"CloudSaveSystemWrapper::acquireSettingsAsync::__l13::<lambda_7bb126be8a3e79d11e6699d2a94b7bda>","slug":"cloudsavesystemwrapper-acquiresettingsasync-l13-lambda-7bb126be8a3e79d11e6699d2a94b7bda","link":"#cloudsavesystemwrapper-acquiresettingsasync-l13-lambda-7bb126be8a3e79d11e6699d2a94b7bda","children":[]},{"level":3,"title":"CDScopedEvent","slug":"cdscopedevent","link":"#cdscopedevent","children":[]},{"level":3,"title":"Concurrency::details::_MakeVoidToUnitFunc::__l2::<lambda_052e919cc0e5399df76dff3972c0cac1>","slug":"concurrency-details-makevoidtounitfunc-l2-lambda-052e919cc0e5399df76dff3972c0cac1","link":"#concurrency-details-makevoidtounitfunc-l2-lambda-052e919cc0e5399df76dff3972c0cac1","children":[]},{"level":3,"title":"Concurrency::details::_DefaultPPLTaskScheduler","slug":"concurrency-details-defaultppltaskscheduler","link":"#concurrency-details-defaultppltaskscheduler","children":[]},{"level":3,"title":"Concurrency::scheduler_interface","slug":"concurrency-scheduler-interface","link":"#concurrency-scheduler-interface","children":[]},{"level":3,"title":"Concurrency::details::_Task_impl_base::_ScheduleContinuationTask::__l5::<lambda_713ee8bbd6b08550d59c52695cab5ce3>::()::__l8::<lambda_f25c37099038263181b5186a3fa41b37>","slug":"concurrency-details-task-impl-base-schedulecontinuationtask-l5-lambda-713ee8bbd6b08550d59c52695cab5ce3-l8-lambda-f25c37099038263181b5186a3fa41b37","link":"#concurrency-details-task-impl-base-schedulecontinuationtask-l5-lambda-713ee8bbd6b08550d59c52695cab5ce3-l8-lambda-f25c37099038263181b5186a3fa41b37","children":[]},{"level":3,"title":"Concurrency::invalid_operation","slug":"concurrency-invalid-operation","link":"#concurrency-invalid-operation","children":[]},{"level":3,"title":"cg::details::WorkToken::asLifetime::__l2::<lambda_89b2dae39f23600ad3e66c7a2b82fa2b>","slug":"cg-details-worktoken-aslifetime-l2-lambda-89b2dae39f23600ad3e66c7a2b82fa2b","link":"#cg-details-worktoken-aslifetime-l2-lambda-89b2dae39f23600ad3e66c7a2b82fa2b","children":[]},{"level":3,"title":"CommandListQueue::generateAsync::__l5::<lambda_7ffb9bb526d84acb0ee651a3ebd1913c>","slug":"commandlistqueue-generateasync-l5-lambda-7ffb9bb526d84acb0ee651a3ebd1913c","link":"#commandlistqueue-generateasync-l5-lambda-7ffb9bb526d84acb0ee651a3ebd1913c","children":[]},{"level":3,"title":"cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>::execute::__l2::<lambda_2cf6a093770e7d9b1aecca19f5efb284>","slug":"cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-execute-l2-lambda-2cf6a093770e7d9b1aecca19f5efb284","link":"#cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-execute-l2-lambda-2cf6a093770e7d9b1aecca19f5efb284","children":[]},{"level":3,"title":"cg::TaskPoolGroupExecutionPolicy<std::nullptr_t,1>::{ctor}::__l2::<lambda_6874d52efc76d8cff42ccf8c811d2193>","slug":"cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-ctor-l2-lambda-6874d52efc76d8cff42ccf8c811d2193","link":"#cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-ctor-l2-lambda-6874d52efc76d8cff42ccf8c811d2193","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<dragon::frameobject::PreparedDraw,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-dragon-frameobject-prepareddraw-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-dragon-frameobject-prepareddraw-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<dragon::materials::MaterialUniformOverrides::UniformPair,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-dragon-materials-materialuniformoverrides-uniformpair-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-dragon-materials-materialuniformoverrides-uniformpair-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::BlitTaskContext,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-blittaskcontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-blittaskcontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::BlitTaskContext>","slug":"cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-blittaskcontext","link":"#cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-blittaskcontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilder<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilder-dragon-framegraph-executioncontext-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilder-dragon-framegraph-executioncontext-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::math::Rect<unsigned short>","slug":"cg-math-rect-unsigned-short","link":"#cg-math-rect-unsigned-short","children":[]},{"level":3,"title":"cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >","slug":"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","link":"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void>","slug":"cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void","link":"#cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void","children":[]},{"level":3,"title":"cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >","slug":"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","link":"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<std::pair<dragon::framegraph::detail::AbstractPass<dragon::rendering::RenderContext> const *,dragon::framegraph::detail::LinkingContext<dragon::rendering::RenderContext> *>,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-std-pair-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-const-dragon-framegraph-detail-linkingcontext-dragon-rendering-rendercontext-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-std-pair-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-const-dragon-framegraph-detail-linkingcontext-dragon-rendering-rendercontext-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<glm::tvec4<float,0>,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-glm-tvec4-float-0-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-glm-tvec4-float-0-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<glm::tmat3x3<float,0>,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-glm-tmat3x3-float-0-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-glm-tmat3x3-float-0-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<glm::tmat4x4<float,0>,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-glm-tmat4x4-float-0-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-glm-tmat4x4-float-0-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >","slug":"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","link":"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >","slug":"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","link":"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<dragon::frameobject::SceneLightingInformation::PointLight,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-dragon-frameobject-scenelightinginformation-pointlight-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-dragon-frameobject-scenelightinginformation-pointlight-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"cg::TextureMetaData","slug":"cg-texturemetadata","link":"#cg-texturemetadata","children":[]},{"level":3,"title":"ChunkRenderObjectCollection::addToChunkQueue::__l2::<lambda_4669a033a94b2cbc882de43740c3bcf3>","slug":"chunkrenderobjectcollection-addtochunkqueue-l2-lambda-4669a033a94b2cbc882de43740c3bcf3","link":"#chunkrenderobjectcollection-addtochunkqueue-l2-lambda-4669a033a94b2cbc882de43740c3bcf3","children":[]},{"level":3,"title":"ChunkRenderData","slug":"chunkrenderdata","link":"#chunkrenderdata","children":[]},{"level":3,"title":"CameraShakeEvent","slug":"camerashakeevent","link":"#camerashakeevent","children":[]},{"level":3,"title":"CameraShakeSystem::tick::__l2::<lambda_ff1179873d2d698a099b81d15231fa79>","slug":"camerashakesystem-tick-l2-lambda-ff1179873d2d698a099b81d15231fa79","link":"#camerashakesystem-tick-l2-lambda-ff1179873d2d698a099b81d15231fa79","children":[]},{"level":3,"title":"CommandParameterData","slug":"commandparameterdata","link":"#commandparameterdata","children":[]},{"level":3,"title":"CommandSelectorResults<Player>","slug":"commandselectorresults-player","link":"#commandselectorresults-player","children":[]},{"level":3,"title":"CommandOutputParameter","slug":"commandoutputparameter","link":"#commandoutputparameter","children":[]},{"level":3,"title":"ChunkLoadedRequest","slug":"chunkloadedrequest","link":"#chunkloadedrequest","children":[]},{"level":3,"title":"CommandAreaFactory","slug":"commandareafactory","link":"#commandareafactory","children":[]},{"level":3,"title":"cg::TextureSetLayerDefinition","slug":"cg-texturesetlayerdefinition","link":"#cg-texturesetlayerdefinition","children":[]},{"level":3,"title":"ComponentItem::_validateServerSchemaAndInitItem::__l2::<lambda_8fbf7210d948bc9a2c7c196ed13498ff>","slug":"componentitem-validateserverschemaandinititem-l2-lambda-8fbf7210d948bc9a2c7c196ed13498ff","link":"#componentitem-validateserverschemaandinititem-l2-lambda-8fbf7210d948bc9a2c7c196ed13498ff","children":[]},{"level":3,"title":"ComponentItem::_validateClientSchemaAndInitItem::__l2::<lambda_e04caa0b9c3fce21a3adffae430565da>","slug":"componentitem-validateclientschemaandinititem-l2-lambda-e04caa0b9c3fce21a3adffae430565da","link":"#componentitem-validateclientschemaandinititem-l2-lambda-e04caa0b9c3fce21a3adffae430565da","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_4b0d6bde792ed619e67322018f9b43c7>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-4b0d6bde792ed619e67322018f9b43c7","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-4b0d6bde792ed619e67322018f9b43c7","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_646300c760a21a5dee87bd50ffc76f84>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-646300c760a21a5dee87bd50ffc76f84","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-646300c760a21a5dee87bd50ffc76f84","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_bde458400d5e0c936f319b6fbc51f7ea>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-bde458400d5e0c936f319b6fbc51f7ea","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-bde458400d5e0c936f319b6fbc51f7ea","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_08a8fb2c819f7557ca2eb39a18b10555>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-08a8fb2c819f7557ca2eb39a18b10555","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-08a8fb2c819f7557ca2eb39a18b10555","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_7ac0608cb5cbb757eac814257996d998>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-7ac0608cb5cbb757eac814257996d998","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-7ac0608cb5cbb757eac814257996d998","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_27740b06e312776918dffed8bff42b16>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-27740b06e312776918dffed8bff42b16","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-27740b06e312776918dffed8bff42b16","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_6bba8aa0feff95e899fc6a8a254ef7bc>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-6bba8aa0feff95e899fc6a8a254ef7bc","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-6bba8aa0feff95e899fc6a8a254ef7bc","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_700e819f7949a3cf2c4a087a7587af4f>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-700e819f7949a3cf2c4a087a7587af4f","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-700e819f7949a3cf2c4a087a7587af4f","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_cb4ad2fefaa769f49c3ee0dd42da1168>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-cb4ad2fefaa769f49c3ee0dd42da1168","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-cb4ad2fefaa769f49c3ee0dd42da1168","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_5d561c02c26be577f9c5dd22c1d3cc29>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-5d561c02c26be577f9c5dd22c1d3cc29","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-5d561c02c26be577f9c5dd22c1d3cc29","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_d887d12a5e8c683324eafb3aff797194>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-d887d12a5e8c683324eafb3aff797194","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-d887d12a5e8c683324eafb3aff797194","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_2ae06341078d5910279305cbe94f0403>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-2ae06341078d5910279305cbe94f0403","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-2ae06341078d5910279305cbe94f0403","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_d430a32fa966086497fdee2689d5f072>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-d430a32fa966086497fdee2689d5f072","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-d430a32fa966086497fdee2689d5f072","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_2e61ce2ecee42b8c801d2a0fce372345>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-2e61ce2ecee42b8c801d2a0fce372345","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-2e61ce2ecee42b8c801d2a0fce372345","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_f11da43554209a966dd612f49a500c13>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-f11da43554209a966dd612f49a500c13","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-f11da43554209a966dd612f49a500c13","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_d138d2cc7881ec912693e17053aa36d3>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-d138d2cc7881ec912693e17053aa36d3","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-d138d2cc7881ec912693e17053aa36d3","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_08c154647375c28c098b616470505c81>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-08c154647375c28c098b616470505c81","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-08c154647375c28c098b616470505c81","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_8d2b9f4c977ef7bcf18b00933e8d133c>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-8d2b9f4c977ef7bcf18b00933e8d133c","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-8d2b9f4c977ef7bcf18b00933e8d133c","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_720d686375472b328e72c11b0a4529c9>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-720d686375472b328e72c11b0a4529c9","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-720d686375472b328e72c11b0a4529c9","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_f00f608ba659db531edffcb30f33581b>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-f00f608ba659db531edffcb30f33581b","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-f00f608ba659db531edffcb30f33581b","children":[]},{"level":3,"title":"CerealItemComponentFactory::registerComponent::__l2::<lambda_4f2170e72cbb54e6a6a019874716cd58>","slug":"cerealitemcomponentfactory-registercomponent-l2-lambda-4f2170e72cbb54e6a6a019874716cd58","link":"#cerealitemcomponentfactory-registercomponent-l2-lambda-4f2170e72cbb54e6a6a019874716cd58","children":[]},{"level":3,"title":"CappedSurfaceAttributes","slug":"cappedsurfaceattributes","link":"#cappedsurfaceattributes","children":[]},{"level":3,"title":"CommandRegistry::Parser","slug":"commandregistry-parser","link":"#commandregistry-parser","children":[]},{"level":3,"title":"CommandRegistry::LexicalToken","slug":"commandregistry-lexicaltoken","link":"#commandregistry-lexicaltoken","children":[]},{"level":3,"title":"ContextAccessor","slug":"contextaccessor","link":"#contextaccessor","children":[]},{"level":3,"title":"CompoundTagVariant","slug":"compoundtagvariant","link":"#compoundtagvariant","children":[]},{"level":3,"title":"CompoundTagVariant::copy::__l2::<lambda_847acbaa2673dfafb4b947487bdf32fd>","slug":"compoundtagvariant-copy-l2-lambda-847acbaa2673dfafb4b947487bdf32fd","link":"#compoundtagvariant-copy-l2-lambda-847acbaa2673dfafb4b947487bdf32fd","children":[]},{"level":3,"title":"ClassroomModeNetworkHandler::onWebsocketRequest::__l13::<lambda_f8f06f33a691ac69d078ed77b77cf8f8>","slug":"classroommodenetworkhandler-onwebsocketrequest-l13-lambda-f8f06f33a691ac69d078ed77b77cf8f8","link":"#classroommodenetworkhandler-onwebsocketrequest-l13-lambda-f8f06f33a691ac69d078ed77b77cf8f8","children":[]},{"level":3,"title":"ClassroomModeNetworkHandler::_connect::__l2::<lambda_4c552053559105a51c96d1cc72ebc426>","slug":"classroommodenetworkhandler-connect-l2-lambda-4c552053559105a51c96d1cc72ebc426","link":"#classroommodenetworkhandler-connect-l2-lambda-4c552053559105a51c96d1cc72ebc426","children":[]},{"level":3,"title":"CommandOriginData","slug":"commandorigindata","link":"#commandorigindata","children":[]},{"level":3,"title":"CommandOutputMessage","slug":"commandoutputmessage","link":"#commandoutputmessage","children":[]},{"level":3,"title":"CraftingDataEntry","slug":"craftingdataentry","link":"#craftingdataentry","children":[]},{"level":3,"title":"CreativeItemEntry","slug":"creativeitementry","link":"#creativeitementry","children":[]},{"level":3,"title":"ConnectionDefinition","slug":"connectiondefinition","link":"#connectiondefinition","children":[]},{"level":3,"title":"Connector::NatPunchInfo","slug":"connector-natpunchinfo","link":"#connector-natpunchinfo","children":[]},{"level":3,"title":"CommandBlockUpdatePacket","slug":"commandblockupdatepacket","link":"#commandblockupdatepacket","children":[]},{"level":3,"title":"ClientboundMapItemDataPacket","slug":"clientboundmapitemdatapacket","link":"#clientboundmapitemdatapacket","children":[]},{"level":3,"title":"ConditionalBandwidthOptimization","slug":"conditionalbandwidthoptimization","link":"#conditionalbandwidthoptimization","children":[]},{"level":3,"title":"ConditionalBandwidthOptimizationComponent","slug":"conditionalbandwidthoptimizationcomponent","link":"#conditionalbandwidthoptimizationcomponent","children":[]},{"level":3,"title":"ContentTierManager::ValidatorRegistry::ValidatorRegistryValidators","slug":"contenttiermanager-validatorregistry-validatorregistryvalidators","link":"#contenttiermanager-validatorregistry-validatorregistryvalidators","children":[]},{"level":3,"title":"Crypto::Symmetric::Symmetric","slug":"crypto-symmetric-symmetric","link":"#crypto-symmetric-symmetric","children":[]},{"level":3,"title":"Crypto::Symmetric::ISystemInterface","slug":"crypto-symmetric-isysteminterface","link":"#crypto-symmetric-isysteminterface","children":[]},{"level":3,"title":"Core::ExcludedPath","slug":"core-excludedpath","link":"#core-excludedpath","children":[]},{"level":3,"title":"Core::ZipUtils::ZipSettings","slug":"core-ziputils-zipsettings","link":"#core-ziputils-zipsettings","children":[]},{"level":3,"title":"Core::FileSystem::copyFile::__l2::<lambda_98acb2cebb3139e7dcaf8bae69363f0a>","slug":"core-filesystem-copyfile-l2-lambda-98acb2cebb3139e7dcaf8bae69363f0a","link":"#core-filesystem-copyfile-l2-lambda-98acb2cebb3139e7dcaf8bae69363f0a","children":[]},{"level":3,"title":"Core::UnzipFile","slug":"core-unzipfile","link":"#core-unzipfile","children":[]},{"level":3,"title":"ClientBlobCache::Server::Blob","slug":"clientblobcache-server-blob","link":"#clientblobcache-server-blob","children":[]},{"level":3,"title":"CommandIntegerRange","slug":"commandintegerrange","link":"#commandintegerrange","children":[]},{"level":3,"title":"CommandRegistry::parseSelector::__l243::<lambda_c6bfa6ab44c8dc5137236fba12271e1d>","slug":"commandregistry-parseselector-l243-lambda-c6bfa6ab44c8dc5137236fba12271e1d","link":"#commandregistry-parseselector-l243-lambda-c6bfa6ab44c8dc5137236fba12271e1d","children":[]},{"level":3,"title":"CommandRegistry::Signature","slug":"commandregistry-signature","link":"#commandregistry-signature","children":[]},{"level":3,"title":"CommandLexer","slug":"commandlexer","link":"#commandlexer","children":[]},{"level":3,"title":"CommandLexer::Token","slug":"commandlexer-token","link":"#commandlexer-token","children":[]},{"level":3,"title":"CommandRegistry::RegistryState","slug":"commandregistry-registrystate","link":"#commandregistry-registrystate","children":[]},{"level":3,"title":"CommandItem","slug":"commanditem","link":"#commanditem","children":[]},{"level":3,"title":"CloneCommand::execute::__l2::CloneBlockInfo","slug":"clonecommand-execute-l2-cloneblockinfo","link":"#clonecommand-execute-l2-cloneblockinfo","children":[]},{"level":3,"title":"ClientBlobCache::Server::TransferBuilder","slug":"clientblobcache-server-transferbuilder","link":"#clientblobcache-server-transferbuilder","children":[]},{"level":3,"title":"ClientBlobCache::Server::ActiveTransfer","slug":"clientblobcache-server-activetransfer","link":"#clientblobcache-server-activetransfer","children":[]},{"level":3,"title":"ChunkPositionAndDimension","slug":"chunkpositionanddimension","link":"#chunkpositionanddimension","children":[]},{"level":3,"title":"ContainerDescription","slug":"containerdescription","link":"#containerdescription","children":[]},{"level":3,"title":"CrashDumpEventData","slug":"crashdumpeventdata","link":"#crashdumpeventdata","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::match::__l2::<lambda_d6e645fd0760b5869a1c1fbc97f375e0>","slug":"compoundtagupdaterbuilder-match-l2-lambda-d6e645fd0760b5869a1c1fbc97f375e0","link":"#compoundtagupdaterbuilder-match-l2-lambda-d6e645fd0760b5869a1c1fbc97f375e0","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::tryEdit::__l2::<lambda_331080c9253f49c0e39d20a115988e3c>","slug":"compoundtagupdaterbuilder-tryedit-l2-lambda-331080c9253f49c0e39d20a115988e3c","link":"#compoundtagupdaterbuilder-tryedit-l2-lambda-331080c9253f49c0e39d20a115988e3c","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder::rename::__l2::<lambda_4bed7a15ca03b6882a582c4103e2a48e>","slug":"compoundtagupdaterbuilder-rename-l2-lambda-4bed7a15ca03b6882a582c4103e2a48e","link":"#compoundtagupdaterbuilder-rename-l2-lambda-4bed7a15ca03b6882a582c4103e2a48e","children":[]},{"level":3,"title":"Core::ZipUtils::ZipProgressList","slug":"core-ziputils-zipprogresslist","link":"#core-ziputils-zipprogresslist","children":[]},{"level":3,"title":"ClientParticleInitializationComponent","slug":"clientparticleinitializationcomponent","link":"#clientparticleinitializationcomponent","children":[]},{"level":3,"title":"ContainerValidation::assignValidationDelegates::__l12::<lambda_f3de1f01db6586c03466a09e7bf05768>","slug":"containervalidation-assignvalidationdelegates-l12-lambda-f3de1f01db6586c03466a09e7bf05768","link":"#containervalidation-assignvalidationdelegates-l12-lambda-f3de1f01db6586c03466a09e7bf05768","children":[]},{"level":3,"title":"CraftableCompounds","slug":"craftablecompounds","link":"#craftablecompounds","children":[]},{"level":3,"title":"ChemistryIngredient","slug":"chemistryingredient","link":"#chemistryingredient","children":[]},{"level":3,"title":"CreateContainerItemScope","slug":"createcontaineritemscope","link":"#createcontaineritemscope","children":[]},{"level":3,"title":"Container","slug":"container","link":"#container","children":[]},{"level":3,"title":"ContainerManagerController","slug":"containermanagercontroller","link":"#containermanagercontroller","children":[]},{"level":3,"title":"ChestBlockTryPairEvent","slug":"chestblocktrypairevent","link":"#chestblocktrypairevent","children":[]},{"level":3,"title":"CraftingContainer","slug":"craftingcontainer","link":"#craftingcontainer","children":[]},{"level":3,"title":"ContainerWeakRef","slug":"containerweakref","link":"#containerweakref","children":[]},{"level":3,"title":"ContainerWeakRefData","slug":"containerweakrefdata","link":"#containerweakrefdata","children":[]},{"level":3,"title":"ContainerScreenContextComponent","slug":"containerscreencontextcomponent","link":"#containerscreencontextcomponent","children":[]},{"level":3,"title":"ConnectionComponent","slug":"connectioncomponent","link":"#connectioncomponent","children":[]},{"level":3,"title":"CompoundTagUpdaterBuilder","slug":"compoundtagupdaterbuilder","link":"#compoundtagupdaterbuilder","children":[]},{"level":3,"title":"CommandSoftEnumRegistry","slug":"commandsoftenumregistry","link":"#commandsoftenumregistry","children":[]},{"level":3,"title":"CachedComponentData","slug":"cachedcomponentdata","link":"#cachedcomponentdata","children":[]},{"level":3,"title":"ChunkViewSource","slug":"chunkviewsource","link":"#chunkviewsource","children":[]},{"level":3,"title":"ColumnCachedData","slug":"columncacheddata","link":"#columncacheddata","children":[]},{"level":3,"title":"ConsoleChunkBlender","slug":"consolechunkblender","link":"#consolechunkblender","children":[]},{"level":3,"title":"CircuitComponentList::Item","slug":"circuitcomponentlist-item","link":"#circuitcomponentlist-item","children":[]},{"level":3,"title":"CircuitSceneGraph::PendingEntry","slug":"circuitscenegraph-pendingentry","link":"#circuitscenegraph-pendingentry","children":[]},{"level":3,"title":"CircuitTrackingInfo","slug":"circuittrackinginfo","link":"#circuittrackinginfo","children":[]},{"level":3,"title":"CircuitTrackingInfo::Entry","slug":"circuittrackinginfo-entry","link":"#circuittrackinginfo-entry","children":[]},{"level":3,"title":"CircuitComponentList","slug":"circuitcomponentlist","link":"#circuitcomponentlist","children":[]},{"level":3,"title":"Concurrency::task_options","slug":"concurrency-task-options","link":"#concurrency-task-options","children":[]},{"level":3,"title":"Concurrency::scheduler_ptr","slug":"concurrency-scheduler-ptr","link":"#concurrency-scheduler-ptr","children":[]},{"level":3,"title":"Concurrency::cancellation_token","slug":"concurrency-cancellation-token","link":"#concurrency-cancellation-token","children":[]},{"level":3,"title":"Concurrency::task_continuation_context","slug":"concurrency-task-continuation-context","link":"#concurrency-task-continuation-context","children":[]},{"level":3,"title":"Concurrency::details::_ContextCallback","slug":"concurrency-details-contextcallback","link":"#concurrency-details-contextcallback","children":[]},{"level":3,"title":"Concurrency::details::_ContextCallback::<unnamed_type__M_context>","slug":"concurrency-details-contextcallback-unnamed-type-m-context","link":"#concurrency-details-contextcallback-unnamed-type-m-context","children":[]},{"level":3,"title":"Concurrency::details::_Internal_task_options","slug":"concurrency-details-internal-task-options","link":"#concurrency-details-internal-task-options","children":[]},{"level":3,"title":"Concurrency::details::_TaskCreationCallstack","slug":"concurrency-details-taskcreationcallstack","link":"#concurrency-details-taskcreationcallstack","children":[]},{"level":3,"title":"ChangeModelPacket","slug":"changemodelpacket","link":"#changemodelpacket","children":[]},{"level":3,"title":"ChangeModelTexturePacket","slug":"changemodeltexturepacket","link":"#changemodeltexturepacket","children":[]},{"level":3,"title":"CustomPacket","slug":"custompacket","link":"#custompacket","children":[]},{"level":3,"title":"Crypto::Hash::md5","slug":"crypto-hash-md5","link":"#crypto-hash-md5","children":[]},{"level":3,"title":"ConfirmSkinPacket::ConfirmSkinEntry","slug":"confirmskinpacket-confirmskinentry","link":"#confirmskinpacket-confirmskinentry","children":[]},{"level":3,"title":"Core::FilePathManager","slug":"core-filepathmanager","link":"#core-filepathmanager","children":[]},{"level":3,"title":"Core::Cache<unsigned __int64,dragon::rendering::BufferResourceManager<dragon::mesh::IndexBufferType>::BufferResource,std::shared_ptr<dragon::rendering::BufferResourceManager<dragon::mesh::IndexBufferType>::BufferResource> >::CacheDefaultFactory<dragon::rendering::BufferResourceManager<dragon::mesh::IndexBufferType>::BufferResource,std::shared_ptr<dragon::rendering::BufferResourceManager<dragon::mesh::IndexBufferType>::BufferResource> >","slug":"core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-cachedefaultfactory-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource","link":"#core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-cachedefaultfactory-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource","children":[]},{"level":3,"title":"Core::Cache<unsigned __int64,dragon::rendering::BufferResourceManager<dragon::mesh::VertexBufferType>::BufferResource,std::shared_ptr<dragon::rendering::BufferResourceManager<dragon::mesh::VertexBufferType>::BufferResource> >::CacheDefaultFactory<dragon::rendering::BufferResourceManager<dragon::mesh::VertexBufferType>::BufferResource,std::shared_ptr<dragon::rendering::BufferResourceManager<dragon::mesh::VertexBufferType>::BufferResource> >","slug":"core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-cachedefaultfactory-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource","link":"#core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-cachedefaultfactory-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<std::_Tree_node<std::pair<dragon::framegraph::detail::AbstractPass<dragon::rendering::RenderContext> const * const,std::unique_ptr<dragon::framegraph::detail::AbstractPass<dragon::rendering::RenderContext>,std::default_delete<dragon::framegraph::detail::AbstractPass<dragon::rendering::RenderContext> > > >,void *>,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-std-tree-node-std-pair-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-const-const-std-unique-ptr-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-std-default-delete-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-void-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-std-tree-node-std-pair-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-const-const-std-unique-ptr-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-std-default-delete-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-void-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<std::_Tree_node<int,void *>,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-std-tree-node-int-void-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-std-tree-node-int-void-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<dragon::framegraph::detail::AbstractPass<dragon::rendering::RenderContext> const *,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-const-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-dragon-framegraph-detail-abstractpass-dragon-rendering-rendercontext-const-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<std::_Tree_node<std::pair<dragon::framegraph::detail::AbstractResource<dragon::rendering::RenderContext> const * const,dragon::res::ServerTexture>,void *>,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-std-tree-node-std-pair-dragon-framegraph-detail-abstractresource-dragon-rendering-rendercontext-const-const-dragon-res-servertexture-void-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-std-tree-node-std-pair-dragon-framegraph-detail-abstractresource-dragon-rendering-rendercontext-const-const-dragon-res-servertexture-void-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"cg::details::ScopedFrame<cg::TaskDispatcher<cg::TaskScheduler<cg::LambdaExecutor<dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,std::vector<cg::GroupPoolDescription,std::allocator<cg::GroupPoolDescription> > const &> > >::TaskDispatcherExecution,0>","slug":"cg-details-scopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-basic-string-char-std-char-traits-char-std-allocator-char-const-std-vector-cg-grouppooldescription-std-allocator-cg-grouppooldescription-const-taskdispatcherexecution-0","link":"#cg-details-scopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-basic-string-char-std-char-traits-char-std-allocator-char-const-std-vector-cg-grouppooldescription-std-allocator-cg-grouppooldescription-const-taskdispatcherexecution-0","children":[]},{"level":3,"title":"cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>::{ctor}::__l2::<lambda_38b95ff2bedc8501d3bbf586eabb0e1e>","slug":"cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-ctor-l2-lambda-38b95ff2bedc8501d3bbf586eabb0e1e","link":"#cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-ctor-l2-lambda-38b95ff2bedc8501d3bbf586eabb0e1e","children":[]},{"level":3,"title":"Core::Cache<unsigned __int64,dragon::rendering::BufferResourceManager<dragon::rendering::TextureResourceType>::BufferResource,std::shared_ptr<dragon::rendering::BufferResourceManager<dragon::rendering::TextureResourceType>::BufferResource> >::CacheDefaultFactory<dragon::rendering::BufferResourceManager<dragon::rendering::TextureResourceType>::BufferResource,std::shared_ptr<dragon::rendering::BufferResourceManager<dragon::rendering::TextureResourceType>::BufferResource> >","slug":"core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-cachedefaultfactory-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource","link":"#core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-cachedefaultfactory-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource","children":[]},{"level":3,"title":"ClimateAttributes","slug":"climateattributes","link":"#climateattributes","children":[]},{"level":3,"title":"CanopyVariantBuilder::buildCanopyVariant::__l2::<lambda_d70ff2a45c19225400bf0b1fd63f432d>","slug":"canopyvariantbuilder-buildcanopyvariant-l2-lambda-d70ff2a45c19225400bf0b1fd63f432d","link":"#canopyvariantbuilder-buildcanopyvariant-l2-lambda-d70ff2a45c19225400bf0b1fd63f432d","children":[]},{"level":3,"title":"CachedBiomeSource<VanillaOverworldBiomeSource>","slug":"cachedbiomesource-vanillaoverworldbiomesource","link":"#cachedbiomesource-vanillaoverworldbiomesource","children":[]},{"level":3,"title":"CameraItemComponentLegacy","slug":"cameraitemcomponentlegacy","link":"#cameraitemcomponentlegacy","children":[]},{"level":3,"title":"CustomBlob","slug":"customblob","link":"#customblob","children":[]},{"level":3,"title":"CaretLocationData","slug":"caretlocationdata","link":"#caretlocationdata","children":[]},{"level":3,"title":"ConnectionStateData","slug":"connectionstatedata","link":"#connectionstatedata","children":[]},{"level":3,"title":"ChangeUserData","slug":"changeuserdata","link":"#changeuserdata","children":[]},{"level":3,"title":"compression_state","slug":"compression-state","link":"#compression-state","children":[]},{"level":3,"title":"Core::FileStorageArea::_beginTransaction::__l5::<lambda_299c7b1db8373c80435acd53fe6c3bdb>","slug":"core-filestoragearea-begintransaction-l5-lambda-299c7b1db8373c80435acd53fe6c3bdb","link":"#core-filestoragearea-begintransaction-l5-lambda-299c7b1db8373c80435acd53fe6c3bdb","children":[]},{"level":3,"title":"Core::TransactionFrame","slug":"core-transactionframe","link":"#core-transactionframe","children":[]},{"level":3,"title":"Core::FileSystemImpl::renameFileOrDirectory::__l15::<lambda_455282c5f2c9971e330b5e9517f1b8d0>","slug":"core-filesystemimpl-renamefileordirectory-l15-lambda-455282c5f2c9971e330b5e9517f1b8d0","link":"#core-filesystemimpl-renamefileordirectory-l15-lambda-455282c5f2c9971e330b5e9517f1b8d0","children":[]},{"level":3,"title":"Core::FileSystemImpl::renameFileOrDirectory::__l18::<lambda_a88ce22f21287b4119b5de040b24fbd2>","slug":"core-filesystemimpl-renamefileordirectory-l18-lambda-a88ce22f21287b4119b5de040b24fbd2","link":"#core-filesystemimpl-renamefileordirectory-l18-lambda-a88ce22f21287b4119b5de040b24fbd2","children":[]},{"level":3,"title":"Core::FlatFileSearchResult","slug":"core-flatfilesearchresult","link":"#core-flatfilesearchresult","children":[]},{"level":3,"title":"Core::Result::either::__l2::<lambda_febe3dbf8fbc4fa631ce502a657ef1ea>","slug":"core-result-either-l2-lambda-febe3dbf8fbc4fa631ce502a657ef1ea","link":"#core-result-either-l2-lambda-febe3dbf8fbc4fa631ce502a657ef1ea","children":[]},{"level":3,"title":"CrashDump_AllData","slug":"crashdump-alldata","link":"#crashdump-alldata","children":[]},{"level":3,"title":"CrashDumpGlobalData","slug":"crashdumpglobaldata","link":"#crashdumpglobaldata","children":[]},{"level":3,"title":"CrashDumpLogBlobHeader","slug":"crashdumplogblobheader","link":"#crashdumplogblobheader","children":[]},{"level":3,"title":"CrashDumpEventDataArray","slug":"crashdumpeventdataarray","link":"#crashdumpeventdataarray","children":[]},{"level":3,"title":"CrashDumpKeyValueDataArray","slug":"crashdumpkeyvaluedataarray","link":"#crashdumpkeyvaluedataarray","children":[]},{"level":3,"title":"CrashDumpFrameDataArray","slug":"crashdumpframedataarray","link":"#crashdumpframedataarray","children":[]},{"level":3,"title":"CrashDumpFrameData","slug":"crashdumpframedata","link":"#crashdumpframedata","children":[]},{"level":3,"title":"CrashDumpGameplayDataArray","slug":"crashdumpgameplaydataarray","link":"#crashdumpgameplaydataarray","children":[]},{"level":3,"title":"CrashDumpRenderDataArray","slug":"crashdumprenderdataarray","link":"#crashdumprenderdataarray","children":[]},{"level":3,"title":"CrashDumpRenderData","slug":"crashdumprenderdata","link":"#crashdumprenderdata","children":[]},{"level":3,"title":"CrashDumpPlayerDataArray","slug":"crashdumpplayerdataarray","link":"#crashdumpplayerdataarray","children":[]},{"level":3,"title":"CrashDumpPlayerData","slug":"crashdumpplayerdata","link":"#crashdumpplayerdata","children":[]},{"level":3,"title":"CrashDumpFirstAssertsDataArray","slug":"crashdumpfirstassertsdataarray","link":"#crashdumpfirstassertsdataarray","children":[]},{"level":3,"title":"CrashDumpAssertData","slug":"crashdumpassertdata","link":"#crashdumpassertdata","children":[]},{"level":3,"title":"CrashDumpLastAssertsDataArray","slug":"crashdumplastassertsdataarray","link":"#crashdumplastassertsdataarray","children":[]},{"level":3,"title":"CFF_ParserRec_","slug":"cff-parserrec","link":"#cff-parserrec","children":[]},{"level":3,"title":"CFF_IndexRec_","slug":"cff-indexrec","link":"#cff-indexrec","children":[]},{"level":3,"title":"CID_Parser_","slug":"cid-parser","link":"#cid-parser","children":[]},{"level":3,"title":"CF2_Matrix_","slug":"cf2-matrix","link":"#cf2-matrix","children":[]},{"level":3,"title":"CF2_BufferRec_","slug":"cf2-bufferrec","link":"#cf2-bufferrec","children":[]},{"level":3,"title":"CF2_HintMaskRec_","slug":"cf2-hintmaskrec","link":"#cf2-hintmaskrec","children":[]},{"level":3,"title":"CF2_HintRec_","slug":"cf2-hintrec","link":"#cf2-hintrec","children":[]},{"level":3,"title":"CF2_GlyphPathRec_","slug":"cf2-glyphpathrec","link":"#cf2-glyphpathrec","children":[]},{"level":3,"title":"CF2_HintMapRec_","slug":"cf2-hintmaprec","link":"#cf2-hintmaprec","children":[]},{"level":3,"title":"CF2_ArrStackRec_","slug":"cf2-arrstackrec","link":"#cf2-arrstackrec","children":[]},{"level":3,"title":"cookie_type","slug":"cookie-type","link":"#cookie-type","children":[]},{"level":3,"title":"compiling","slug":"compiling","link":"#compiling","children":[]},{"level":3,"title":"compiler","slug":"compiler","link":"#compiler","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Sortable,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-sortable-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-sortable-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"CsFrame","slug":"csframe","link":"#csframe","children":[]},{"level":3,"title":"CompoundTag_vtbl","slug":"compoundtag-vtbl","link":"#compoundtag-vtbl","children":[]},{"level":3,"title":"ClockSpriteCalculator","slug":"clockspritecalculator","link":"#clockspritecalculator","children":[]},{"level":3,"title":"Core::PathBuffer<std::string >","slug":"core-pathbuffer-std-string","link":"#core-pathbuffer-std-string","children":[]},{"level":3,"title":"cg::RenderMaterialBase_vtbl","slug":"cg-rendermaterialbase-vtbl","link":"#cg-rendermaterialbase-vtbl","children":[]},{"level":3,"title":"cg::TextureSetImageDescription::LayerInfoVar","slug":"cg-texturesetimagedescription-layerinfovar","link":"#cg-texturesetimagedescription-layerinfovar","children":[]},{"level":3,"title":"Connector","slug":"connector","link":"#connector","children":[]},{"level":3,"title":"Connector::ConnectionStateListener","slug":"connector-connectionstatelistener","link":"#connector-connectionstatelistener","children":[]},{"level":3,"title":"Connector::ConnectionStateListener_vtbl","slug":"connector-connectionstatelistener-vtbl","link":"#connector-connectionstatelistener-vtbl","children":[]},{"level":3,"title":"Connector_vtbl","slug":"connector-vtbl","link":"#connector-vtbl","children":[]},{"level":3,"title":"Core::FileImpl","slug":"core-fileimpl","link":"#core-fileimpl","children":[]},{"level":3,"title":"Core::FileImpl_vtbl","slug":"core-fileimpl-vtbl","link":"#core-fileimpl-vtbl","children":[]},{"level":3,"title":"Core::FileSystemImpl","slug":"core-filesystemimpl","link":"#core-filesystemimpl","children":[]},{"level":3,"title":"Core::DirectoryIterationItem","slug":"core-directoryiterationitem","link":"#core-directoryiterationitem","children":[]},{"level":3,"title":"Core::FileStorageArea","slug":"core-filestoragearea","link":"#core-filestoragearea","children":[]},{"level":3,"title":"Core::FileStorageArea_vtbl","slug":"core-filestoragearea-vtbl","link":"#core-filestoragearea-vtbl","children":[]},{"level":3,"title":"Core::Observer<Core::FileStorageAreaObserver,Core::SingleThreadedLock>","slug":"core-observer-core-filestorageareaobserver-core-singlethreadedlock","link":"#core-observer-core-filestorageareaobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<Core::FileStorageAreaObserver,Core::SingleThreadedLock>_vtbl","slug":"core-observer-core-filestorageareaobserver-core-singlethreadedlock-vtbl","link":"#core-observer-core-filestorageareaobserver-core-singlethreadedlock-vtbl","children":[]},{"level":3,"title":"Core::Subject<Core::FileStorageAreaObserver,Core::SingleThreadedLock>","slug":"core-subject-core-filestorageareaobserver-core-singlethreadedlock","link":"#core-subject-core-filestorageareaobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::FileStorageAreaObserver","slug":"core-filestorageareaobserver","link":"#core-filestorageareaobserver","children":[]},{"level":3,"title":"Core::FileStorageAreaObserver_vtbl","slug":"core-filestorageareaobserver-vtbl","link":"#core-filestorageareaobserver-vtbl","children":[]},{"level":3,"title":"Core::StorageAreaStateListener","slug":"core-storageareastatelistener","link":"#core-storageareastatelistener","children":[]},{"level":3,"title":"Core::StorageAreaStateListener_vtbl","slug":"core-storageareastatelistener-vtbl","link":"#core-storageareastatelistener-vtbl","children":[]},{"level":3,"title":"Core::StorageAreaState","slug":"core-storageareastate","link":"#core-storageareastate","children":[]},{"level":3,"title":"Core::FlatFileManifestInfo","slug":"core-flatfilemanifestinfo","link":"#core-flatfilemanifestinfo","children":[]},{"level":3,"title":"Core::FlatFileManifest","slug":"core-flatfilemanifest","link":"#core-flatfilemanifest","children":[]},{"level":3,"title":"Core::FlatFileManifestTracker","slug":"core-flatfilemanifesttracker","link":"#core-flatfilemanifesttracker","children":[]},{"level":3,"title":"Core::FlatFileSystemImpl","slug":"core-flatfilesystemimpl","link":"#core-flatfilesystemimpl","children":[]},{"level":3,"title":"Crypto::Symmetric::ISystemInterface_vtbl","slug":"crypto-symmetric-isysteminterface-vtbl","link":"#crypto-symmetric-isysteminterface-vtbl","children":[]},{"level":3,"title":"Crypto::Symmetric::Symmetric_vtbl","slug":"crypto-symmetric-symmetric-vtbl","link":"#crypto-symmetric-symmetric-vtbl","children":[]},{"level":3,"title":"Crypto::Hash::IHash_vtbl","slug":"crypto-hash-ihash-vtbl","link":"#crypto-hash-ihash-vtbl","children":[]},{"level":3,"title":"Crypto::Hash::HMAC","slug":"crypto-hash-hmac","link":"#crypto-hash-hmac","children":[]},{"level":3,"title":"CorrectPlayerMovePredictionPacket","slug":"correctplayermovepredictionpacket","link":"#correctplayermovepredictionpacket","children":[]},{"level":3,"title":"CorrectPlayerMovePredictionPacket_vtbl","slug":"correctplayermovepredictionpacket-vtbl","link":"#correctplayermovepredictionpacket-vtbl","children":[]},{"level":3,"title":"CodeBuilderPacket","slug":"codebuilderpacket","link":"#codebuilderpacket","children":[]},{"level":3,"title":"CodeBuilderPacket_vtbl","slug":"codebuilderpacket-vtbl","link":"#codebuilderpacket-vtbl","children":[]},{"level":3,"title":"CreativeItemRegistry","slug":"creativeitemregistry","link":"#creativeitemregistry","children":[]},{"level":3,"title":"CreativeGroupInfo","slug":"creativegroupinfo","link":"#creativegroupinfo","children":[]},{"level":3,"title":"CreativeItemGroupCategory","slug":"creativeitemgroupcategory","link":"#creativeitemgroupcategory","children":[]},{"level":3,"title":"CreativeContentPacket","slug":"creativecontentpacket","link":"#creativecontentpacket","children":[]},{"level":3,"title":"CreativeContentPacket_vtbl","slug":"creativecontentpacket-vtbl","link":"#creativecontentpacket-vtbl","children":[]},{"level":3,"title":"ConfirmSkinPacket","slug":"confirmskinpacket","link":"#confirmskinpacket","children":[]},{"level":3,"title":"ConfirmSkinPacket_vtbl","slug":"confirmskinpacket-vtbl","link":"#confirmskinpacket-vtbl","children":[]},{"level":3,"title":"ChangeModelTexturePacket_vtbl","slug":"changemodeltexturepacket-vtbl","link":"#changemodeltexturepacket-vtbl","children":[]},{"level":3,"title":"ChangeModelOffsetPacket","slug":"changemodeloffsetpacket","link":"#changemodeloffsetpacket","children":[]},{"level":3,"title":"ChangeModelOffsetPacket_vtbl","slug":"changemodeloffsetpacket-vtbl","link":"#changemodeloffsetpacket-vtbl","children":[]},{"level":3,"title":"ChangeModelBindPacket","slug":"changemodelbindpacket","link":"#changemodelbindpacket","children":[]},{"level":3,"title":"ChangeModelBindPacket_vtbl","slug":"changemodelbindpacket-vtbl","link":"#changemodelbindpacket-vtbl","children":[]},{"level":3,"title":"ChangeModelPacket_vtbl","slug":"changemodelpacket-vtbl","link":"#changemodelpacket-vtbl","children":[]},{"level":3,"title":"CombinePacket","slug":"combinepacket","link":"#combinepacket","children":[]},{"level":3,"title":"CombinePacket_vtbl","slug":"combinepacket-vtbl","link":"#combinepacket-vtbl","children":[]},{"level":3,"title":"CustomPacket_vtbl","slug":"custompacket-vtbl","link":"#custompacket-vtbl","children":[]},{"level":3,"title":"ComplexInventoryTransaction_vtbl","slug":"complexinventorytransaction-vtbl","link":"#complexinventorytransaction-vtbl","children":[]},{"level":3,"title":"CameraShakePacket","slug":"camerashakepacket","link":"#camerashakepacket","children":[]},{"level":3,"title":"CameraShakePacket_vtbl","slug":"camerashakepacket-vtbl","link":"#camerashakepacket-vtbl","children":[]},{"level":3,"title":"CameraPacket","slug":"camerapacket","link":"#camerapacket","children":[]},{"level":3,"title":"CameraPacket_vtbl","slug":"camerapacket-vtbl","link":"#camerapacket-vtbl","children":[]},{"level":3,"title":"CompletedUsingItemPacket","slug":"completedusingitempacket","link":"#completedusingitempacket","children":[]},{"level":3,"title":"CompletedUsingItemPacket_vtbl","slug":"completedusingitempacket-vtbl","link":"#completedusingitempacket-vtbl","children":[]},{"level":3,"title":"CommandBlockUpdatePacket_vtbl","slug":"commandblockupdatepacket-vtbl","link":"#commandblockupdatepacket-vtbl","children":[]},{"level":3,"title":"CommandPropertyBag","slug":"commandpropertybag","link":"#commandpropertybag","children":[]},{"level":3,"title":"CommandPropertyBag_vtbl","slug":"commandpropertybag-vtbl","link":"#commandpropertybag-vtbl","children":[]},{"level":3,"title":"CommandOutput","slug":"commandoutput","link":"#commandoutput","children":[]},{"level":3,"title":"CommandOutputPacket","slug":"commandoutputpacket","link":"#commandoutputpacket","children":[]},{"level":3,"title":"CommandOutputPacket_vtbl","slug":"commandoutputpacket-vtbl","link":"#commandoutputpacket-vtbl","children":[]},{"level":3,"title":"CommandRequestPacket","slug":"commandrequestpacket","link":"#commandrequestpacket","children":[]},{"level":3,"title":"CommandRequestPacket_vtbl","slug":"commandrequestpacket-vtbl","link":"#commandrequestpacket-vtbl","children":[]},{"level":3,"title":"ChunkRadiusUpdatedPacket","slug":"chunkradiusupdatedpacket","link":"#chunkradiusupdatedpacket","children":[]},{"level":3,"title":"ChunkRadiusUpdatedPacket_vtbl","slug":"chunkradiusupdatedpacket-vtbl","link":"#chunkradiusupdatedpacket-vtbl","children":[]},{"level":3,"title":"ClientCacheStatusPacket","slug":"clientcachestatuspacket","link":"#clientcachestatuspacket","children":[]},{"level":3,"title":"ClientCacheStatusPacket_vtbl","slug":"clientcachestatuspacket-vtbl","link":"#clientcachestatuspacket-vtbl","children":[]},{"level":3,"title":"ClientboundMapItemDataPacket_vtbl","slug":"clientboundmapitemdatapacket-vtbl","link":"#clientboundmapitemdatapacket-vtbl","children":[]},{"level":3,"title":"ChangeDimensionPacket","slug":"changedimensionpacket","link":"#changedimensionpacket","children":[]},{"level":3,"title":"ChangeDimensionPacket_vtbl","slug":"changedimensionpacket-vtbl","link":"#changedimensionpacket-vtbl","children":[]},{"level":3,"title":"ClientCacheMissResponsePacket","slug":"clientcachemissresponsepacket","link":"#clientcachemissresponsepacket","children":[]},{"level":3,"title":"ClientCacheMissResponsePacket_vtbl","slug":"clientcachemissresponsepacket-vtbl","link":"#clientcachemissresponsepacket-vtbl","children":[]},{"level":3,"title":"ClientCacheBlobStatusPacket","slug":"clientcacheblobstatuspacket","link":"#clientcacheblobstatuspacket","children":[]},{"level":3,"title":"ClientCacheBlobStatusPacket_vtbl","slug":"clientcacheblobstatuspacket-vtbl","link":"#clientcacheblobstatuspacket-vtbl","children":[]},{"level":3,"title":"CraftingEventPacket","slug":"craftingeventpacket","link":"#craftingeventpacket","children":[]},{"level":3,"title":"CraftingEventPacket_vtbl","slug":"craftingeventpacket-vtbl","link":"#craftingeventpacket-vtbl","children":[]},{"level":3,"title":"ContainerContentChangeListener_vtbl","slug":"containercontentchangelistener-vtbl","link":"#containercontentchangelistener-vtbl","children":[]},{"level":3,"title":"Container_vtbl","slug":"container-vtbl","link":"#container-vtbl","children":[]},{"level":3,"title":"ContainerSizeChangeListener","slug":"containersizechangelistener","link":"#containersizechangelistener","children":[]},{"level":3,"title":"ContainerSizeChangeListener_vtbl","slug":"containersizechangelistener-vtbl","link":"#containersizechangelistener-vtbl","children":[]},{"level":3,"title":"CraftingContainer_vtbl","slug":"craftingcontainer-vtbl","link":"#craftingcontainer-vtbl","children":[]},{"level":3,"title":"ContainerMixDataEntry","slug":"containermixdataentry","link":"#containermixdataentry","children":[]},{"level":3,"title":"CraftingDataPacket","slug":"craftingdatapacket","link":"#craftingdatapacket","children":[]},{"level":3,"title":"CraftingDataPacket_vtbl","slug":"craftingdatapacket-vtbl","link":"#craftingdatapacket-vtbl","children":[]},{"level":3,"title":"ContainerSetDataPacket","slug":"containersetdatapacket","link":"#containersetdatapacket","children":[]},{"level":3,"title":"ContainerSetDataPacket_vtbl","slug":"containersetdatapacket-vtbl","link":"#containersetdatapacket-vtbl","children":[]},{"level":3,"title":"ContainerClosePacket","slug":"containerclosepacket","link":"#containerclosepacket","children":[]},{"level":3,"title":"ContainerClosePacket_vtbl","slug":"containerclosepacket-vtbl","link":"#containerclosepacket-vtbl","children":[]},{"level":3,"title":"ContainerOpenPacket_vtbl","slug":"containeropenpacket-vtbl","link":"#containeropenpacket-vtbl","children":[]},{"level":3,"title":"ClientToServerHandshakePacket","slug":"clienttoserverhandshakepacket","link":"#clienttoserverhandshakepacket","children":[]},{"level":3,"title":"ClientToServerHandshakePacket_vtbl","slug":"clienttoserverhandshakepacket-vtbl","link":"#clienttoserverhandshakepacket-vtbl","children":[]},{"level":3,"title":"Certificate","slug":"certificate","link":"#certificate","children":[]},{"level":3,"title":"CompositePackSource","slug":"compositepacksource","link":"#compositepacksource","children":[]},{"level":3,"title":"CompositePackSource_vtbl","slug":"compositepacksource-vtbl","link":"#compositepacksource-vtbl","children":[]},{"level":3,"title":"Core::Observer<WebviewObserver,Core::SingleThreadedLock>","slug":"core-observer-webviewobserver-core-singlethreadedlock","link":"#core-observer-webviewobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<WebviewObserver,Core::SingleThreadedLock>_vtbl","slug":"core-observer-webviewobserver-core-singlethreadedlock-vtbl","link":"#core-observer-webviewobserver-core-singlethreadedlock-vtbl","children":[]},{"level":3,"title":"Core::Subject<WebviewObserver,Core::SingleThreadedLock>","slug":"core-subject-webviewobserver-core-singlethreadedlock","link":"#core-subject-webviewobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"ChatOptions","slug":"chatoptions","link":"#chatoptions","children":[]},{"level":3,"title":"Core::Observer<OptionsObserver,Core::SingleThreadedLock>","slug":"core-observer-optionsobserver-core-singlethreadedlock","link":"#core-observer-optionsobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<OptionsObserver,Core::SingleThreadedLock>_vtbl","slug":"core-observer-optionsobserver-core-singlethreadedlock-vtbl","link":"#core-observer-optionsobserver-core-singlethreadedlock-vtbl","children":[]},{"level":3,"title":"Core::Subject<OptionsObserver,Core::SingleThreadedLock>","slug":"core-subject-optionsobserver-core-singlethreadedlock","link":"#core-subject-optionsobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<Social::XboxLiveUserObserver,Core::SingleThreadedLock>","slug":"core-observer-social-xboxliveuserobserver-core-singlethreadedlock","link":"#core-observer-social-xboxliveuserobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<Social::XboxLiveUserObserver,Core::SingleThreadedLock>_vtbl","slug":"core-observer-social-xboxliveuserobserver-core-singlethreadedlock-vtbl","link":"#core-observer-social-xboxliveuserobserver-core-singlethreadedlock-vtbl","children":[]},{"level":3,"title":"Core::Subject<Social::XboxLiveUserObserver,Core::SingleThreadedLock>","slug":"core-subject-social-xboxliveuserobserver-core-singlethreadedlock","link":"#core-subject-social-xboxliveuserobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"ContentTierManager","slug":"contenttiermanager","link":"#contenttiermanager","children":[]},{"level":3,"title":"CommandRegistry::ParseToken","slug":"commandregistry-parsetoken","link":"#commandregistry-parsetoken","children":[]},{"level":3,"title":"CommandRegistry::ParseRule","slug":"commandregistry-parserule","link":"#commandregistry-parserule","children":[]},{"level":3,"title":"CommandRegistry::ParseTable","slug":"commandregistry-parsetable","link":"#commandregistry-parsetable","children":[]},{"level":3,"title":"CommandRegistry::OptionalParameterChain","slug":"commandregistry-optionalparameterchain","link":"#commandregistry-optionalparameterchain","children":[]},{"level":3,"title":"CustomParticle","slug":"customparticle","link":"#customparticle","children":[]},{"level":3,"title":"CustomParticle_vtbl","slug":"customparticle-vtbl","link":"#customparticle-vtbl","children":[]},{"level":3,"title":"ChunkSource_vtbl","slug":"chunksource-vtbl","link":"#chunksource-vtbl","children":[]},{"level":3,"title":"ChunkViewSource_vtbl","slug":"chunkviewsource-vtbl","link":"#chunkviewsource-vtbl","children":[]},{"level":3,"title":"CommandArea","slug":"commandarea","link":"#commandarea","children":[]},{"level":3,"title":"Core::LevelStorageResult","slug":"core-levelstorageresult","link":"#core-levelstorageresult","children":[]},{"level":3,"title":"CallbackTokenCancelState","slug":"callbacktokencancelstate","link":"#callbacktokencancelstate","children":[]},{"level":3,"title":"ContentLogEndPoint","slug":"contentlogendpoint","link":"#contentlogendpoint","children":[]},{"level":3,"title":"ContentLogEndPoint_vtbl","slug":"contentlogendpoint-vtbl","link":"#contentlogendpoint-vtbl","children":[]},{"level":3,"title":"CommandRegistry","slug":"commandregistry","link":"#commandregistry","children":[]},{"level":3,"title":"Core::Observer<Social::MultiplayerServiceObserver,Core::SingleThreadedLock>","slug":"core-observer-social-multiplayerserviceobserver-core-singlethreadedlock","link":"#core-observer-social-multiplayerserviceobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<Social::MultiplayerServiceObserver,Core::SingleThreadedLock>_vtbl","slug":"core-observer-social-multiplayerserviceobserver-core-singlethreadedlock-vtbl","link":"#core-observer-social-multiplayerserviceobserver-core-singlethreadedlock-vtbl","children":[]},{"level":3,"title":"Core::Subject<Social::MultiplayerServiceObserver,Core::SingleThreadedLock>","slug":"core-subject-social-multiplayerserviceobserver-core-singlethreadedlock","link":"#core-subject-social-multiplayerserviceobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Crypto::Asymmetric::ISystemInterface","slug":"crypto-asymmetric-isysteminterface","link":"#crypto-asymmetric-isysteminterface","children":[]},{"level":3,"title":"Crypto::Asymmetric::ISystemInterface_vtbl","slug":"crypto-asymmetric-isysteminterface-vtbl","link":"#crypto-asymmetric-isysteminterface-vtbl","children":[]},{"level":3,"title":"Crypto::Asymmetric::Asymmetric","slug":"crypto-asymmetric-asymmetric","link":"#crypto-asymmetric-asymmetric","children":[]},{"level":3,"title":"Crypto::Asymmetric::Asymmetric_vtbl","slug":"crypto-asymmetric-asymmetric-vtbl","link":"#crypto-asymmetric-asymmetric-vtbl","children":[]},{"level":3,"title":"CommandOutputSender","slug":"commandoutputsender","link":"#commandoutputsender","children":[]},{"level":3,"title":"CommandOutputSender_vtbl","slug":"commandoutputsender-vtbl","link":"#commandoutputsender-vtbl","children":[]},{"level":3,"title":"Core::Observer<Automation::AutomationObserver,Core::SingleThreadedLock>","slug":"core-observer-automation-automationobserver-core-singlethreadedlock","link":"#core-observer-automation-automationobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<Automation::AutomationObserver,Core::SingleThreadedLock>_vtbl","slug":"core-observer-automation-automationobserver-core-singlethreadedlock-vtbl","link":"#core-observer-automation-automationobserver-core-singlethreadedlock-vtbl","children":[]},{"level":3,"title":"Core::Subject<Automation::AutomationObserver,Core::SingleThreadedLock>","slug":"core-subject-automation-automationobserver-core-singlethreadedlock","link":"#core-subject-automation-automationobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Command","slug":"command","link":"#command","children":[]},{"level":3,"title":"Command_vtbl","slug":"command-vtbl","link":"#command-vtbl","children":[]},{"level":3,"title":"ClientBlobCache::Server::ActiveTransfersManager","slug":"clientblobcache-server-activetransfersmanager","link":"#clientblobcache-server-activetransfersmanager","children":[]},{"level":3,"title":"ClientBlobCache::Server::ActiveTransfersManager::TransferTracker","slug":"clientblobcache-server-activetransfersmanager-transfertracker","link":"#clientblobcache-server-activetransfersmanager-transfertracker","children":[]},{"level":3,"title":"ClassroomModeNetworkHandler","slug":"classroommodenetworkhandler","link":"#classroommodenetworkhandler","children":[]},{"level":3,"title":"Core::FileStdStreamBuf_vtbl","slug":"core-filestdstreambuf-vtbl","link":"#core-filestdstreambuf-vtbl","children":[]},{"level":3,"title":"Core::FileStream_vtbl","slug":"core-filestream-vtbl","link":"#core-filestream-vtbl","children":[]},{"level":3,"title":"Core::OutputFileStream_vtbl","slug":"core-outputfilestream-vtbl","link":"#core-outputfilestream-vtbl","children":[]},{"level":3,"title":"CatalogBackend","slug":"catalogbackend","link":"#catalogbackend","children":[]},{"level":3,"title":"CatalogBackend_vtbl","slug":"catalogbackend-vtbl","link":"#catalogbackend-vtbl","children":[]},{"level":3,"title":"CustomDocumentModifier","slug":"customdocumentmodifier","link":"#customdocumentmodifier","children":[]},{"level":3,"title":"CommonContent","slug":"commoncontent","link":"#commoncontent","children":[]},{"level":3,"title":"CommonImage","slug":"commonimage","link":"#commonimage","children":[]},{"level":3,"title":"ContentCatalogPackSource","slug":"contentcatalogpacksource","link":"#contentcatalogpacksource","children":[]},{"level":3,"title":"ContentCatalogPackSource_vtbl","slug":"contentcatalogpacksource-vtbl","link":"#contentcatalogpacksource-vtbl","children":[]},{"level":3,"title":"CatalogCollection","slug":"catalogcollection","link":"#catalogcollection","children":[]},{"level":3,"title":"CatalogCollection::CatalogCollectionListener","slug":"catalogcollection-catalogcollectionlistener","link":"#catalogcollection-catalogcollectionlistener","children":[]},{"level":3,"title":"CatalogCollection::CatalogCollectionListener_vtbl","slug":"catalogcollection-catalogcollectionlistener-vtbl","link":"#catalogcollection-catalogcollectionlistener-vtbl","children":[]},{"level":3,"title":"CatalogCollection::QueryContentInfo","slug":"catalogcollection-querycontentinfo","link":"#catalogcollection-querycontentinfo","children":[]},{"level":3,"title":"CarouselComponent","slug":"carouselcomponent","link":"#carouselcomponent","children":[]},{"level":3,"title":"CarouselComponent_vtbl","slug":"carouselcomponent-vtbl","link":"#carouselcomponent-vtbl","children":[]},{"level":3,"title":"ContentCatalogService","slug":"contentcatalogservice","link":"#contentcatalogservice","children":[]},{"level":3,"title":"ContentCatalogService_vtbl","slug":"contentcatalogservice-vtbl","link":"#contentcatalogservice-vtbl","children":[]},{"level":3,"title":"ControllerIDtoClientMap","slug":"controlleridtoclientmap","link":"#controlleridtoclientmap","children":[]},{"level":3,"title":"Core::Observer<LevelLocationObserver,Core::SingleThreadedLock>","slug":"core-observer-levellocationobserver-core-singlethreadedlock","link":"#core-observer-levellocationobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<LevelLocationObserver,Core::SingleThreadedLock>_vtbl","slug":"core-observer-levellocationobserver-core-singlethreadedlock-vtbl","link":"#core-observer-levellocationobserver-core-singlethreadedlock-vtbl","children":[]},{"level":3,"title":"Core::Subject<LevelLocationObserver,Core::SingleThreadedLock>","slug":"core-subject-levellocationobserver-core-singlethreadedlock","link":"#core-subject-levellocationobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"ClientBlockPipeline::BlockSchematicPart","slug":"clientblockpipeline-blockschematicpart","link":"#clientblockpipeline-blockschematicpart","children":[]},{"level":3,"title":"ClientBlockPipeline::BlockSchematic","slug":"clientblockpipeline-blockschematic","link":"#clientblockpipeline-blockschematic","children":[]},{"level":3,"title":"ClientBlockPipeline::Material","slug":"clientblockpipeline-material","link":"#clientblockpipeline-material","children":[]},{"level":3,"title":"ClientBlockPipeline::MaterialRepository","slug":"clientblockpipeline-materialrepository","link":"#clientblockpipeline-materialrepository","children":[]},{"level":3,"title":"ClientBlockPipeline::SchematicsRepository","slug":"clientblockpipeline-schematicsrepository","link":"#clientblockpipeline-schematicsrepository","children":[]},{"level":3,"title":"CallbackTokenContext<std::function<void __cdecl(enum Social::UserPlatformConnectionResult)> >","slug":"callbacktokencontext-std-function-void-cdecl-enum-social-userplatformconnectionresult","link":"#callbacktokencontext-std-function-void-cdecl-enum-social-userplatformconnectionresult","children":[]},{"level":3,"title":"CallbackTokenContext<std::function<void __cdecl(Core::Result)> >","slug":"callbacktokencontext-std-function-void-cdecl-core-result","link":"#callbacktokencontext-std-function-void-cdecl-core-result","children":[]},{"level":3,"title":"Core::RemoteStorageProvider","slug":"core-remotestorageprovider","link":"#core-remotestorageprovider","children":[]},{"level":3,"title":"Core::RemoteStorageManifest::BlobSequence","slug":"core-remotestoragemanifest-blobsequence","link":"#core-remotestoragemanifest-blobsequence","children":[]},{"level":3,"title":"Core::RemoteStorageManifest::BlobRecord","slug":"core-remotestoragemanifest-blobrecord","link":"#core-remotestoragemanifest-blobrecord","children":[]},{"level":3,"title":"Core::RemoteStorageManifest","slug":"core-remotestoragemanifest","link":"#core-remotestoragemanifest","children":[]},{"level":3,"title":"Core::RemoteStorageProvider_vtbl","slug":"core-remotestorageprovider-vtbl","link":"#core-remotestorageprovider-vtbl","children":[]},{"level":3,"title":"CloudSaveSystemWrapper","slug":"cloudsavesystemwrapper","link":"#cloudsavesystemwrapper","children":[]},{"level":3,"title":"CloudSaveSystemWrapper_vtbl","slug":"cloudsavesystemwrapper-vtbl","link":"#cloudsavesystemwrapper-vtbl","children":[]},{"level":3,"title":"cg::ResourceManager<std::shared_ptr<mce::Image>,ResourceLocation,ImageTrackerTemplate<ImageResourceManager>,std::shared_ptr<mce::Image>,std::unordered_map>","slug":"cg-resourcemanager-std-shared-ptr-mce-image-resourcelocation-imagetrackertemplate-imageresourcemanager-std-shared-ptr-mce-image-std-unordered-map","link":"#cg-resourcemanager-std-shared-ptr-mce-image-resourcelocation-imagetrackertemplate-imageresourcemanager-std-shared-ptr-mce-image-std-unordered-map","children":[]},{"level":3,"title":"cg::ResourceManager<std::shared_ptr<mce::Image>,enum mce::DynamicTexture,ImageTrackerTemplate<DynamicImageResourceManager>,std::shared_ptr<mce::Image>,std::map>","slug":"cg-resourcemanager-std-shared-ptr-mce-image-enum-mce-dynamictexture-imagetrackertemplate-dynamicimageresourcemanager-std-shared-ptr-mce-image-std-map","link":"#cg-resourcemanager-std-shared-ptr-mce-image-enum-mce-dynamictexture-imagetrackertemplate-dynamicimageresourcemanager-std-shared-ptr-mce-image-std-map","children":[]},{"level":3,"title":"cg::ResourceManager<std::shared_ptr<mce::ClientTexture>,enum mce::DynamicTexture,void,std::shared_ptr<mce::ClientTexture>,std::map>","slug":"cg-resourcemanager-std-shared-ptr-mce-clienttexture-enum-mce-dynamictexture-void-std-shared-ptr-mce-clienttexture-std-map","link":"#cg-resourcemanager-std-shared-ptr-mce-clienttexture-enum-mce-dynamictexture-void-std-shared-ptr-mce-clienttexture-std-map","children":[]},{"level":3,"title":"ChannelService","slug":"channelservice","link":"#channelservice","children":[]},{"level":3,"title":"ChannelService_vtbl","slug":"channelservice-vtbl","link":"#channelservice-vtbl","children":[]},{"level":3,"title":"ControlScreenAction_vtbl","slug":"controlscreenaction-vtbl","link":"#controlscreenaction-vtbl","children":[]},{"level":3,"title":"CaretMeasureData","slug":"caretmeasuredata","link":"#caretmeasuredata","children":[]},{"level":3,"title":"CachedScene","slug":"cachedscene","link":"#cachedscene","children":[]},{"level":3,"title":"CachedScenes","slug":"cachedscenes","link":"#cachedscenes","children":[]},{"level":3,"title":"CustomRenderComponent","slug":"customrendercomponent","link":"#customrendercomponent","children":[]},{"level":3,"title":"ComponentRenderBatch","slug":"componentrenderbatch","link":"#componentrenderbatch","children":[]},{"level":3,"title":"CustomRenderComponent_vtbl","slug":"customrendercomponent-vtbl","link":"#customrendercomponent-vtbl","children":[]},{"level":3,"title":"ContentItem","slug":"contentitem","link":"#contentitem","children":[]},{"level":3,"title":"ContentItem_vtbl","slug":"contentitem-vtbl","link":"#contentitem-vtbl","children":[]},{"level":3,"title":"ContentSource_vtbl","slug":"contentsource-vtbl","link":"#contentsource-vtbl","children":[]},{"level":3,"title":"ContentManager","slug":"contentmanager","link":"#contentmanager","children":[]},{"level":3,"title":"ContentView::ItemCollection","slug":"contentview-itemcollection","link":"#contentview-itemcollection","children":[]},{"level":3,"title":"ContentView","slug":"contentview","link":"#contentview","children":[]},{"level":3,"title":"ContentManagerContext","slug":"contentmanagercontext","link":"#contentmanagercontext","children":[]},{"level":3,"title":"ContentManagerProxyCallbacks","slug":"contentmanagerproxycallbacks","link":"#contentmanagerproxycallbacks","children":[]},{"level":3,"title":"ContentManagerProxy","slug":"contentmanagerproxy","link":"#contentmanagerproxy","children":[]},{"level":3,"title":"ContentManager_vtbl","slug":"contentmanager-vtbl","link":"#contentmanager-vtbl","children":[]},{"level":3,"title":"ClientModel","slug":"clientmodel","link":"#clientmodel","children":[]},{"level":3,"title":"ClientModel_vtbl","slug":"clientmodel-vtbl","link":"#clientmodel-vtbl","children":[]},{"level":3,"title":"ClientInstanceModel","slug":"clientinstancemodel","link":"#clientinstancemodel","children":[]},{"level":3,"title":"ClientInstanceModel_vtbl","slug":"clientinstancemodel-vtbl","link":"#clientinstancemodel-vtbl","children":[]},{"level":3,"title":"Core::Observer<Social::UserListObserver,Core::SingleThreadedLock>","slug":"core-observer-social-userlistobserver-core-singlethreadedlock","link":"#core-observer-social-userlistobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<Social::UserListObserver,Core::SingleThreadedLock>_vtbl","slug":"core-observer-social-userlistobserver-core-singlethreadedlock-vtbl","link":"#core-observer-social-userlistobserver-core-singlethreadedlock-vtbl","children":[]},{"level":3,"title":"Core::Subject<Social::UserListObserver,Core::SingleThreadedLock>","slug":"core-subject-social-userlistobserver-core-singlethreadedlock","link":"#core-subject-social-userlistobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"ChannelTransform","slug":"channeltransform","link":"#channeltransform","children":[]},{"level":3,"title":"ChannelTransform_Float","slug":"channeltransform-float","link":"#channeltransform-float","children":[]},{"level":3,"title":"ChunkVisibilityCacheElement","slug":"chunkvisibilitycacheelement","link":"#chunkvisibilitycacheelement","children":[]},{"level":3,"title":"ChunkVisibilityCache","slug":"chunkvisibilitycache","link":"#chunkvisibilitycache","children":[]},{"level":3,"title":"ClientBlockPipeline::SimpleMesh","slug":"clientblockpipeline-simplemesh","link":"#clientblockpipeline-simplemesh","children":[]},{"level":3,"title":"ClientBlockPipeline::NamedMeshStreams","slug":"clientblockpipeline-namedmeshstreams","link":"#clientblockpipeline-namedmeshstreams","children":[]},{"level":3,"title":"ClientBlockPipeline::BlockTessellatorPipeline","slug":"clientblockpipeline-blocktessellatorpipeline","link":"#clientblockpipeline-blocktessellatorpipeline","children":[]},{"level":3,"title":"ClientBlockPipeline::Step","slug":"clientblockpipeline-step","link":"#clientblockpipeline-step","children":[]},{"level":3,"title":"ClientBlockPipeline::PipelineError","slug":"clientblockpipeline-pipelineerror","link":"#clientblockpipeline-pipelineerror","children":[]},{"level":3,"title":"ClientBlockPipeline::StepResult","slug":"clientblockpipeline-stepresult","link":"#clientblockpipeline-stepresult","children":[]},{"level":3,"title":"ClientBlockPipeline::Step_vtbl","slug":"clientblockpipeline-step-vtbl","link":"#clientblockpipeline-step-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::Description","slug":"clientblockpipeline-description","link":"#clientblockpipeline-description","children":[]},{"level":3,"title":"CommandListBase","slug":"commandlistbase","link":"#commandlistbase","children":[]},{"level":3,"title":"cg::details::LambdaExecutorContextContainer<std::nullptr_t,0>","slug":"cg-details-lambdaexecutorcontextcontainer-std-nullptr-t-0","link":"#cg-details-lambdaexecutorcontextcontainer-std-nullptr-t-0","children":[]},{"level":3,"title":"cg::TaskPoolGroupExecutionPolicy<std::nullptr_t,1>","slug":"cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1","link":"#cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1","children":[]},{"level":3,"title":"cg::LambdaExecutor<std::nullptr_t,cg::TaskPoolGroupExecutionPolicy<std::nullptr_t,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &>","slug":"cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const","link":"#cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const","children":[]},{"level":3,"title":"cg::TaskScheduler<cg::LambdaExecutor<std::nullptr_t,cg::TaskPoolGroupExecutionPolicy<std::nullptr_t,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> >","slug":"cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const","link":"#cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const","children":[]},{"level":3,"title":"cg::TaskDispatcher<cg::TaskScheduler<cg::LambdaExecutor<std::nullptr_t,cg::TaskPoolGroupExecutionPolicy<std::nullptr_t,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> > >","slug":"cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const","link":"#cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const","children":[]},{"level":3,"title":"cg::details::ScopedFrameBase<cg::TaskDispatcher<cg::TaskScheduler<cg::LambdaExecutor<std::nullptr_t,cg::TaskPoolGroupExecutionPolicy<std::nullptr_t,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> > >::TaskDispatcherExecution>","slug":"cg-details-scopedframebase-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution","link":"#cg-details-scopedframebase-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution","children":[]},{"level":3,"title":"cg::details::ScopedFrame<cg::TaskDispatcher<cg::TaskScheduler<cg::LambdaExecutor<std::nullptr_t,cg::TaskPoolGroupExecutionPolicy<std::nullptr_t,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> > >::TaskDispatcherExecution,0>","slug":"cg-details-scopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-0","link":"#cg-details-scopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-0","children":[]},{"level":3,"title":"cg::details::SpecializedScopedFrame<cg::TaskDispatcher<cg::TaskScheduler<cg::LambdaExecutor<std::nullptr_t,cg::TaskPoolGroupExecutionPolicy<std::nullptr_t,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> > >::TaskDispatcherExecution,void>","slug":"cg-details-specializedscopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-void","link":"#cg-details-specializedscopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-void","children":[]},{"level":3,"title":"CommandListQueue","slug":"commandlistqueue","link":"#commandlistqueue","children":[]},{"level":3,"title":"Core::Observer<hbui::RouterObserver,Core::SingleThreadedLock>","slug":"core-observer-hbui-routerobserver-core-singlethreadedlock","link":"#core-observer-hbui-routerobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<hbui::RouterObserver,Core::SingleThreadedLock>_vtbl","slug":"core-observer-hbui-routerobserver-core-singlethreadedlock-vtbl","link":"#core-observer-hbui-routerobserver-core-singlethreadedlock-vtbl","children":[]},{"level":3,"title":"Core::Subject<hbui::RouterObserver,Core::SingleThreadedLock>","slug":"core-subject-hbui-routerobserver-core-singlethreadedlock","link":"#core-subject-hbui-routerobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"ContentDiscovery","slug":"contentdiscovery","link":"#contentdiscovery","children":[]},{"level":3,"title":"ContentTracker","slug":"contenttracker","link":"#contenttracker","children":[]},{"level":3,"title":"ContentAcquisition::PackImportCallbackInfo","slug":"contentacquisition-packimportcallbackinfo","link":"#contentacquisition-packimportcallbackinfo","children":[]},{"level":3,"title":"ContentAcquisition","slug":"contentacquisition","link":"#contentacquisition","children":[]},{"level":3,"title":"ContentAcquisition_vtbl","slug":"contentacquisition-vtbl","link":"#contentacquisition-vtbl","children":[]},{"level":3,"title":"ComponentDescription_vtbl","slug":"componentdescription-vtbl","link":"#componentdescription-vtbl","children":[]},{"level":3,"title":"Core::Observer<ActiveDirectoryIdentityObserver,Core::SingleThreadedLock>","slug":"core-observer-activedirectoryidentityobserver-core-singlethreadedlock","link":"#core-observer-activedirectoryidentityobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<ActiveDirectoryIdentityObserver,Core::SingleThreadedLock>_vtbl","slug":"core-observer-activedirectoryidentityobserver-core-singlethreadedlock-vtbl","link":"#core-observer-activedirectoryidentityobserver-core-singlethreadedlock-vtbl","children":[]},{"level":3,"title":"Core::Subject<ActiveDirectoryIdentityObserver,Core::SingleThreadedLock>","slug":"core-subject-activedirectoryidentityobserver-core-singlethreadedlock","link":"#core-subject-activedirectoryidentityobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<I18nObserver,Core::SingleThreadedLock>","slug":"core-observer-i18nobserver-core-singlethreadedlock","link":"#core-observer-i18nobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<I18nObserver,Core::SingleThreadedLock>_vtbl","slug":"core-observer-i18nobserver-core-singlethreadedlock-vtbl","link":"#core-observer-i18nobserver-core-singlethreadedlock-vtbl","children":[]},{"level":3,"title":"Core::DeferredTask","slug":"core-deferredtask","link":"#core-deferredtask","children":[]},{"level":3,"title":"cg::details::LambdaExecutorContextContainer<dragon::rendering::RenderContext,0>","slug":"cg-details-lambdaexecutorcontextcontainer-dragon-rendering-rendercontext-0","link":"#cg-details-lambdaexecutorcontextcontainer-dragon-rendering-rendercontext-0","children":[]},{"level":3,"title":"cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>","slug":"cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1","link":"#cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1","children":[]},{"level":3,"title":"cg::LambdaExecutor<dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &>","slug":"cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const","link":"#cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const","children":[]},{"level":3,"title":"cg::TaskScheduler<cg::LambdaExecutor<dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> >","slug":"cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const","link":"#cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const","children":[]},{"level":3,"title":"cg::TaskDispatcher<cg::TaskScheduler<cg::LambdaExecutor<dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> > >","slug":"cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const","link":"#cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const","children":[]},{"level":3,"title":"Core::Cache<unsigned __int64,dragon::rendering::BufferResourceManager<dragon::mesh::VertexBufferType>::BufferResource,std::shared_ptr<dragon::rendering::BufferResourceManager<dragon::mesh::VertexBufferType>::BufferResource> >","slug":"core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource","link":"#core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-vertexbuffertype-bufferresource","children":[]},{"level":3,"title":"Core::Cache<unsigned __int64,dragon::rendering::BufferResourceManager<dragon::mesh::IndexBufferType>::BufferResource,std::shared_ptr<dragon::rendering::BufferResourceManager<dragon::mesh::IndexBufferType>::BufferResource> >","slug":"core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource","link":"#core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-mesh-indexbuffertype-bufferresource","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocation_Buffer::Buffer","slug":"core-cpuringbufferallocation-buffer-buffer","link":"#core-cpuringbufferallocation-buffer-buffer","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocation_Buffer","slug":"core-cpuringbufferallocation-buffer","link":"#core-cpuringbufferallocation-buffer","children":[]},{"level":3,"title":"Core::CheckedRingBuffer<2,0>","slug":"core-checkedringbuffer-2-0","link":"#core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"Core::CpuRingBufferAllocator<unsigned char,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-cpuringbufferallocator-unsigned-char-2-0-core-checkedringbuffer-2-0","link":"#core-cpuringbufferallocator-unsigned-char-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"Core::SharedMemoryTracker","slug":"core-sharedmemorytracker","link":"#core-sharedmemorytracker","children":[]},{"level":3,"title":"Core::RingAllocatorContainer<unsigned char,2,0,Core::CheckedRingBuffer<2,0> >::AllocationScope","slug":"core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0-allocationscope","link":"#core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0-allocationscope","children":[]},{"level":3,"title":"Core::RingAllocatorContainer<unsigned char,2,0,Core::CheckedRingBuffer<2,0> >","slug":"core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0","link":"#core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0","children":[]},{"level":3,"title":"cg::details::ScopedFrameBase<cg::TaskDispatcher<cg::TaskScheduler<cg::LambdaExecutor<dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> > >::TaskDispatcherExecution>","slug":"cg-details-scopedframebase-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution","link":"#cg-details-scopedframebase-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution","children":[]},{"level":3,"title":"cg::details::ScopedFrame<cg::TaskDispatcher<cg::TaskScheduler<cg::LambdaExecutor<dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> > >::TaskDispatcherExecution,0>","slug":"cg-details-scopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-0","link":"#cg-details-scopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-0","children":[]},{"level":3,"title":"cg::details::SpecializedScopedFrame<cg::TaskDispatcher<cg::TaskScheduler<cg::LambdaExecutor<dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> > >::TaskDispatcherExecution,void>","slug":"cg-details-specializedscopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-void","link":"#cg-details-specializedscopedframe-cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution-void","children":[]},{"level":3,"title":"cg::ResourceManager<std::unique_ptr<dragon::materials::CompiledMaterialDefinition>,std::string,void,std::unique_ptr<dragon::materials::CompiledMaterialDefinition> *,std::unordered_map>","slug":"cg-resourcemanager-std-unique-ptr-dragon-materials-compiledmaterialdefinition-std-string-void-std-unique-ptr-dragon-materials-compiledmaterialdefinition-std-unordered-map","link":"#cg-resourcemanager-std-unique-ptr-dragon-materials-compiledmaterialdefinition-std-string-void-std-unique-ptr-dragon-materials-compiledmaterialdefinition-std-unordered-map","children":[]},{"level":3,"title":"cg::ResourceManager<std::unique_ptr<dragon::materials::Material>,dragon::materials::MaterialLocation,void,std::unique_ptr<dragon::materials::Material> *,std::unordered_map>","slug":"cg-resourcemanager-std-unique-ptr-dragon-materials-material-dragon-materials-materiallocation-void-std-unique-ptr-dragon-materials-material-std-unordered-map","link":"#cg-resourcemanager-std-unique-ptr-dragon-materials-material-dragon-materials-materiallocation-void-std-unique-ptr-dragon-materials-material-std-unordered-map","children":[]},{"level":3,"title":"Core::IFileSystem","slug":"core-ifilesystem","link":"#core-ifilesystem","children":[]},{"level":3,"title":"Core::IFile","slug":"core-ifile","link":"#core-ifile","children":[]},{"level":3,"title":"Core::IFile_vtbl","slug":"core-ifile-vtbl","link":"#core-ifile-vtbl","children":[]},{"level":3,"title":"Core::IFileSystem_vtbl","slug":"core-ifilesystem-vtbl","link":"#core-ifilesystem-vtbl","children":[]},{"level":3,"title":"ContentLog::ThreadSpecificData::ScopeData","slug":"contentlog-threadspecificdata-scopedata","link":"#contentlog-threadspecificdata-scopedata","children":[]},{"level":3,"title":"ContextMessageLogger_vtbl","slug":"contextmessagelogger-vtbl","link":"#contextmessagelogger-vtbl","children":[]},{"level":3,"title":"ContextMessage","slug":"contextmessage","link":"#contextmessage","children":[]},{"level":3,"title":"ContentLog::ThreadSpecificData","slug":"contentlog-threadspecificdata","link":"#contentlog-threadspecificdata","children":[]},{"level":3,"title":"ContentLog::ScopeHandler","slug":"contentlog-scopehandler","link":"#contentlog-scopehandler","children":[]},{"level":3,"title":"ContentLog","slug":"contentlog","link":"#contentlog","children":[]},{"level":3,"title":"ContentLogFileEndPoint","slug":"contentlogfileendpoint","link":"#contentlogfileendpoint","children":[]},{"level":3,"title":"ContentLogFileEndPoint_vtbl","slug":"contentlogfileendpoint-vtbl","link":"#contentlogfileendpoint-vtbl","children":[]},{"level":3,"title":"Core::LRUCache<Core::PathBuffer<std::string >,FMOD::Sound,std::shared_ptr<FMOD::Sound> >::CacheItem","slug":"core-lrucache-core-pathbuffer-std-string-fmod-sound-std-shared-ptr-fmod-sound-cacheitem","link":"#core-lrucache-core-pathbuffer-std-string-fmod-sound-std-shared-ptr-fmod-sound-cacheitem","children":[]},{"level":3,"title":"Core::LRUCache<Core::PathBuffer<std::string >,FMOD::Sound,std::shared_ptr<FMOD::Sound> >","slug":"core-lrucache-core-pathbuffer-std-string-fmod-sound-std-shared-ptr-fmod-sound","link":"#core-lrucache-core-pathbuffer-std-string-fmod-sound-std-shared-ptr-fmod-sound","children":[]},{"level":3,"title":"CustomMusic::QueuedMusicItem","slug":"custommusic-queuedmusicitem","link":"#custommusic-queuedmusicitem","children":[]},{"level":3,"title":"CustomMusic","slug":"custommusic","link":"#custommusic","children":[]},{"level":3,"title":"CustomMusic_vtbl","slug":"custommusic-vtbl","link":"#custommusic-vtbl","children":[]},{"level":3,"title":"ClientAssetCacheController::UnloadCallback","slug":"clientassetcachecontroller-unloadcallback","link":"#clientassetcachecontroller-unloadcallback","children":[]},{"level":3,"title":"ClientAssetCacheController","slug":"clientassetcachecontroller","link":"#clientassetcachecontroller","children":[]},{"level":3,"title":"ClubsService","slug":"clubsservice","link":"#clubsservice","children":[]},{"level":3,"title":"ClubsService_vtbl","slug":"clubsservice-vtbl","link":"#clubsservice-vtbl","children":[]},{"level":3,"title":"CubemapBackgroundResources","slug":"cubemapbackgroundresources","link":"#cubemapbackgroundresources","children":[]},{"level":3,"title":"ClientInstanceEventListener","slug":"clientinstanceeventlistener","link":"#clientinstanceeventlistener","children":[]},{"level":3,"title":"ClientInstance","slug":"clientinstance","link":"#clientinstance","children":[]},{"level":3,"title":"ClientInputHandler","slug":"clientinputhandler","link":"#clientinputhandler","children":[]},{"level":3,"title":"ClientBindingFactory_vtbl","slug":"clientbindingfactory-vtbl","link":"#clientbindingfactory-vtbl","children":[]},{"level":3,"title":"ChordButtonMapping","slug":"chordbuttonmapping","link":"#chordbuttonmapping","children":[]},{"level":3,"title":"ClientInputMappingFactory","slug":"clientinputmappingfactory","link":"#clientinputmappingfactory","children":[]},{"level":3,"title":"ClientInputMappingFactory_vtbl","slug":"clientinputmappingfactory-vtbl","link":"#clientinputmappingfactory-vtbl","children":[]},{"level":3,"title":"ClientInputHandlerProxyCallbacks","slug":"clientinputhandlerproxycallbacks","link":"#clientinputhandlerproxycallbacks","children":[]},{"level":3,"title":"ClientInputHandlerProxy","slug":"clientinputhandlerproxy","link":"#clientinputhandlerproxy","children":[]},{"level":3,"title":"ClientHitDetectListener","slug":"clienthitdetectlistener","link":"#clienthitdetectlistener","children":[]},{"level":3,"title":"ClientHitDetectListener_vtbl","slug":"clienthitdetectlistener-vtbl","link":"#clienthitdetectlistener-vtbl","children":[]},{"level":3,"title":"ClientHitDetectCoordinator","slug":"clienthitdetectcoordinator","link":"#clienthitdetectcoordinator","children":[]},{"level":3,"title":"CameraLoader","slug":"cameraloader","link":"#cameraloader","children":[]},{"level":3,"title":"CameraLoader_vtbl","slug":"cameraloader-vtbl","link":"#cameraloader-vtbl","children":[]},{"level":3,"title":"CameraBehaviorLoader","slug":"camerabehaviorloader","link":"#camerabehaviorloader","children":[]},{"level":3,"title":"CameraBehaviorLoader_vtbl","slug":"camerabehaviorloader-vtbl","link":"#camerabehaviorloader-vtbl","children":[]},{"level":3,"title":"CameraPairHasher","slug":"camerapairhasher","link":"#camerapairhasher","children":[]},{"level":3,"title":"CameraBlend","slug":"camerablend","link":"#camerablend","children":[]},{"level":3,"title":"CameraManager","slug":"cameramanager","link":"#cameramanager","children":[]},{"level":3,"title":"ClientInstance::ClientRenderResources","slug":"clientinstance-clientrenderresources","link":"#clientinstance-clientrenderresources","children":[]},{"level":3,"title":"ChestBlockActor","slug":"chestblockactor","link":"#chestblockactor","children":[]},{"level":3,"title":"ConduitBlockActor","slug":"conduitblockactor","link":"#conduitblockactor","children":[]},{"level":3,"title":"ClientHMDState::VRRotationResetState","slug":"clienthmdstate-vrrotationresetstate","link":"#clienthmdstate-vrrotationresetstate","children":[]},{"level":3,"title":"ClientHMDState","slug":"clienthmdstate","link":"#clienthmdstate","children":[]},{"level":3,"title":"ClientRequirementVerifier","slug":"clientrequirementverifier","link":"#clientrequirementverifier","children":[]},{"level":3,"title":"ClientInstanceEventListener_vtbl","slug":"clientinstanceeventlistener-vtbl","link":"#clientinstanceeventlistener-vtbl","children":[]},{"level":3,"title":"ClientInstanceEventCoordinator","slug":"clientinstanceeventcoordinator","link":"#clientinstanceeventcoordinator","children":[]},{"level":3,"title":"CompactionListenerEnv","slug":"compactionlistenerenv","link":"#compactionlistenerenv","children":[]},{"level":3,"title":"CompactionListenerEnv_vtbl","slug":"compactionlistenerenv-vtbl","link":"#compactionlistenerenv-vtbl","children":[]},{"level":3,"title":"ClientBlobCache::Cache","slug":"clientblobcache-cache","link":"#clientblobcache-cache","children":[]},{"level":3,"title":"ClientBlobCache::Cache_vtbl","slug":"clientblobcache-cache-vtbl","link":"#clientblobcache-cache-vtbl","children":[]},{"level":3,"title":"Core::Observer<EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock>","slug":"core-observer-edudiscovery-discoveryobserver-core-singlethreadedlock","link":"#core-observer-edudiscovery-discoveryobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"Core::Observer<EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock>_vtbl","slug":"core-observer-edudiscovery-discoveryobserver-core-singlethreadedlock-vtbl","link":"#core-observer-edudiscovery-discoveryobserver-core-singlethreadedlock-vtbl","children":[]},{"level":3,"title":"Core::Subject<EDUDiscovery::DiscoveryObserver,Core::SingleThreadedLock>","slug":"core-subject-edudiscovery-discoveryobserver-core-singlethreadedlock","link":"#core-subject-edudiscovery-discoveryobserver-core-singlethreadedlock","children":[]},{"level":3,"title":"ChunkPerformanceData::AtomicTimeAccumulator","slug":"chunkperformancedata-atomictimeaccumulator","link":"#chunkperformancedata-atomictimeaccumulator","children":[]},{"level":3,"title":"ChunkPerformanceData::AtomicMemoryAccumulator","slug":"chunkperformancedata-atomicmemoryaccumulator","link":"#chunkperformancedata-atomicmemoryaccumulator","children":[]},{"level":3,"title":"ChunkPerformanceData","slug":"chunkperformancedata","link":"#chunkperformancedata","children":[]},{"level":3,"title":"ChunkBuildOrderPolicyBase","slug":"chunkbuildorderpolicybase","link":"#chunkbuildorderpolicybase","children":[]},{"level":3,"title":"ChunkBuildOrderPolicyBase_vtbl","slug":"chunkbuildorderpolicybase-vtbl","link":"#chunkbuildorderpolicybase-vtbl","children":[]},{"level":3,"title":"CircuitSceneGraph","slug":"circuitscenegraph","link":"#circuitscenegraph","children":[]},{"level":3,"title":"CircuitSystem","slug":"circuitsystem","link":"#circuitsystem","children":[]},{"level":3,"title":"CircuitSystem::LevelChunkTracking","slug":"circuitsystem-levelchunktracking","link":"#circuitsystem-levelchunktracking","children":[]},{"level":3,"title":"ChunkLoadActionList","slug":"chunkloadactionlist","link":"#chunkloadactionlist","children":[]},{"level":3,"title":"CommandOrigin_vtbl","slug":"commandorigin-vtbl","link":"#commandorigin-vtbl","children":[]},{"level":3,"title":"CommandRegistry::Enum","slug":"commandregistry-enum","link":"#commandregistry-enum","children":[]},{"level":3,"title":"CommandRegistry::Factorization","slug":"commandregistry-factorization","link":"#commandregistry-factorization","children":[]},{"level":3,"title":"CommandRegistry::Overload","slug":"commandregistry-overload","link":"#commandregistry-overload","children":[]},{"level":3,"title":"CommandRegistry::ConstrainedValue","slug":"commandregistry-constrainedvalue","link":"#commandregistry-constrainedvalue","children":[]},{"level":3,"title":"CommandRegistry::SoftEnum","slug":"commandregistry-softenum","link":"#commandregistry-softenum","children":[]},{"level":3,"title":"CommandRegistry::ParamSymbols","slug":"commandregistry-paramsymbols","link":"#commandregistry-paramsymbols","children":[]},{"level":3,"title":"ChalkboardBlockActor","slug":"chalkboardblockactor","link":"#chalkboardblockactor","children":[]},{"level":3,"title":"CameraCallbacks","slug":"cameracallbacks","link":"#cameracallbacks","children":[]},{"level":3,"title":"CameraCallbacks_vtbl","slug":"cameracallbacks-vtbl","link":"#cameracallbacks-vtbl","children":[]},{"level":3,"title":"ComponentItem","slug":"componentitem","link":"#componentitem","children":[]},{"level":3,"title":"CameraItemComponentLegacy_vtbl","slug":"cameraitemcomponentlegacy-vtbl","link":"#cameraitemcomponentlegacy-vtbl","children":[]},{"level":3,"title":"Control","slug":"control","link":"#control","children":[]},{"level":3,"title":"Control_vtbl","slug":"control-vtbl","link":"#control-vtbl","children":[]},{"level":3,"title":"ContainerManagerModel","slug":"containermanagermodel","link":"#containermanagermodel","children":[]},{"level":3,"title":"ContainerModel","slug":"containermodel","link":"#containermodel","children":[]},{"level":3,"title":"ContainerEnumNameHasher","slug":"containerenumnamehasher","link":"#containerenumnamehasher","children":[]},{"level":3,"title":"ContainerModel_vtbl","slug":"containermodel-vtbl","link":"#containermodel-vtbl","children":[]},{"level":3,"title":"ContainerManagerModel_vtbl","slug":"containermanagermodel-vtbl","link":"#containermanagermodel-vtbl","children":[]},{"level":3,"title":"Core::Cache<unsigned short,Block const *,Block const *>","slug":"core-cache-unsigned-short-block-const-block-const","link":"#core-cache-unsigned-short-block-const-block-const","children":[]},{"level":3,"title":"ContextAccessor::TypeBase","slug":"contextaccessor-typebase","link":"#contextaccessor-typebase","children":[]},{"level":3,"title":"ContextAccessor::TypeBase_vtbl","slug":"contextaccessor-typebase-vtbl","link":"#contextaccessor-typebase-vtbl","children":[]},{"level":3,"title":"CustomEntityTypeDescription","slug":"customentitytypedescription","link":"#customentitytypedescription","children":[]},{"level":3,"title":"CustomEntityTypeDescription_vtbl","slug":"customentitytypedescription-vtbl","link":"#customentitytypedescription-vtbl","children":[]},{"level":3,"title":"CommandBlockDescription","slug":"commandblockdescription","link":"#commandblockdescription","children":[]},{"level":3,"title":"CommandBlockDescription_vtbl","slug":"commandblockdescription-vtbl","link":"#commandblockdescription-vtbl","children":[]},{"level":3,"title":"ContainerDescription_vtbl","slug":"containerdescription-vtbl","link":"#containerdescription-vtbl","children":[]},{"level":3,"title":"ChangeDimensionRequest","slug":"changedimensionrequest","link":"#changedimensionrequest","children":[]},{"level":3,"title":"ClientPlayerEventCoordinator","slug":"clientplayereventcoordinator","link":"#clientplayereventcoordinator","children":[]},{"level":3,"title":"ClientLevelEventCoordinator","slug":"clientleveleventcoordinator","link":"#clientleveleventcoordinator","children":[]},{"level":3,"title":"ChunkSourceViewMgr","slug":"chunksourceviewmgr","link":"#chunksourceviewmgr","children":[]},{"level":3,"title":"Core::String","slug":"core-string","link":"#core-string","children":[]},{"level":3,"title":"Core::StringSpan","slug":"core-stringspan","link":"#core-stringspan","children":[]},{"level":3,"title":"Core::Path::path_less","slug":"core-path-path-less","link":"#core-path-path-less","children":[]},{"level":3,"title":"Core::PathContainerConversions<std::string >","slug":"core-pathcontainerconversions-std-string","link":"#core-pathcontainerconversions-std-string","children":[]},{"level":3,"title":"Core::StorageAreasTree::TreeChild","slug":"core-storageareastree-treechild","link":"#core-storageareastree-treechild","children":[]},{"level":3,"title":"Core::Observer<NetworkChangeObserver,std::mutex>","slug":"core-observer-networkchangeobserver-std-mutex","link":"#core-observer-networkchangeobserver-std-mutex","children":[]},{"level":3,"title":"Core::Observer<NetworkChangeObserver,std::mutex>_vtbl","slug":"core-observer-networkchangeobserver-std-mutex-vtbl","link":"#core-observer-networkchangeobserver-std-mutex-vtbl","children":[]},{"level":3,"title":"Core::Subject<NetworkChangeObserver,std::mutex>","slug":"core-subject-networkchangeobserver-std-mutex","link":"#core-subject-networkchangeobserver-std-mutex","children":[]},{"level":3,"title":"Core::InputFileStream_vtbl","slug":"core-inputfilestream-vtbl","link":"#core-inputfilestream-vtbl","children":[]},{"level":3,"title":"cg::IGraphicsDevicePlatformProvider","slug":"cg-igraphicsdeviceplatformprovider","link":"#cg-igraphicsdeviceplatformprovider","children":[]},{"level":3,"title":"cg::IGraphicsDevicePlatformProvider_vtbl","slug":"cg-igraphicsdeviceplatformprovider-vtbl","link":"#cg-igraphicsdeviceplatformprovider-vtbl","children":[]},{"level":3,"title":"Core::LoadTimeData","slug":"core-loadtimedata","link":"#core-loadtimedata","children":[]},{"level":3,"title":"Core::ScopedLoadTimeSection","slug":"core-scopedloadtimesection","link":"#core-scopedloadtimesection","children":[]},{"level":3,"title":"Core::LoadTimeProfiler","slug":"core-loadtimeprofiler","link":"#core-loadtimeprofiler","children":[]},{"level":3,"title":"ClientNetworkHandler","slug":"clientnetworkhandler","link":"#clientnetworkhandler","children":[]},{"level":3,"title":"ClientInstance::<lambda_f6e4b0d87d4d949bdaea4c283d4c6cc0>","slug":"clientinstance-lambda-f6e4b0d87d4d949bdaea4c283d4c6cc0","link":"#clientinstance-lambda-f6e4b0d87d4d949bdaea4c283d4c6cc0","children":[]},{"level":3,"title":"ClientInstance::<lambda_57e1ebedf9bd0f5ca98bc6185e1f58e3>","slug":"clientinstance-lambda-57e1ebedf9bd0f5ca98bc6185e1f58e3","link":"#clientinstance-lambda-57e1ebedf9bd0f5ca98bc6185e1f58e3","children":[]},{"level":3,"title":"CommandSelectorResults<Actor>","slug":"commandselectorresults-actor","link":"#commandselectorresults-actor","children":[]},{"level":3,"title":"CommandPosition","slug":"commandposition","link":"#commandposition","children":[]},{"level":3,"title":"CommandSelectorBase","slug":"commandselectorbase","link":"#commandselectorbase","children":[]},{"level":3,"title":"CustomTabStorage","slug":"customtabstorage","link":"#customtabstorage","children":[]},{"level":3,"title":"CameraBehavior<ComfortMoveBehavior>","slug":"camerabehavior-comfortmovebehavior","link":"#camerabehavior-comfortmovebehavior","children":[]},{"level":3,"title":"CameraBehavior<ComfortMoveBehavior>_vtbl","slug":"camerabehavior-comfortmovebehavior-vtbl","link":"#camerabehavior-comfortmovebehavior-vtbl","children":[]},{"level":3,"title":"ComfortMoveBehavior","slug":"comfortmovebehavior","link":"#comfortmovebehavior","children":[]},{"level":3,"title":"ComfortMoveBehavior_vtbl","slug":"comfortmovebehavior-vtbl","link":"#comfortmovebehavior-vtbl","children":[]},{"level":3,"title":"CameraBehavior<ShakeBehavior>","slug":"camerabehavior-shakebehavior","link":"#camerabehavior-shakebehavior","children":[]},{"level":3,"title":"CameraBehavior<ShakeBehavior>_vtbl","slug":"camerabehavior-shakebehavior-vtbl","link":"#camerabehavior-shakebehavior-vtbl","children":[]},{"level":3,"title":"ComfortMoveBehaviorLoader","slug":"comfortmovebehaviorloader","link":"#comfortmovebehaviorloader","children":[]},{"level":3,"title":"ComfortMoveBehaviorLoader_vtbl","slug":"comfortmovebehaviorloader-vtbl","link":"#comfortmovebehaviorloader-vtbl","children":[]},{"level":3,"title":"Clubs::FeedItem","slug":"clubs-feeditem","link":"#clubs-feeditem","children":[]},{"level":3,"title":"Clubs::ActivityFeed","slug":"clubs-activityfeed","link":"#clubs-activityfeed","children":[]},{"level":3,"title":"Clubs::ReportedItem","slug":"clubs-reporteditem","link":"#clubs-reporteditem","children":[]},{"level":3,"title":"Clubs::NewFeedItem","slug":"clubs-newfeeditem","link":"#clubs-newfeeditem","children":[]},{"level":3,"title":"ClientInputCallbacks","slug":"clientinputcallbacks","link":"#clientinputcallbacks","children":[]},{"level":3,"title":"ClientContentKeyProvider","slug":"clientcontentkeyprovider","link":"#clientcontentkeyprovider","children":[]},{"level":3,"title":"ClientContentKeyProvider_vtbl","slug":"clientcontentkeyprovider-vtbl","link":"#clientcontentkeyprovider-vtbl","children":[]},{"level":3,"title":"CreateReviewParams","slug":"createreviewparams","link":"#createreviewparams","children":[]},{"level":3,"title":"Core::CallbackListeners<int,enum Social::SignInResult>","slug":"core-callbacklisteners-int-enum-social-signinresult","link":"#core-callbacklisteners-int-enum-social-signinresult","children":[]},{"level":3,"title":"CompileTime::Hash<38>","slug":"compiletime-hash-38","link":"#compiletime-hash-38","children":[]},{"level":3,"title":"CompileTime::Hash<37>","slug":"compiletime-hash-37","link":"#compiletime-hash-37","children":[]},{"level":3,"title":"CompileTime::Hash<36>","slug":"compiletime-hash-36","link":"#compiletime-hash-36","children":[]},{"level":3,"title":"CompileTime::Hash<35>","slug":"compiletime-hash-35","link":"#compiletime-hash-35","children":[]},{"level":3,"title":"CompileTime::Hash<34>","slug":"compiletime-hash-34","link":"#compiletime-hash-34","children":[]},{"level":3,"title":"CompileTime::Hash<33>","slug":"compiletime-hash-33","link":"#compiletime-hash-33","children":[]},{"level":3,"title":"CompileTime::Hash<32>","slug":"compiletime-hash-32","link":"#compiletime-hash-32","children":[]},{"level":3,"title":"CompileTime::Hash<31>","slug":"compiletime-hash-31","link":"#compiletime-hash-31","children":[]},{"level":3,"title":"CompileTime::Hash<30>","slug":"compiletime-hash-30","link":"#compiletime-hash-30","children":[]},{"level":3,"title":"CompileTime::Hash<29>","slug":"compiletime-hash-29","link":"#compiletime-hash-29","children":[]},{"level":3,"title":"CompileTime::Hash<28>","slug":"compiletime-hash-28","link":"#compiletime-hash-28","children":[]},{"level":3,"title":"CompileTime::Hash<27>","slug":"compiletime-hash-27","link":"#compiletime-hash-27","children":[]},{"level":3,"title":"CompileTime::Hash<26>","slug":"compiletime-hash-26","link":"#compiletime-hash-26","children":[]},{"level":3,"title":"CompileTime::Hash<25>","slug":"compiletime-hash-25","link":"#compiletime-hash-25","children":[]},{"level":3,"title":"CompileTime::Hash<24>","slug":"compiletime-hash-24","link":"#compiletime-hash-24","children":[]},{"level":3,"title":"CompileTime::Hash<23>","slug":"compiletime-hash-23","link":"#compiletime-hash-23","children":[]},{"level":3,"title":"CompileTime::Hash<22>","slug":"compiletime-hash-22","link":"#compiletime-hash-22","children":[]},{"level":3,"title":"CompileTime::Hash<21>","slug":"compiletime-hash-21","link":"#compiletime-hash-21","children":[]},{"level":3,"title":"CompileTime::Hash<20>","slug":"compiletime-hash-20","link":"#compiletime-hash-20","children":[]},{"level":3,"title":"CompileTime::Hash<19>","slug":"compiletime-hash-19","link":"#compiletime-hash-19","children":[]},{"level":3,"title":"CompileTime::Hash<18>","slug":"compiletime-hash-18","link":"#compiletime-hash-18","children":[]},{"level":3,"title":"CompileTime::Hash<17>","slug":"compiletime-hash-17","link":"#compiletime-hash-17","children":[]},{"level":3,"title":"CompileTime::Hash<16>","slug":"compiletime-hash-16","link":"#compiletime-hash-16","children":[]},{"level":3,"title":"CompileTime::Hash<15>","slug":"compiletime-hash-15","link":"#compiletime-hash-15","children":[]},{"level":3,"title":"CompileTime::Hash<14>","slug":"compiletime-hash-14","link":"#compiletime-hash-14","children":[]},{"level":3,"title":"CompileTime::Hash<13>","slug":"compiletime-hash-13","link":"#compiletime-hash-13","children":[]},{"level":3,"title":"CompileTime::Hash<12>","slug":"compiletime-hash-12","link":"#compiletime-hash-12","children":[]},{"level":3,"title":"CompileTime::Hash<11>","slug":"compiletime-hash-11","link":"#compiletime-hash-11","children":[]},{"level":3,"title":"CompileTime::Hash<10>","slug":"compiletime-hash-10","link":"#compiletime-hash-10","children":[]},{"level":3,"title":"CompileTime::Hash<9>","slug":"compiletime-hash-9","link":"#compiletime-hash-9","children":[]},{"level":3,"title":"CompileTime::Hash<8>","slug":"compiletime-hash-8","link":"#compiletime-hash-8","children":[]},{"level":3,"title":"CompileTime::Hash<7>","slug":"compiletime-hash-7","link":"#compiletime-hash-7","children":[]},{"level":3,"title":"CompileTime::Hash<6>","slug":"compiletime-hash-6","link":"#compiletime-hash-6","children":[]},{"level":3,"title":"CompileTime::Hash<5>","slug":"compiletime-hash-5","link":"#compiletime-hash-5","children":[]},{"level":3,"title":"CompileTime::Hash<4>","slug":"compiletime-hash-4","link":"#compiletime-hash-4","children":[]},{"level":3,"title":"CompileTime::Hash<3>","slug":"compiletime-hash-3","link":"#compiletime-hash-3","children":[]},{"level":3,"title":"CompileTime::Hash<2>","slug":"compiletime-hash-2","link":"#compiletime-hash-2","children":[]},{"level":3,"title":"CompileTime::Hash<1>","slug":"compiletime-hash-1","link":"#compiletime-hash-1","children":[]},{"level":3,"title":"ClientInstanceScreenModel_vtbl","slug":"clientinstancescreenmodel-vtbl","link":"#clientinstancescreenmodel-vtbl","children":[]},{"level":3,"title":"ClientInstanceScreenController_vtbl","slug":"clientinstancescreencontroller-vtbl","link":"#clientinstancescreencontroller-vtbl","children":[]},{"level":3,"title":"ContainerSplitControl","slug":"containersplitcontrol","link":"#containersplitcontrol","children":[]},{"level":3,"title":"ContainerManagerController_vtbl","slug":"containermanagercontroller-vtbl","link":"#containermanagercontroller-vtbl","children":[]},{"level":3,"title":"ContainerController","slug":"containercontroller","link":"#containercontroller","children":[]},{"level":3,"title":"ContainerController_vtbl","slug":"containercontroller-vtbl","link":"#containercontroller-vtbl","children":[]},{"level":3,"title":"CompileTime::Hash<50>","slug":"compiletime-hash-50","link":"#compiletime-hash-50","children":[]},{"level":3,"title":"CompileTime::Hash<39>","slug":"compiletime-hash-39","link":"#compiletime-hash-39","children":[]},{"level":3,"title":"CompileTime::Hash<49>","slug":"compiletime-hash-49","link":"#compiletime-hash-49","children":[]},{"level":3,"title":"CompileTime::Hash<48>","slug":"compiletime-hash-48","link":"#compiletime-hash-48","children":[]},{"level":3,"title":"CompileTime::Hash<47>","slug":"compiletime-hash-47","link":"#compiletime-hash-47","children":[]},{"level":3,"title":"CompileTime::Hash<46>","slug":"compiletime-hash-46","link":"#compiletime-hash-46","children":[]},{"level":3,"title":"CompileTime::Hash<45>","slug":"compiletime-hash-45","link":"#compiletime-hash-45","children":[]},{"level":3,"title":"CompileTime::Hash<44>","slug":"compiletime-hash-44","link":"#compiletime-hash-44","children":[]},{"level":3,"title":"CompileTime::Hash<43>","slug":"compiletime-hash-43","link":"#compiletime-hash-43","children":[]},{"level":3,"title":"CompileTime::Hash<42>","slug":"compiletime-hash-42","link":"#compiletime-hash-42","children":[]},{"level":3,"title":"CompileTime::Hash<41>","slug":"compiletime-hash-41","link":"#compiletime-hash-41","children":[]},{"level":3,"title":"CompileTime::Hash<40>","slug":"compiletime-hash-40","link":"#compiletime-hash-40","children":[]},{"level":3,"title":"CorrectPlayerPredictionInput","slug":"correctplayerpredictioninput","link":"#correctplayerpredictioninput","children":[]},{"level":3,"title":"ClientPlayerRewindListener","slug":"clientplayerrewindlistener","link":"#clientplayerrewindlistener","children":[]},{"level":3,"title":"ClientPlayerRewindListener_vtbl","slug":"clientplayerrewindlistener-vtbl","link":"#clientplayerrewindlistener-vtbl","children":[]},{"level":3,"title":"cg::TextureSetLayerTypeHash","slug":"cg-texturesetlayertypehash","link":"#cg-texturesetlayertypehash","children":[]},{"level":3,"title":"ClientPlayerMovementProxy","slug":"clientplayermovementproxy","link":"#clientplayermovementproxy","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceSchematicInstance","slug":"clientblockpipeline-faceschematicinstance","link":"#clientblockpipeline-faceschematicinstance","children":[]},{"level":3,"title":"ClientBlockPipeline::NullPtrErrorChecker","slug":"clientblockpipeline-nullptrerrorchecker","link":"#clientblockpipeline-nullptrerrorchecker","children":[]},{"level":3,"title":"ClientBlockPipeline::BlockOpacityData","slug":"clientblockpipeline-blockopacitydata","link":"#clientblockpipeline-blockopacitydata","children":[]},{"level":3,"title":"ClientBlockPipeline::Instance::StepCache","slug":"clientblockpipeline-instance-stepcache","link":"#clientblockpipeline-instance-stepcache","children":[]},{"level":3,"title":"ClientBlockPipeline::Instance","slug":"clientblockpipeline-instance","link":"#clientblockpipeline-instance","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeOf<ClientBlockPipeline::BlockCell>","slug":"clientblockpipeline-volumeof-clientblockpipeline-blockcell","link":"#clientblockpipeline-volumeof-clientblockpipeline-blockcell","children":[]},{"level":3,"title":"ClientBlockPipeline::OwnedBlockVolume","slug":"clientblockpipeline-ownedblockvolume","link":"#clientblockpipeline-ownedblockvolume","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeViewOf<ClientBlockPipeline::BlockCell>","slug":"clientblockpipeline-volumeviewof-clientblockpipeline-blockcell","link":"#clientblockpipeline-volumeviewof-clientblockpipeline-blockcell","children":[]},{"level":3,"title":"ClientBlockPipeline::BlockTessellatorPipeline::_run::__l2::<lambda_95e3b116649ef0529b93b2b805ca35e0>","slug":"clientblockpipeline-blocktessellatorpipeline-run-l2-lambda-95e3b116649ef0529b93b2b805ca35e0","link":"#clientblockpipeline-blocktessellatorpipeline-run-l2-lambda-95e3b116649ef0529b93b2b805ca35e0","children":[]},{"level":3,"title":"ClientBlockPipeline::QuadIndices","slug":"clientblockpipeline-quadindices","link":"#clientblockpipeline-quadindices","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceDimmingStep","slug":"clientblockpipeline-facedimmingstep","link":"#clientblockpipeline-facedimmingstep","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceDimmingStep_vtbl","slug":"clientblockpipeline-facedimmingstep-vtbl","link":"#clientblockpipeline-facedimmingstep-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceAttribute<Vec3>","slug":"clientblockpipeline-faceattribute-vec3","link":"#clientblockpipeline-faceattribute-vec3","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceNormalAttributes","slug":"clientblockpipeline-facenormalattributes","link":"#clientblockpipeline-facenormalattributes","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceAttribute<float>","slug":"clientblockpipeline-faceattribute-float","link":"#clientblockpipeline-faceattribute-float","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceDimmingAttributes","slug":"clientblockpipeline-facedimmingattributes","link":"#clientblockpipeline-facedimmingattributes","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceAttribute<ClientBlockPipeline::Material const *>","slug":"clientblockpipeline-faceattribute-clientblockpipeline-material-const","link":"#clientblockpipeline-faceattribute-clientblockpipeline-material-const","children":[]},{"level":3,"title":"ClientBlockPipeline::MaterialFaceAttributes","slug":"clientblockpipeline-materialfaceattributes","link":"#clientblockpipeline-materialfaceattributes","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceMergingStep","slug":"clientblockpipeline-facemergingstep","link":"#clientblockpipeline-facemergingstep","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceMergingStep_vtbl","slug":"clientblockpipeline-facemergingstep-vtbl","link":"#clientblockpipeline-facemergingstep-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::LocalClipArea","slug":"clientblockpipeline-localcliparea","link":"#clientblockpipeline-localcliparea","children":[]},{"level":3,"title":"ClientBlockPipeline::VertexAttribute<Vec3>","slug":"clientblockpipeline-vertexattribute-vec3","link":"#clientblockpipeline-vertexattribute-vec3","children":[]},{"level":3,"title":"ClientBlockPipeline::PositionVertexAttributes","slug":"clientblockpipeline-positionvertexattributes","link":"#clientblockpipeline-positionvertexattributes","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceAttribute<ClientBlockPipeline::QuadIndices>","slug":"clientblockpipeline-faceattribute-clientblockpipeline-quadindices","link":"#clientblockpipeline-faceattribute-clientblockpipeline-quadindices","children":[]},{"level":3,"title":"ClientBlockPipeline::QuadIndicesFaceAttributes","slug":"clientblockpipeline-quadindicesfaceattributes","link":"#clientblockpipeline-quadindicesfaceattributes","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceAttribute<bool>","slug":"clientblockpipeline-faceattribute-bool","link":"#clientblockpipeline-faceattribute-bool","children":[]},{"level":3,"title":"ClientBlockPipeline::CulledFaceAttribute","slug":"clientblockpipeline-culledfaceattribute","link":"#clientblockpipeline-culledfaceattribute","children":[]},{"level":3,"title":"ClientBlockPipeline::FlatLightBakingStep","slug":"clientblockpipeline-flatlightbakingstep","link":"#clientblockpipeline-flatlightbakingstep","children":[]},{"level":3,"title":"ClientBlockPipeline::FlatLightBakingStep_vtbl","slug":"clientblockpipeline-flatlightbakingstep-vtbl","link":"#clientblockpipeline-flatlightbakingstep-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeOf<BrightnessPair>","slug":"clientblockpipeline-volumeof-brightnesspair","link":"#clientblockpipeline-volumeof-brightnesspair","children":[]},{"level":3,"title":"ClientBlockPipeline::LightVolume","slug":"clientblockpipeline-lightvolume","link":"#clientblockpipeline-lightvolume","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceAttribute<Vec2>","slug":"clientblockpipeline-faceattribute-vec2","link":"#clientblockpipeline-faceattribute-vec2","children":[]},{"level":3,"title":"ClientBlockPipeline::LightUvFaceAttributes","slug":"clientblockpipeline-lightuvfaceattributes","link":"#clientblockpipeline-lightuvfaceattributes","children":[]},{"level":3,"title":"ClientBlockPipeline::GpuBufferGenStep","slug":"clientblockpipeline-gpubuffergenstep","link":"#clientblockpipeline-gpubuffergenstep","children":[]},{"level":3,"title":"ClientBlockPipeline::GpuBufferGenStep_vtbl","slug":"clientblockpipeline-gpubuffergenstep-vtbl","link":"#clientblockpipeline-gpubuffergenstep-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceAttribute<ClientBlockPipeline::UvTransform>","slug":"clientblockpipeline-faceattribute-clientblockpipeline-uvtransform","link":"#clientblockpipeline-faceattribute-clientblockpipeline-uvtransform","children":[]},{"level":3,"title":"ClientBlockPipeline::ImageUvFaceAttributes","slug":"clientblockpipeline-imageuvfaceattributes","link":"#clientblockpipeline-imageuvfaceattributes","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceAttribute<unsigned char>","slug":"clientblockpipeline-faceattribute-unsigned-char","link":"#clientblockpipeline-faceattribute-unsigned-char","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceDirectionFaceAttributes","slug":"clientblockpipeline-facedirectionfaceattributes","link":"#clientblockpipeline-facedirectionfaceattributes","children":[]},{"level":3,"title":"ClientBlockPipeline::QuadVertexBrightnessUvs","slug":"clientblockpipeline-quadvertexbrightnessuvs","link":"#clientblockpipeline-quadvertexbrightnessuvs","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceAttribute<ClientBlockPipeline::QuadVertexBrightnessUvs>","slug":"clientblockpipeline-faceattribute-clientblockpipeline-quadvertexbrightnessuvs","link":"#clientblockpipeline-faceattribute-clientblockpipeline-quadvertexbrightnessuvs","children":[]},{"level":3,"title":"ClientBlockPipeline::SmoothLightingUvAttributes","slug":"clientblockpipeline-smoothlightinguvattributes","link":"#clientblockpipeline-smoothlightinguvattributes","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceAttribute<Vec4>","slug":"clientblockpipeline-faceattribute-vec4","link":"#clientblockpipeline-faceattribute-vec4","children":[]},{"level":3,"title":"ClientBlockPipeline::VertexAOAttributes","slug":"clientblockpipeline-vertexaoattributes","link":"#clientblockpipeline-vertexaoattributes","children":[]},{"level":3,"title":"ClientBlockPipeline::MaterialOverrideStep","slug":"clientblockpipeline-materialoverridestep","link":"#clientblockpipeline-materialoverridestep","children":[]},{"level":3,"title":"ClientBlockPipeline::MaterialOverrideStep_vtbl","slug":"clientblockpipeline-materialoverridestep-vtbl","link":"#clientblockpipeline-materialoverridestep-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::NormalGenerationStep","slug":"clientblockpipeline-normalgenerationstep","link":"#clientblockpipeline-normalgenerationstep","children":[]},{"level":3,"title":"ClientBlockPipeline::NormalGenerationStep_vtbl","slug":"clientblockpipeline-normalgenerationstep-vtbl","link":"#clientblockpipeline-normalgenerationstep-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::PrimitiveGenerationStep","slug":"clientblockpipeline-primitivegenerationstep","link":"#clientblockpipeline-primitivegenerationstep","children":[]},{"level":3,"title":"ClientBlockPipeline::PrimitiveGenerationStep_vtbl","slug":"clientblockpipeline-primitivegenerationstep-vtbl","link":"#clientblockpipeline-primitivegenerationstep-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::BlockSchematicInstance","slug":"clientblockpipeline-blockschematicinstance","link":"#clientblockpipeline-blockschematicinstance","children":[]},{"level":3,"title":"ClientBlockPipeline::BlockSchematicCell","slug":"clientblockpipeline-blockschematiccell","link":"#clientblockpipeline-blockschematiccell","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeOf<ClientBlockPipeline::BlockSchematicCell>","slug":"clientblockpipeline-volumeof-clientblockpipeline-blockschematiccell","link":"#clientblockpipeline-volumeof-clientblockpipeline-blockschematiccell","children":[]},{"level":3,"title":"ClientBlockPipeline::BlockSchematicVolume","slug":"clientblockpipeline-blockschematicvolume","link":"#clientblockpipeline-blockschematicvolume","children":[]},{"level":3,"title":"ClientBlockPipeline::BoxAttribute<ClientBlockPipeline::BoxSchematicInstance>","slug":"clientblockpipeline-boxattribute-clientblockpipeline-boxschematicinstance","link":"#clientblockpipeline-boxattribute-clientblockpipeline-boxschematicinstance","children":[]},{"level":3,"title":"ClientBlockPipeline::BoxSchematicAttributes","slug":"clientblockpipeline-boxschematicattributes","link":"#clientblockpipeline-boxschematicattributes","children":[]},{"level":3,"title":"ClientBlockPipeline::FaceSchematicAttributes","slug":"clientblockpipeline-faceschematicattributes","link":"#clientblockpipeline-faceschematicattributes","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeViewOf<ClientBlockPipeline::BlockSchematicCell>","slug":"clientblockpipeline-volumeviewof-clientblockpipeline-blockschematiccell","link":"#clientblockpipeline-volumeviewof-clientblockpipeline-blockschematiccell","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeViewOf<ClientBlockPipeline::BlockSchematicCell const >::VolumeViewOfIterator","slug":"clientblockpipeline-volumeviewof-clientblockpipeline-blockschematiccell-const-volumeviewofiterator","link":"#clientblockpipeline-volumeviewof-clientblockpipeline-blockschematiccell-const-volumeviewofiterator","children":[]},{"level":3,"title":"ClientBlockPipeline::SchematicsJoiningStep","slug":"clientblockpipeline-schematicsjoiningstep","link":"#clientblockpipeline-schematicsjoiningstep","children":[]},{"level":3,"title":"ClientBlockPipeline::SchematicsJoiningStep_vtbl","slug":"clientblockpipeline-schematicsjoiningstep-vtbl","link":"#clientblockpipeline-schematicsjoiningstep-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeOf<ClientBlockPipeline::BlockOpacityData>","slug":"clientblockpipeline-volumeof-clientblockpipeline-blockopacitydata","link":"#clientblockpipeline-volumeof-clientblockpipeline-blockopacitydata","children":[]},{"level":3,"title":"ClientBlockPipeline::SolidOpaqueBlockVolume","slug":"clientblockpipeline-solidopaqueblockvolume","link":"#clientblockpipeline-solidopaqueblockvolume","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeViewOf<ClientBlockPipeline::BlockCell const >::VolumeViewOfIterator","slug":"clientblockpipeline-volumeviewof-clientblockpipeline-blockcell-const-volumeviewofiterator","link":"#clientblockpipeline-volumeviewof-clientblockpipeline-blockcell-const-volumeviewofiterator","children":[]},{"level":3,"title":"ClientBlockPipeline::SchematicsMappingStep","slug":"clientblockpipeline-schematicsmappingstep","link":"#clientblockpipeline-schematicsmappingstep","children":[]},{"level":3,"title":"ClientBlockPipeline::SchematicsMappingStep_vtbl","slug":"clientblockpipeline-schematicsmappingstep-vtbl","link":"#clientblockpipeline-schematicsmappingstep-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::BakedBox","slug":"clientblockpipeline-bakedbox","link":"#clientblockpipeline-bakedbox","children":[]},{"level":3,"title":"ClientBlockPipeline::BakedNode","slug":"clientblockpipeline-bakednode","link":"#clientblockpipeline-bakednode","children":[]},{"level":3,"title":"ClientBlockPipeline::SmoothLightBakingStep","slug":"clientblockpipeline-smoothlightbakingstep","link":"#clientblockpipeline-smoothlightbakingstep","children":[]},{"level":3,"title":"ClientBlockPipeline::SmoothLightBakingStep_vtbl","slug":"clientblockpipeline-smoothlightbakingstep-vtbl","link":"#clientblockpipeline-smoothlightbakingstep-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeOf<float>","slug":"clientblockpipeline-volumeof-float","link":"#clientblockpipeline-volumeof-float","children":[]},{"level":3,"title":"ClientBlockPipeline::AOBrightnessVolume","slug":"clientblockpipeline-aobrightnessvolume","link":"#clientblockpipeline-aobrightnessvolume","children":[]},{"level":3,"title":"ClientBlockPipeline::SmoothLightBakingStep::VisibleCellData","slug":"clientblockpipeline-smoothlightbakingstep-visiblecelldata","link":"#clientblockpipeline-smoothlightbakingstep-visiblecelldata","children":[]},{"level":3,"title":"ClientBlockPipeline::SurfaceExtractionStep","slug":"clientblockpipeline-surfaceextractionstep","link":"#clientblockpipeline-surfaceextractionstep","children":[]},{"level":3,"title":"ClientBlockPipeline::SurfaceExtractionStep_vtbl","slug":"clientblockpipeline-surfaceextractionstep-vtbl","link":"#clientblockpipeline-surfaceextractionstep-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::SurfaceExtractionStep::_run::__l2::QuadData","slug":"clientblockpipeline-surfaceextractionstep-run-l2-quaddata","link":"#clientblockpipeline-surfaceextractionstep-run-l2-quaddata","children":[]},{"level":3,"title":"Core::SharedMemoryTracker::SharedMemoryTrackerBase","slug":"core-sharedmemorytracker-sharedmemorytrackerbase","link":"#core-sharedmemorytracker-sharedmemorytrackerbase","children":[]},{"level":3,"title":"Core::SharedMemoryTracker::SharedMemoryTrackerBase_vtbl","slug":"core-sharedmemorytracker-sharedmemorytrackerbase-vtbl","link":"#core-sharedmemorytracker-sharedmemorytrackerbase-vtbl","children":[]},{"level":3,"title":"cg::details::WorkToken","slug":"cg-details-worktoken","link":"#cg-details-worktoken","children":[]},{"level":3,"title":"cg::GroupPoolDescription","slug":"cg-grouppooldescription","link":"#cg-grouppooldescription","children":[]},{"level":3,"title":"cg::TaskDispatcherSchedulerTraits<cg::TaskScheduler<cg::LambdaExecutor<dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> > >","slug":"cg-taskdispatcherschedulertraits-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const","link":"#cg-taskdispatcherschedulertraits-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const","children":[]},{"level":3,"title":"cg::TaskDispatcher<cg::TaskScheduler<cg::LambdaExecutor<dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> > >::TaskDispatcherExecution","slug":"cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution","link":"#cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution","children":[]},{"level":3,"title":"cg::SchedulerExecutionTraits<cg::LambdaExecutor<dragon::rendering::RenderContext,cg::TaskPoolGroupExecutionPolicy<dragon::rendering::RenderContext,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &>,cg::details::WorkToken>","slug":"cg-schedulerexecutiontraits-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-cg-details-worktoken","link":"#cg-schedulerexecutiontraits-cg-lambdaexecutor-dragon-rendering-rendercontext-cg-taskpoolgroupexecutionpolicy-dragon-rendering-rendercontext-1-std-string-const-std-vector-cg-grouppooldescription-const-cg-details-worktoken","children":[]},{"level":3,"title":"cg::details::DispatchToken<std::shared_ptr<cg::details::WorkToken const >,std::shared_ptr<std::function<void __cdecl(dragon::rendering::RenderContext &)> > >","slug":"cg-details-dispatchtoken-std-shared-ptr-cg-details-worktoken-const-std-shared-ptr-std-function-void-cdecl-dragon-rendering-rendercontext","link":"#cg-details-dispatchtoken-std-shared-ptr-cg-details-worktoken-const-std-shared-ptr-std-function-void-cdecl-dragon-rendering-rendercontext","children":[]},{"level":3,"title":"Core::Cache<unsigned __int64,dragon::rendering::BufferResourceManager<dragon::rendering::TextureResourceType>::BufferResource,std::shared_ptr<dragon::rendering::BufferResourceManager<dragon::rendering::TextureResourceType>::BufferResource> >","slug":"core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource","link":"#core-cache-unsigned-int64-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource-std-shared-ptr-dragon-rendering-bufferresourcemanager-dragon-rendering-textureresourcetype-bufferresource","children":[]},{"level":3,"title":"ClientBlockPipeline::WorldExtractorStep","slug":"clientblockpipeline-worldextractorstep","link":"#clientblockpipeline-worldextractorstep","children":[]},{"level":3,"title":"ClientBlockPipeline::WorldExtractorStep_vtbl","slug":"clientblockpipeline-worldextractorstep-vtbl","link":"#clientblockpipeline-worldextractorstep-vtbl","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeOf<int>","slug":"clientblockpipeline-volumeof-int","link":"#clientblockpipeline-volumeof-int","children":[]},{"level":3,"title":"ClientBlockPipeline::GrassTintVolume","slug":"clientblockpipeline-grasstintvolume","link":"#clientblockpipeline-grasstintvolume","children":[]},{"level":3,"title":"ClientBlockPipeline::WaterTintVolume","slug":"clientblockpipeline-watertintvolume","link":"#clientblockpipeline-watertintvolume","children":[]},{"level":3,"title":"ClientBlockPipeline::VolumeViewOf<ClientBlockPipeline::BlockCell>::VolumeViewOfIterator","slug":"clientblockpipeline-volumeviewof-clientblockpipeline-blockcell-volumeviewofiterator","link":"#clientblockpipeline-volumeviewof-clientblockpipeline-blockcell-volumeviewofiterator","children":[]},{"level":3,"title":"ClientBlockPipeline::WorldClipArea","slug":"clientblockpipeline-worldcliparea","link":"#clientblockpipeline-worldcliparea","children":[]},{"level":3,"title":"CrimsonForestMoodSoundPlayer","slug":"crimsonforestmoodsoundplayer","link":"#crimsonforestmoodsoundplayer","children":[]},{"level":3,"title":"CommerceAuthToken","slug":"commerceauthtoken","link":"#commerceauthtoken","children":[]},{"level":3,"title":"CommerceIdentity","slug":"commerceidentity","link":"#commerceidentity","children":[]},{"level":3,"title":"Crypto::Pkcs7::ISystemInterface","slug":"crypto-pkcs7-isysteminterface","link":"#crypto-pkcs7-isysteminterface","children":[]},{"level":3,"title":"Crypto::Pkcs7::ISystemInterface_vtbl","slug":"crypto-pkcs7-isysteminterface-vtbl","link":"#crypto-pkcs7-isysteminterface-vtbl","children":[]},{"level":3,"title":"cmsghdr","slug":"cmsghdr","link":"#cmsghdr","children":[]},{"level":3,"title":"Concurrency::Context","slug":"concurrency-context","link":"#concurrency-context","children":[]},{"level":3,"title":"Concurrency::Context_vtbl","slug":"concurrency-context-vtbl","link":"#concurrency-context-vtbl","children":[]},{"level":3,"title":"Concurrency::message_not_found","slug":"concurrency-message-not-found","link":"#concurrency-message-not-found","children":[]},{"level":3,"title":"Concurrency::message_not_found_vtbl","slug":"concurrency-message-not-found-vtbl","link":"#concurrency-message-not-found-vtbl","children":[]},{"level":3,"title":"Concurrency::critical_section","slug":"concurrency-critical-section","link":"#concurrency-critical-section","children":[]},{"level":3,"title":"Concurrency::critical_section::scoped_lock","slug":"concurrency-critical-section-scoped-lock","link":"#concurrency-critical-section-scoped-lock","children":[]},{"level":3,"title":"Concurrency::Scheduler","slug":"concurrency-scheduler","link":"#concurrency-scheduler","children":[]},{"level":3,"title":"Concurrency::SchedulerPolicy::_PolicyBag::<unnamed_type__M_values>::<unnamed_type__M_specificValues>","slug":"concurrency-schedulerpolicy-policybag-unnamed-type-m-values-unnamed-type-m-specificvalues","link":"#concurrency-schedulerpolicy-policybag-unnamed-type-m-values-unnamed-type-m-specificvalues","children":[]},{"level":3,"title":"Concurrency::SchedulerPolicy::_PolicyBag","slug":"concurrency-schedulerpolicy-policybag","link":"#concurrency-schedulerpolicy-policybag","children":[]},{"level":3,"title":"Concurrency::SchedulerPolicy","slug":"concurrency-schedulerpolicy","link":"#concurrency-schedulerpolicy","children":[]},{"level":3,"title":"Concurrency::ScheduleGroup","slug":"concurrency-schedulegroup","link":"#concurrency-schedulegroup","children":[]},{"level":3,"title":"Concurrency::ScheduleGroup_vtbl","slug":"concurrency-schedulegroup-vtbl","link":"#concurrency-schedulegroup-vtbl","children":[]},{"level":3,"title":"Concurrency::location","slug":"concurrency-location","link":"#concurrency-location","children":[]},{"level":3,"title":"Concurrency::Scheduler_vtbl","slug":"concurrency-scheduler-vtbl","link":"#concurrency-scheduler-vtbl","children":[]},{"level":3,"title":"Concurrency::scheduler_resource_allocation_error","slug":"concurrency-scheduler-resource-allocation-error","link":"#concurrency-scheduler-resource-allocation-error","children":[]},{"level":3,"title":"Concurrency::scheduler_resource_allocation_error_vtbl","slug":"concurrency-scheduler-resource-allocation-error-vtbl","link":"#concurrency-scheduler-resource-allocation-error-vtbl","children":[]},{"level":3,"title":"Concurrency::scheduler_worker_creation_error","slug":"concurrency-scheduler-worker-creation-error","link":"#concurrency-scheduler-worker-creation-error","children":[]},{"level":3,"title":"Concurrency::scheduler_worker_creation_error_vtbl","slug":"concurrency-scheduler-worker-creation-error-vtbl","link":"#concurrency-scheduler-worker-creation-error-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_RefCounterBase","slug":"concurrency-details-refcounterbase","link":"#concurrency-details-refcounterbase","children":[]},{"level":3,"title":"Concurrency::details::_RefCounterBase_vtbl","slug":"concurrency-details-refcounterbase-vtbl","link":"#concurrency-details-refcounterbase-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_TaskCollectionBase","slug":"concurrency-details-taskcollectionbase","link":"#concurrency-details-taskcollectionbase","children":[]},{"level":3,"title":"Concurrency::details::_RefCounter","slug":"concurrency-details-refcounter","link":"#concurrency-details-refcounter","children":[]},{"level":3,"title":"Concurrency::details::_RefCounter_vtbl","slug":"concurrency-details-refcounter-vtbl","link":"#concurrency-details-refcounter-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_CancellationTokenRegistration","slug":"concurrency-details-cancellationtokenregistration","link":"#concurrency-details-cancellationtokenregistration","children":[]},{"level":3,"title":"Concurrency::details::_CancellationTokenState","slug":"concurrency-details-cancellationtokenstate","link":"#concurrency-details-cancellationtokenstate","children":[]},{"level":3,"title":"Concurrency::details::_CancellationTokenRegistration_vtbl","slug":"concurrency-details-cancellationtokenregistration-vtbl","link":"#concurrency-details-cancellationtokenregistration-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_CancellationTokenState::TokenRegistrationContainer::_Node","slug":"concurrency-details-cancellationtokenstate-tokenregistrationcontainer-node","link":"#concurrency-details-cancellationtokenstate-tokenregistrationcontainer-node","children":[]},{"level":3,"title":"Concurrency::details::_CancellationTokenState::TokenRegistrationContainer","slug":"concurrency-details-cancellationtokenstate-tokenregistrationcontainer","link":"#concurrency-details-cancellationtokenstate-tokenregistrationcontainer","children":[]},{"level":3,"title":"Concurrency::details::_CancellationTokenState_vtbl","slug":"concurrency-details-cancellationtokenstate-vtbl","link":"#concurrency-details-cancellationtokenstate-vtbl","children":[]},{"level":3,"title":"Concurrency::event","slug":"concurrency-event","link":"#concurrency-event","children":[]},{"level":3,"title":"Concurrency::details::_TaskCollection","slug":"concurrency-details-taskcollection","link":"#concurrency-details-taskcollection","children":[]},{"level":3,"title":"Concurrency::details::_AsyncTaskCollection","slug":"concurrency-details-asynctaskcollection","link":"#concurrency-details-asynctaskcollection","children":[]},{"level":3,"title":"Concurrency::details::_AsyncTaskCollection_vtbl","slug":"concurrency-details-asynctaskcollection-vtbl","link":"#concurrency-details-asynctaskcollection-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_Chore","slug":"concurrency-details-chore","link":"#concurrency-details-chore","children":[]},{"level":3,"title":"Concurrency::details::_Chore_vtbl","slug":"concurrency-details-chore-vtbl","link":"#concurrency-details-chore-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_AllocBase","slug":"concurrency-details-allocbase","link":"#concurrency-details-allocbase","children":[]},{"level":3,"title":"Concurrency::details::_UnrealizedChore","slug":"concurrency-details-unrealizedchore","link":"#concurrency-details-unrealizedchore","children":[]},{"level":3,"title":"Concurrency::details::_UnrealizedChore_vtbl","slug":"concurrency-details-unrealizedchore-vtbl","link":"#concurrency-details-unrealizedchore-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_Task_generator_oversubscriber","slug":"concurrency-details-task-generator-oversubscriber","link":"#concurrency-details-task-generator-oversubscriber","children":[]},{"level":3,"title":"Concurrency::details::_Beacon_reference","slug":"concurrency-details-beacon-reference","link":"#concurrency-details-beacon-reference","children":[]},{"level":3,"title":"Concurrency::details::_Cancellation_beacon","slug":"concurrency-details-cancellation-beacon","link":"#concurrency-details-cancellation-beacon","children":[]},{"level":3,"title":"Concurrency::details::_NonReentrantBlockingLock","slug":"concurrency-details-nonreentrantblockinglock","link":"#concurrency-details-nonreentrantblockinglock","children":[]},{"level":3,"title":"Concurrency::details::_NonReentrantBlockingLock::_Scoped_lock","slug":"concurrency-details-nonreentrantblockinglock-scoped-lock","link":"#concurrency-details-nonreentrantblockinglock-scoped-lock","children":[]},{"level":3,"title":"Concurrency::details::_CancellationTokenCallback<<lambda_a40cf361f6b489cdc7950415e60bfc49> >","slug":"concurrency-details-cancellationtokencallback-lambda-a40cf361f6b489cdc7950415e60bfc49","link":"#concurrency-details-cancellationtokencallback-lambda-a40cf361f6b489cdc7950415e60bfc49","children":[]},{"level":3,"title":"Concurrency::details::_CancellationTokenCallback<<lambda_a40cf361f6b489cdc7950415e60bfc49> >_vtbl","slug":"concurrency-details-cancellationtokencallback-lambda-a40cf361f6b489cdc7950415e60bfc49-vtbl","link":"#concurrency-details-cancellationtokencallback-lambda-a40cf361f6b489cdc7950415e60bfc49-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_Task_impl_base","slug":"concurrency-details-task-impl-base","link":"#concurrency-details-task-impl-base","children":[]},{"level":3,"title":"Concurrency::details::_ExceptionHolder","slug":"concurrency-details-exceptionholder","link":"#concurrency-details-exceptionholder","children":[]},{"level":3,"title":"Concurrency::details::_Task_impl_base_vtbl","slug":"concurrency-details-task-impl-base-vtbl","link":"#concurrency-details-task-impl-base-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_TaskProcHandle","slug":"concurrency-details-taskprochandle","link":"#concurrency-details-taskprochandle","children":[]},{"level":3,"title":"Concurrency::details::_TaskProcHandle_vtbl","slug":"concurrency-details-taskprochandle-vtbl","link":"#concurrency-details-taskprochandle-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_ContinuationTaskHandleBase","slug":"concurrency-details-continuationtaskhandlebase","link":"#concurrency-details-continuationtaskhandlebase","children":[]},{"level":3,"title":"Concurrency::details::_ContinuationTaskHandleBase_vtbl","slug":"concurrency-details-continuationtaskhandlebase-vtbl","link":"#concurrency-details-continuationtaskhandlebase-vtbl","children":[]},{"level":3,"title":"Concurrency::scheduler_interface_vtbl","slug":"concurrency-scheduler-interface-vtbl","link":"#concurrency-scheduler-interface-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_TaskCollectionBaseImpl","slug":"concurrency-details-taskcollectionbaseimpl","link":"#concurrency-details-taskcollectionbaseimpl","children":[]},{"level":3,"title":"Concurrency::details::_TaskEventLogger","slug":"concurrency-details-taskeventlogger","link":"#concurrency-details-taskeventlogger","children":[]},{"level":3,"title":"Concurrency::details::_Task_impl_base::_RegisterCancellation::__l2::<lambda_be3e5d9dce35d2c8dbfa8485373731d5>","slug":"concurrency-details-task-impl-base-registercancellation-l2-lambda-be3e5d9dce35d2c8dbfa8485373731d5","link":"#concurrency-details-task-impl-base-registercancellation-l2-lambda-be3e5d9dce35d2c8dbfa8485373731d5","children":[]},{"level":3,"title":"Concurrency::details::_CancellationTokenCallback<<lambda_be3e5d9dce35d2c8dbfa8485373731d5> >","slug":"concurrency-details-cancellationtokencallback-lambda-be3e5d9dce35d2c8dbfa8485373731d5","link":"#concurrency-details-cancellationtokencallback-lambda-be3e5d9dce35d2c8dbfa8485373731d5","children":[]},{"level":3,"title":"Concurrency::details::_CancellationTokenCallback<<lambda_be3e5d9dce35d2c8dbfa8485373731d5> >_vtbl","slug":"concurrency-details-cancellationtokencallback-lambda-be3e5d9dce35d2c8dbfa8485373731d5-vtbl","link":"#concurrency-details-cancellationtokencallback-lambda-be3e5d9dce35d2c8dbfa8485373731d5-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_TypeSelectorAsyncAction","slug":"concurrency-details-typeselectorasyncaction","link":"#concurrency-details-typeselectorasyncaction","children":[]},{"level":3,"title":"Concurrency::details::_Interruption_exception","slug":"concurrency-details-interruption-exception","link":"#concurrency-details-interruption-exception","children":[]},{"level":3,"title":"Concurrency::details::_Interruption_exception_vtbl","slug":"concurrency-details-interruption-exception-vtbl","link":"#concurrency-details-interruption-exception-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_ResultHolder<unsigned char>","slug":"concurrency-details-resultholder-unsigned-char","link":"#concurrency-details-resultholder-unsigned-char","children":[]},{"level":3,"title":"Concurrency::details::_Task_impl<unsigned char>","slug":"concurrency-details-task-impl-unsigned-char","link":"#concurrency-details-task-impl-unsigned-char","children":[]},{"level":3,"title":"Concurrency::details::_Task_impl<unsigned char>_vtbl","slug":"concurrency-details-task-impl-unsigned-char-vtbl","link":"#concurrency-details-task-impl-unsigned-char-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_Task_completion_event_impl<unsigned char>","slug":"concurrency-details-task-completion-event-impl-unsigned-char","link":"#concurrency-details-task-completion-event-impl-unsigned-char","children":[]},{"level":3,"title":"Concurrency::details::_TaskProcThunk","slug":"concurrency-details-taskprocthunk","link":"#concurrency-details-taskprocthunk","children":[]},{"level":3,"title":"Concurrency::details::_TaskProcThunk::_Holder","slug":"concurrency-details-taskprocthunk-holder","link":"#concurrency-details-taskprocthunk-holder","children":[]},{"level":3,"title":"Concurrency::details::CancellationTokenRegistration_TaskProc","slug":"concurrency-details-cancellationtokenregistration-taskproc","link":"#concurrency-details-cancellationtokenregistration-taskproc","children":[]},{"level":3,"title":"Concurrency::details::CancellationTokenRegistration_TaskProc_vtbl","slug":"concurrency-details-cancellationtokenregistration-taskproc-vtbl","link":"#concurrency-details-cancellationtokenregistration-taskproc-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_TaskWorkItemRAIILogger","slug":"concurrency-details-taskworkitemraiilogger","link":"#concurrency-details-taskworkitemraiilogger","children":[]},{"level":3,"title":"Concurrency::details::_Scheduler","slug":"concurrency-details-scheduler","link":"#concurrency-details-scheduler","children":[]},{"level":3,"title":"Concurrency::details::_ThenImplOptions","slug":"concurrency-details-thenimploptions","link":"#concurrency-details-thenimploptions","children":[]},{"level":3,"title":"Concurrency::details::_ReentrantPPLLock","slug":"concurrency-details-reentrantppllock","link":"#concurrency-details-reentrantppllock","children":[]},{"level":3,"title":"Concurrency::details::_ReentrantPPLLock::_Scoped_lock","slug":"concurrency-details-reentrantppllock-scoped-lock","link":"#concurrency-details-reentrantppllock-scoped-lock","children":[]},{"level":3,"title":"Concurrency::details::_TaskTypeFromParam<Concurrency::task_completion_event<void> >","slug":"concurrency-details-tasktypefromparam-concurrency-task-completion-event-void","link":"#concurrency-details-tasktypefromparam-concurrency-task-completion-event-void","children":[]},{"level":3,"title":"Concurrency::details::_IsUnwrappedAsyncSelector<Concurrency::details::_TypeSelectorNoAsync>","slug":"concurrency-details-isunwrappedasyncselector-concurrency-details-typeselectornoasync","link":"#concurrency-details-isunwrappedasyncselector-concurrency-details-typeselectornoasync","children":[]},{"level":3,"title":"Concurrency::details::_Context","slug":"concurrency-details-context","link":"#concurrency-details-context","children":[]},{"level":3,"title":"Concurrency::details::_BadArgType","slug":"concurrency-details-badargtype","link":"#concurrency-details-badargtype","children":[]},{"level":3,"title":"Concurrency::details::_SpinCount","slug":"concurrency-details-spincount","link":"#concurrency-details-spincount","children":[]},{"level":3,"title":"Concurrency::task_completion_event<unsigned char>","slug":"concurrency-task-completion-event-unsigned-char","link":"#concurrency-task-completion-event-unsigned-char","children":[]},{"level":3,"title":"Concurrency::details::_RunAllParam<unsigned char>","slug":"concurrency-details-runallparam-unsigned-char","link":"#concurrency-details-runallparam-unsigned-char","children":[]},{"level":3,"title":"Concurrency::details::_Threadpool_chore","slug":"concurrency-details-threadpool-chore","link":"#concurrency-details-threadpool-chore","children":[]},{"level":3,"title":"Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore","slug":"concurrency-details-defaultppltaskscheduler-ppltaskchore","link":"#concurrency-details-defaultppltaskscheduler-ppltaskchore","children":[]},{"level":3,"title":"Concurrency::details::_DefaultPPLTaskScheduler_vtbl","slug":"concurrency-details-defaultppltaskscheduler-vtbl","link":"#concurrency-details-defaultppltaskscheduler-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_Threadpool_task","slug":"concurrency-details-threadpool-task","link":"#concurrency-details-threadpool-task","children":[]},{"level":3,"title":"Concurrency::details::_Threadpool_task_vtbl","slug":"concurrency-details-threadpool-task-vtbl","link":"#concurrency-details-threadpool-task-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_TypeSelectorAsyncOperationOrTask","slug":"concurrency-details-typeselectorasyncoperationortask","link":"#concurrency-details-typeselectorasyncoperationortask","children":[]},{"level":3,"title":"Concurrency::details::_TypeSelectorAsyncTask","slug":"concurrency-details-typeselectorasynctask","link":"#concurrency-details-typeselectorasynctask","children":[]},{"level":3,"title":"Concurrency::details::_CurrentScheduler","slug":"concurrency-details-currentscheduler","link":"#concurrency-details-currentscheduler","children":[]},{"level":3,"title":"Concurrency::details::_Task_ptr<unsigned __int64>","slug":"concurrency-details-task-ptr-unsigned-int64","link":"#concurrency-details-task-ptr-unsigned-int64","children":[]},{"level":3,"title":"Concurrency::details::_Task_ptr<unsigned char>","slug":"concurrency-details-task-ptr-unsigned-char","link":"#concurrency-details-task-ptr-unsigned-char","children":[]},{"level":3,"title":"Concurrency::details::_ResultHolder<std::vector<bool> >","slug":"concurrency-details-resultholder-std-vector-bool","link":"#concurrency-details-resultholder-std-vector-bool","children":[]},{"level":3,"title":"Concurrency::details::_ReentrantLock","slug":"concurrency-details-reentrantlock","link":"#concurrency-details-reentrantlock","children":[]},{"level":3,"title":"Concurrency::details::_ReentrantLock::_Scoped_lock","slug":"concurrency-details-reentrantlock-scoped-lock","link":"#concurrency-details-reentrantlock-scoped-lock","children":[]},{"level":3,"title":"Concurrency::details::_SpinLock","slug":"concurrency-details-spinlock","link":"#concurrency-details-spinlock","children":[]},{"level":3,"title":"Concurrency::details::_NormalizeVoidToUnitType<void>","slug":"concurrency-details-normalizevoidtounittype-void","link":"#concurrency-details-normalizevoidtounittype-void","children":[]},{"level":3,"title":"Concurrency::details::_TypeSelectorNoAsync","slug":"concurrency-details-typeselectornoasync","link":"#concurrency-details-typeselectornoasync","children":[]},{"level":3,"title":"Concurrency::details::_CONCRT_TRACE_INFO","slug":"concurrency-details-concrt-trace-info","link":"#concurrency-details-concrt-trace-info","children":[]},{"level":3,"title":"Concurrency::details::_Timer","slug":"concurrency-details-timer","link":"#concurrency-details-timer","children":[]},{"level":3,"title":"Concurrency::details::_Timer_vtbl","slug":"concurrency-details-timer-vtbl","link":"#concurrency-details-timer-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_TaskTypeTraits<void,0>","slug":"concurrency-details-tasktypetraits-void-0","link":"#concurrency-details-tasktypetraits-void-0","children":[]},{"level":3,"title":"Concurrency::details::_StructuredTaskCollection","slug":"concurrency-details-structuredtaskcollection","link":"#concurrency-details-structuredtaskcollection","children":[]},{"level":3,"title":"Concurrency::details::_CancellationTokenCallback<<lambda_cef198b90b48c5c98bd59f7c1dcac0b2> >","slug":"concurrency-details-cancellationtokencallback-lambda-cef198b90b48c5c98bd59f7c1dcac0b2","link":"#concurrency-details-cancellationtokencallback-lambda-cef198b90b48c5c98bd59f7c1dcac0b2","children":[]},{"level":3,"title":"Concurrency::details::_CancellationTokenCallback<<lambda_cef198b90b48c5c98bd59f7c1dcac0b2> >_vtbl","slug":"concurrency-details-cancellationtokencallback-lambda-cef198b90b48c5c98bd59f7c1dcac0b2-vtbl","link":"#concurrency-details-cancellationtokencallback-lambda-cef198b90b48c5c98bd59f7c1dcac0b2-vtbl","children":[]},{"level":3,"title":"Concurrency::details::_ReaderWriterLock","slug":"concurrency-details-readerwriterlock","link":"#concurrency-details-readerwriterlock","children":[]},{"level":3,"title":"Concurrency::details::_ReaderWriterLock::_Scoped_lock","slug":"concurrency-details-readerwriterlock-scoped-lock","link":"#concurrency-details-readerwriterlock-scoped-lock","children":[]},{"level":3,"title":"Concurrency::details::_ReaderWriterLock::_Scoped_lock_read","slug":"concurrency-details-readerwriterlock-scoped-lock-read","link":"#concurrency-details-readerwriterlock-scoped-lock-read","children":[]},{"level":3,"title":"Concurrency::details::_BadContinuationParamType","slug":"concurrency-details-badcontinuationparamtype","link":"#concurrency-details-badcontinuationparamtype","children":[]},{"level":3,"title":"Concurrency::details::_DefaultTaskHelper","slug":"concurrency-details-defaulttaskhelper","link":"#concurrency-details-defaulttaskhelper","children":[]},{"level":3,"title":"Concurrency::details::_NonReentrantPPLLock","slug":"concurrency-details-nonreentrantppllock","link":"#concurrency-details-nonreentrantppllock","children":[]},{"level":3,"title":"Concurrency::details::_NonReentrantPPLLock::_Scoped_lock","slug":"concurrency-details-nonreentrantppllock-scoped-lock","link":"#concurrency-details-nonreentrantppllock-scoped-lock","children":[]},{"level":3,"title":"Concurrency::details::_StackGuard","slug":"concurrency-details-stackguard","link":"#concurrency-details-stackguard","children":[]},{"level":3,"title":"Concurrency::details::_Subatomic_impl<4>","slug":"concurrency-details-subatomic-impl-4","link":"#concurrency-details-subatomic-impl-4","children":[]},{"level":3,"title":"Concurrency::details::_ReentrantBlockingLock","slug":"concurrency-details-reentrantblockinglock","link":"#concurrency-details-reentrantblockinglock","children":[]},{"level":3,"title":"Concurrency::details::_ReentrantBlockingLock::_Scoped_lock","slug":"concurrency-details-reentrantblockinglock-scoped-lock","link":"#concurrency-details-reentrantblockinglock-scoped-lock","children":[]},{"level":3,"title":"Concurrency::details::_Subatomic_impl<8>","slug":"concurrency-details-subatomic-impl-8","link":"#concurrency-details-subatomic-impl-8","children":[]},{"level":3,"title":"Concurrency::details::_TypeSelectorAsyncOperationWithProgress","slug":"concurrency-details-typeselectorasyncoperationwithprogress","link":"#concurrency-details-typeselectorasyncoperationwithprogress","children":[]},{"level":3,"title":"Concurrency::details::_ProgressReporterCtorArgType","slug":"concurrency-details-progressreporterctorargtype","link":"#concurrency-details-progressreporterctorargtype","children":[]},{"level":3,"title":"Concurrency::details::_TypeSelectorAsyncOperation","slug":"concurrency-details-typeselectorasyncoperation","link":"#concurrency-details-typeselectorasyncoperation","children":[]},{"level":3,"title":"Concurrency::details::_TypeSelectorAsyncActionWithProgress","slug":"concurrency-details-typeselectorasyncactionwithprogress","link":"#concurrency-details-typeselectorasyncactionwithprogress","children":[]},{"level":3,"title":"Concurrency::improper_scheduler_reference","slug":"concurrency-improper-scheduler-reference","link":"#concurrency-improper-scheduler-reference","children":[]},{"level":3,"title":"Concurrency::improper_scheduler_reference_vtbl","slug":"concurrency-improper-scheduler-reference-vtbl","link":"#concurrency-improper-scheduler-reference-vtbl","children":[]},{"level":3,"title":"Concurrency::auto_partitioner","slug":"concurrency-auto-partitioner","link":"#concurrency-auto-partitioner","children":[]},{"level":3,"title":"Concurrency::simple_partitioner","slug":"concurrency-simple-partitioner","link":"#concurrency-simple-partitioner","children":[]},{"level":3,"title":"Concurrency::task_group","slug":"concurrency-task-group","link":"#concurrency-task-group","children":[]},{"level":3,"title":"Concurrency::CurrentScheduler","slug":"concurrency-currentscheduler","link":"#concurrency-currentscheduler","children":[]},{"level":3,"title":"Concurrency::_Binary_transform_impl_helper<std::random_access_iterator_tag,std::random_access_iterator_tag,std::random_access_iterator_tag>","slug":"concurrency-binary-transform-impl-helper-std-random-access-iterator-tag-std-random-access-iterator-tag-std-random-access-iterator-tag","link":"#concurrency-binary-transform-impl-helper-std-random-access-iterator-tag-std-random-access-iterator-tag-std-random-access-iterator-tag","children":[]},{"level":3,"title":"Concurrency::_Init_func_transformer<void>","slug":"concurrency-init-func-transformer-void","link":"#concurrency-init-func-transformer-void","children":[]},{"level":3,"title":"Concurrency::_Continuation_func_transformer<void,void>","slug":"concurrency-continuation-func-transformer-void-void","link":"#concurrency-continuation-func-transformer-void-void","children":[]},{"level":3,"title":"Concurrency::bad_target","slug":"concurrency-bad-target","link":"#concurrency-bad-target","children":[]},{"level":3,"title":"Concurrency::bad_target_vtbl","slug":"concurrency-bad-target-vtbl","link":"#concurrency-bad-target-vtbl","children":[]},{"level":3,"title":"Concurrency::invalid_oversubscribe_operation","slug":"concurrency-invalid-oversubscribe-operation","link":"#concurrency-invalid-oversubscribe-operation","children":[]},{"level":3,"title":"Concurrency::invalid_oversubscribe_operation_vtbl","slug":"concurrency-invalid-oversubscribe-operation-vtbl","link":"#concurrency-invalid-oversubscribe-operation-vtbl","children":[]},{"level":3,"title":"Concurrency::task<unsigned __int64>","slug":"concurrency-task-unsigned-int64","link":"#concurrency-task-unsigned-int64","children":[]},{"level":3,"title":"Concurrency::unsupported_os","slug":"concurrency-unsupported-os","link":"#concurrency-unsupported-os","children":[]},{"level":3,"title":"Concurrency::unsupported_os_vtbl","slug":"concurrency-unsupported-os-vtbl","link":"#concurrency-unsupported-os-vtbl","children":[]},{"level":3,"title":"Concurrency::scheduler_not_attached","slug":"concurrency-scheduler-not-attached","link":"#concurrency-scheduler-not-attached","children":[]},{"level":3,"title":"Concurrency::scheduler_not_attached_vtbl","slug":"concurrency-scheduler-not-attached-vtbl","link":"#concurrency-scheduler-not-attached-vtbl","children":[]},{"level":3,"title":"Concurrency::invalid_link_target","slug":"concurrency-invalid-link-target","link":"#concurrency-invalid-link-target","children":[]},{"level":3,"title":"Concurrency::invalid_link_target_vtbl","slug":"concurrency-invalid-link-target-vtbl","link":"#concurrency-invalid-link-target-vtbl","children":[]},{"level":3,"title":"Concurrency::cancellation_token_registration","slug":"concurrency-cancellation-token-registration","link":"#concurrency-cancellation-token-registration","children":[]},{"level":3,"title":"Concurrency::invalid_scheduler_policy_thread_specification","slug":"concurrency-invalid-scheduler-policy-thread-specification","link":"#concurrency-invalid-scheduler-policy-thread-specification","children":[]},{"level":3,"title":"Concurrency::invalid_scheduler_policy_thread_specification_vtbl","slug":"concurrency-invalid-scheduler-policy-thread-specification-vtbl","link":"#concurrency-invalid-scheduler-policy-thread-specification-vtbl","children":[]},{"level":3,"title":"Concurrency::cancellation_token_source","slug":"concurrency-cancellation-token-source","link":"#concurrency-cancellation-token-source","children":[]},{"level":3,"title":"Concurrency::structured_task_group","slug":"concurrency-structured-task-group","link":"#concurrency-structured-task-group","children":[]},{"level":3,"title":"Concurrency::invalid_multiple_scheduling","slug":"concurrency-invalid-multiple-scheduling","link":"#concurrency-invalid-multiple-scheduling","children":[]},{"level":3,"title":"Concurrency::invalid_multiple_scheduling_vtbl","slug":"concurrency-invalid-multiple-scheduling-vtbl","link":"#concurrency-invalid-multiple-scheduling-vtbl","children":[]},{"level":3,"title":"Concurrency::static_partitioner","slug":"concurrency-static-partitioner","link":"#concurrency-static-partitioner","children":[]},{"level":3,"title":"Concurrency::task<unsigned char>","slug":"concurrency-task-unsigned-char","link":"#concurrency-task-unsigned-char","children":[]},{"level":3,"title":"Concurrency::task<void>","slug":"concurrency-task-void","link":"#concurrency-task-void","children":[]},{"level":3,"title":"Concurrency::task_completion_event<void>","slug":"concurrency-task-completion-event-void","link":"#concurrency-task-completion-event-void","children":[]},{"level":3,"title":"Concurrency::operation_timed_out","slug":"concurrency-operation-timed-out","link":"#concurrency-operation-timed-out","children":[]},{"level":3,"title":"Concurrency::operation_timed_out_vtbl","slug":"concurrency-operation-timed-out-vtbl","link":"#concurrency-operation-timed-out-vtbl","children":[]},{"level":3,"title":"Concurrency::invalid_scheduler_policy_value","slug":"concurrency-invalid-scheduler-policy-value","link":"#concurrency-invalid-scheduler-policy-value","children":[]},{"level":3,"title":"Concurrency::invalid_scheduler_policy_value_vtbl","slug":"concurrency-invalid-scheduler-policy-value-vtbl","link":"#concurrency-invalid-scheduler-policy-value-vtbl","children":[]},{"level":3,"title":"Concurrency::task_canceled","slug":"concurrency-task-canceled","link":"#concurrency-task-canceled","children":[]},{"level":3,"title":"Concurrency::task_canceled_vtbl","slug":"concurrency-task-canceled-vtbl","link":"#concurrency-task-canceled-vtbl","children":[]},{"level":3,"title":"Concurrency::context_self_unblock","slug":"concurrency-context-self-unblock","link":"#concurrency-context-self-unblock","children":[]},{"level":3,"title":"Concurrency::context_self_unblock_vtbl","slug":"concurrency-context-self-unblock-vtbl","link":"#concurrency-context-self-unblock-vtbl","children":[]},{"level":3,"title":"Concurrency::nested_scheduler_missing_detach","slug":"concurrency-nested-scheduler-missing-detach","link":"#concurrency-nested-scheduler-missing-detach","children":[]},{"level":3,"title":"Concurrency::nested_scheduler_missing_detach_vtbl","slug":"concurrency-nested-scheduler-missing-detach-vtbl","link":"#concurrency-nested-scheduler-missing-detach-vtbl","children":[]},{"level":3,"title":"Concurrency::missing_wait","slug":"concurrency-missing-wait","link":"#concurrency-missing-wait","children":[]},{"level":3,"title":"Concurrency::missing_wait_vtbl","slug":"concurrency-missing-wait-vtbl","link":"#concurrency-missing-wait-vtbl","children":[]},{"level":3,"title":"Concurrency::task_continuation_context::_Tag","slug":"concurrency-task-continuation-context-tag","link":"#concurrency-task-continuation-context-tag","children":[]},{"level":3,"title":"Concurrency::invalid_scheduler_policy_key","slug":"concurrency-invalid-scheduler-policy-key","link":"#concurrency-invalid-scheduler-policy-key","children":[]},{"level":3,"title":"Concurrency::invalid_scheduler_policy_key_vtbl","slug":"concurrency-invalid-scheduler-policy-key-vtbl","link":"#concurrency-invalid-scheduler-policy-key-vtbl","children":[]},{"level":3,"title":"Concurrency::_Unary_transform_impl_helper<std::random_access_iterator_tag,std::random_access_iterator_tag>","slug":"concurrency-unary-transform-impl-helper-std-random-access-iterator-tag-std-random-access-iterator-tag","link":"#concurrency-unary-transform-impl-helper-std-random-access-iterator-tag-std-random-access-iterator-tag","children":[]},{"level":3,"title":"Concurrency::improper_lock","slug":"concurrency-improper-lock","link":"#concurrency-improper-lock","children":[]},{"level":3,"title":"Concurrency::improper_lock_vtbl","slug":"concurrency-improper-lock-vtbl","link":"#concurrency-improper-lock-vtbl","children":[]},{"level":3,"title":"Concurrency::default_scheduler_exists","slug":"concurrency-default-scheduler-exists","link":"#concurrency-default-scheduler-exists","children":[]},{"level":3,"title":"Concurrency::default_scheduler_exists_vtbl","slug":"concurrency-default-scheduler-exists-vtbl","link":"#concurrency-default-scheduler-exists-vtbl","children":[]},{"level":3,"title":"Concurrency::improper_scheduler_attach","slug":"concurrency-improper-scheduler-attach","link":"#concurrency-improper-scheduler-attach","children":[]},{"level":3,"title":"Concurrency::improper_scheduler_attach_vtbl","slug":"concurrency-improper-scheduler-attach-vtbl","link":"#concurrency-improper-scheduler-attach-vtbl","children":[]},{"level":3,"title":"Concurrency::context_unblock_unbalanced","slug":"concurrency-context-unblock-unbalanced","link":"#concurrency-context-unblock-unbalanced","children":[]},{"level":3,"title":"Concurrency::context_unblock_unbalanced_vtbl","slug":"concurrency-context-unblock-unbalanced-vtbl","link":"#concurrency-context-unblock-unbalanced-vtbl","children":[]},{"level":3,"title":"Concurrency::improper_scheduler_detach","slug":"concurrency-improper-scheduler-detach","link":"#concurrency-improper-scheduler-detach","children":[]},{"level":3,"title":"Concurrency::improper_scheduler_detach_vtbl","slug":"concurrency-improper-scheduler-detach-vtbl","link":"#concurrency-improper-scheduler-detach-vtbl","children":[]},{"level":3,"title":"Concurrency::reader_writer_lock","slug":"concurrency-reader-writer-lock","link":"#concurrency-reader-writer-lock","children":[]},{"level":3,"title":"Concurrency::reader_writer_lock::scoped_lock","slug":"concurrency-reader-writer-lock-scoped-lock","link":"#concurrency-reader-writer-lock-scoped-lock","children":[]},{"level":3,"title":"Concurrency::reader_writer_lock::scoped_lock_read","slug":"concurrency-reader-writer-lock-scoped-lock-read","link":"#concurrency-reader-writer-lock-scoped-lock-read","children":[]},{"level":3,"title":"Concurrency::invalid_operation_vtbl","slug":"concurrency-invalid-operation-vtbl","link":"#concurrency-invalid-operation-vtbl","children":[]},{"level":3,"title":"Concurrency::affinity_partitioner","slug":"concurrency-affinity-partitioner","link":"#concurrency-affinity-partitioner","children":[]},{"level":3,"title":"Concurrency::details::_Task_impl<unsigned char>::_CancelAndRunContinuations::__l34::<lambda_763529b0c7473cbc215a52d189ac9b18>","slug":"concurrency-details-task-impl-unsigned-char-cancelandruncontinuations-l34-lambda-763529b0c7473cbc215a52d189ac9b18","link":"#concurrency-details-task-impl-unsigned-char-cancelandruncontinuations-l34-lambda-763529b0c7473cbc215a52d189ac9b18","children":[]},{"level":3,"title":"Concurrency::details::_Task_impl_base::_ScheduleContinuationTask::__l5::<lambda_713ee8bbd6b08550d59c52695cab5ce3>","slug":"concurrency-details-task-impl-base-schedulecontinuationtask-l5-lambda-713ee8bbd6b08550d59c52695cab5ce3","link":"#concurrency-details-task-impl-base-schedulecontinuationtask-l5-lambda-713ee8bbd6b08550d59c52695cab5ce3","children":[]},{"level":3,"title":"Concurrency::details::_GetStaticAmbientSchedulerRef::__l2::<lambda_0e64988457575224279dcb6d61e61bdd>","slug":"concurrency-details-getstaticambientschedulerref-l2-lambda-0e64988457575224279dcb6d61e61bdd","link":"#concurrency-details-getstaticambientschedulerref-l2-lambda-0e64988457575224279dcb6d61e61bdd","children":[]},{"level":3,"title":"CM_Power_Data_s","slug":"cm-power-data-s","link":"#cm-power-data-s","children":[]},{"level":3,"title":"CompileTime::Hash64<0>","slug":"compiletime-hash64-0","link":"#compiletime-hash64-0","children":[]},{"level":3,"title":"CompileTime::Hash<0>","slug":"compiletime-hash-0","link":"#compiletime-hash-0","children":[]},{"level":3,"title":"COPYFILE2_MESSAGE::<unnamed_type_Info>::<unnamed_type_ChunkStarted>","slug":"copyfile2-message-unnamed-type-info-unnamed-type-chunkstarted","link":"#copyfile2-message-unnamed-type-info-unnamed-type-chunkstarted","children":[]},{"level":3,"title":"COPYFILE2_MESSAGE::<unnamed_type_Info>::<unnamed_type_ChunkFinished>","slug":"copyfile2-message-unnamed-type-info-unnamed-type-chunkfinished","link":"#copyfile2-message-unnamed-type-info-unnamed-type-chunkfinished","children":[]},{"level":3,"title":"COPYFILE2_MESSAGE::<unnamed_type_Info>::<unnamed_type_StreamStarted>","slug":"copyfile2-message-unnamed-type-info-unnamed-type-streamstarted","link":"#copyfile2-message-unnamed-type-info-unnamed-type-streamstarted","children":[]},{"level":3,"title":"COPYFILE2_MESSAGE::<unnamed_type_Info>::<unnamed_type_StreamFinished>","slug":"copyfile2-message-unnamed-type-info-unnamed-type-streamfinished","link":"#copyfile2-message-unnamed-type-info-unnamed-type-streamfinished","children":[]},{"level":3,"title":"COPYFILE2_MESSAGE::<unnamed_type_Info>::<unnamed_type_PollContinue>","slug":"copyfile2-message-unnamed-type-info-unnamed-type-pollcontinue","link":"#copyfile2-message-unnamed-type-info-unnamed-type-pollcontinue","children":[]},{"level":3,"title":"COPYFILE2_MESSAGE::<unnamed_type_Info>::<unnamed_type_Error>","slug":"copyfile2-message-unnamed-type-info-unnamed-type-error","link":"#copyfile2-message-unnamed-type-info-unnamed-type-error","children":[]},{"level":3,"title":"COPYFILE2_MESSAGE","slug":"copyfile2-message","link":"#copyfile2-message","children":[]},{"level":3,"title":"COPYFILE2_EXTENDED_PARAMETERS","slug":"copyfile2-extended-parameters","link":"#copyfile2-extended-parameters","children":[]},{"level":3,"title":"CONFIRMSAFETY","slug":"confirmsafety","link":"#confirmsafety","children":[]},{"level":3,"title":"cg::TextureSetLayerImageMipList","slug":"cg-texturesetlayerimagemiplist","link":"#cg-texturesetlayerimagemiplist","children":[]},{"level":3,"title":"cg::TextureSetImageContainer","slug":"cg-texturesetimagecontainer","link":"#cg-texturesetimagecontainer","children":[]},{"level":3,"title":"cg::TextureSetDefinition","slug":"cg-texturesetdefinition","link":"#cg-texturesetdefinition","children":[]},{"level":3,"title":"cg::CacheLocation","slug":"cg-cachelocation","link":"#cg-cachelocation","children":[]},{"level":3,"title":"Core::FileSystem","slug":"core-filesystem","link":"#core-filesystem","children":[]},{"level":3,"title":"Core::FileSystem::BasicFileData","slug":"core-filesystem-basicfiledata","link":"#core-filesystem-basicfiledata","children":[]},{"level":3,"title":"Core::FileSystem::FileTransferProgress","slug":"core-filesystem-filetransferprogress","link":"#core-filesystem-filetransferprogress","children":[]},{"level":3,"title":"CameraBehavior<AttachBehavior>","slug":"camerabehavior-attachbehavior","link":"#camerabehavior-attachbehavior","children":[]},{"level":3,"title":"CameraBehavior<AttachBehavior>_vtbl","slug":"camerabehavior-attachbehavior-vtbl","link":"#camerabehavior-attachbehavior-vtbl","children":[]},{"level":3,"title":"CameraBehavior<AvoidanceBehavior>","slug":"camerabehavior-avoidancebehavior","link":"#camerabehavior-avoidancebehavior","children":[]},{"level":3,"title":"CameraBehavior<AvoidanceBehavior>_vtbl","slug":"camerabehavior-avoidancebehavior-vtbl","link":"#camerabehavior-avoidancebehavior-vtbl","children":[]},{"level":3,"title":"CriticallyDampedSpring<float>","slug":"criticallydampedspring-float","link":"#criticallydampedspring-float","children":[]},{"level":3,"title":"CameraBehavior<OrbitBehavior>","slug":"camerabehavior-orbitbehavior","link":"#camerabehavior-orbitbehavior","children":[]},{"level":3,"title":"CameraBehavior<OrbitBehavior>_vtbl","slug":"camerabehavior-orbitbehavior-vtbl","link":"#camerabehavior-orbitbehavior-vtbl","children":[]},{"level":3,"title":"CameraBehavior<BobBehavior>","slug":"camerabehavior-bobbehavior","link":"#camerabehavior-bobbehavior","children":[]},{"level":3,"title":"CameraBehavior<BobBehavior>_vtbl","slug":"camerabehavior-bobbehavior-vtbl","link":"#camerabehavior-bobbehavior-vtbl","children":[]},{"level":3,"title":"CameraBehavior<FirstPersonLookBehavior>","slug":"camerabehavior-firstpersonlookbehavior","link":"#camerabehavior-firstpersonlookbehavior","children":[]},{"level":3,"title":"CameraBehavior<FirstPersonLookBehavior>_vtbl","slug":"camerabehavior-firstpersonlookbehavior-vtbl","link":"#camerabehavior-firstpersonlookbehavior-vtbl","children":[]},{"level":3,"title":"CameraBehavior<RideRotationBehavior>","slug":"camerabehavior-riderotationbehavior","link":"#camerabehavior-riderotationbehavior","children":[]},{"level":3,"title":"CameraBehavior<RideRotationBehavior>_vtbl","slug":"camerabehavior-riderotationbehavior-vtbl","link":"#camerabehavior-riderotationbehavior-vtbl","children":[]},{"level":3,"title":"CameraBehavior<FlyBehavior>","slug":"camerabehavior-flybehavior","link":"#camerabehavior-flybehavior","children":[]},{"level":3,"title":"CameraBehavior<FlyBehavior>_vtbl","slug":"camerabehavior-flybehavior-vtbl","link":"#camerabehavior-flybehavior-vtbl","children":[]},{"level":3,"title":"CameraBehavior<LiquidOffsetBehavior>","slug":"camerabehavior-liquidoffsetbehavior","link":"#camerabehavior-liquidoffsetbehavior","children":[]},{"level":3,"title":"CameraBehavior<LiquidOffsetBehavior>_vtbl","slug":"camerabehavior-liquidoffsetbehavior-vtbl","link":"#camerabehavior-liquidoffsetbehavior-vtbl","children":[]},{"level":3,"title":"CameraBehavior<LookAtBehavior>","slug":"camerabehavior-lookatbehavior","link":"#camerabehavior-lookatbehavior","children":[]},{"level":3,"title":"CameraBehavior<LookAtBehavior>_vtbl","slug":"camerabehavior-lookatbehavior-vtbl","link":"#camerabehavior-lookatbehavior-vtbl","children":[]},{"level":3,"title":"CameraBehavior<PortalBehavior>","slug":"camerabehavior-portalbehavior","link":"#camerabehavior-portalbehavior","children":[]},{"level":3,"title":"CameraBehavior<PortalBehavior>_vtbl","slug":"camerabehavior-portalbehavior-vtbl","link":"#camerabehavior-portalbehavior-vtbl","children":[]},{"level":3,"title":"CameraBehavior<SleepBehavior>","slug":"camerabehavior-sleepbehavior","link":"#camerabehavior-sleepbehavior","children":[]},{"level":3,"title":"CameraBehavior<SleepBehavior>_vtbl","slug":"camerabehavior-sleepbehavior-vtbl","link":"#camerabehavior-sleepbehavior-vtbl","children":[]},{"level":3,"title":"CameraBehavior<SneakBehavior>","slug":"camerabehavior-sneakbehavior","link":"#camerabehavior-sneakbehavior","children":[]},{"level":3,"title":"CameraBehavior<SneakBehavior>_vtbl","slug":"camerabehavior-sneakbehavior-vtbl","link":"#camerabehavior-sneakbehavior-vtbl","children":[]},{"level":3,"title":"Core::PathContainerConversions<Core::StackString<char,1024> >","slug":"core-pathcontainerconversions-core-stackstring-char-1024","link":"#core-pathcontainerconversions-core-stackstring-char-1024","children":[]},{"level":3,"title":"CameraBehavior<SplineBehavior>","slug":"camerabehavior-splinebehavior","link":"#camerabehavior-splinebehavior","children":[]},{"level":3,"title":"CameraBehavior<SplineBehavior>_vtbl","slug":"camerabehavior-splinebehavior-vtbl","link":"#camerabehavior-splinebehavior-vtbl","children":[]},{"level":3,"title":"CriticallyDampedSpring<Vec3>","slug":"criticallydampedspring-vec3","link":"#criticallydampedspring-vec3","children":[]},{"level":3,"title":"CatmullRomSpline","slug":"catmullromspline","link":"#catmullromspline","children":[]},{"level":3,"title":"CameraLoader::parseCameras::__l2::<lambda_39f3f306e576c66b261bbdd8909b2247>","slug":"cameraloader-parsecameras-l2-lambda-39f3f306e576c66b261bbdd8909b2247","link":"#cameraloader-parsecameras-l2-lambda-39f3f306e576c66b261bbdd8909b2247","children":[]},{"level":3,"title":"CameraLoader::parseBlends::__l2::<lambda_c6a4c0e67c1895cce63e1cdd7ae7d3c3>","slug":"cameraloader-parseblends-l2-lambda-c6a4c0e67c1895cce63e1cdd7ae7d3c3","link":"#cameraloader-parseblends-l2-lambda-c6a4c0e67c1895cce63e1cdd7ae7d3c3","children":[]},{"level":3,"title":"CommandContext","slug":"commandcontext","link":"#commandcontext","children":[]},{"level":3,"title":"ClientCommand","slug":"clientcommand","link":"#clientcommand","children":[]},{"level":3,"title":"ClientCommand_vtbl","slug":"clientcommand-vtbl","link":"#clientcommand-vtbl","children":[]},{"level":3,"title":"ClientCommandOutputSender","slug":"clientcommandoutputsender","link":"#clientcommandoutputsender","children":[]},{"level":3,"title":"ClientCommandOutputSender_vtbl","slug":"clientcommandoutputsender-vtbl","link":"#clientcommandoutputsender-vtbl","children":[]},{"level":3,"title":"CommandSelector<Actor>","slug":"commandselector-actor","link":"#commandselector-actor","children":[]},{"level":3,"title":"CommandRegistry::SemanticInfo","slug":"commandregistry-semanticinfo","link":"#commandregistry-semanticinfo","children":[]},{"level":3,"title":"commands::Postfix","slug":"commands-postfix","link":"#commands-postfix","children":[]},{"level":3,"title":"commands::SoftEnum","slug":"commands-softenum","link":"#commands-softenum","children":[]},{"level":3,"title":"CloseWebSocketCommand","slug":"closewebsocketcommand","link":"#closewebsocketcommand","children":[]},{"level":3,"title":"CloseWebSocketCommand_vtbl","slug":"closewebsocketcommand-vtbl","link":"#closewebsocketcommand-vtbl","children":[]},{"level":3,"title":"CloseChatCommand","slug":"closechatcommand","link":"#closechatcommand","children":[]},{"level":3,"title":"CloseChatCommand_vtbl","slug":"closechatcommand-vtbl","link":"#closechatcommand-vtbl","children":[]},{"level":3,"title":"ClientCommandOutputSender::send::__l20::<lambda_0b751b1533f17cdbef71e6a6deb7f9bd>","slug":"clientcommandoutputsender-send-l20-lambda-0b751b1533f17cdbef71e6a6deb7f9bd","link":"#clientcommandoutputsender-send-l20-lambda-0b751b1533f17cdbef71e6a6deb7f9bd","children":[]},{"level":3,"title":"ClientSkinInfoData_vtbl","slug":"clientskininfodata-vtbl","link":"#clientskininfodata-vtbl","children":[]},{"level":3,"title":"ClientSkinSystem","slug":"clientskinsystem","link":"#clientskinsystem","children":[]},{"level":3,"title":"ClientParticleTerminationComponent","slug":"clientparticleterminationcomponent","link":"#clientparticleterminationcomponent","children":[]},{"level":3,"title":"CallbackTokenContext<std::function<void __cdecl(void)> >","slug":"callbacktokencontext-std-function-void-cdecl-void","link":"#callbacktokencontext-std-function-void-cdecl-void","children":[]},{"level":3,"title":"ContainerComponent_vtbl","slug":"containercomponent-vtbl","link":"#containercomponent-vtbl","children":[]},{"level":3,"title":"CDScopedGameplay","slug":"cdscopedgameplay","link":"#cdscopedgameplay","children":[]},{"level":3,"title":"CallbackTokenContext<std::function<void __cdecl(enum Legacy::RetrieveStatus)> >","slug":"callbacktokencontext-std-function-void-cdecl-enum-legacy-retrievestatus","link":"#callbacktokencontext-std-function-void-cdecl-enum-legacy-retrievestatus","children":[]},{"level":3,"title":"CallbackTokenContext<std::function<void __cdecl(enum Legacy::ImportStatus,float,std::shared_ptr<ImportResult>)> >","slug":"callbacktokencontext-std-function-void-cdecl-enum-legacy-importstatus-float-std-shared-ptr-importresult","link":"#callbacktokencontext-std-function-void-cdecl-enum-legacy-importstatus-float-std-shared-ptr-importresult","children":[]},{"level":3,"title":"ChaCha","slug":"chacha","link":"#chacha","children":[]},{"level":3,"title":"CrashDumpLogUtils","slug":"crashdumplogutils","link":"#crashdumplogutils","children":[]},{"level":3,"title":"CrashDumpLog","slug":"crashdumplog","link":"#crashdumplog","children":[]},{"level":3,"title":"CompositeSceneStackView","slug":"compositescenestackview","link":"#compositescenestackview","children":[]},{"level":3,"title":"ClientInstance::_onScreenSizeVariablesChanged::__l2::<lambda_90393c59d32660745f34e36629dc4206>","slug":"clientinstance-onscreensizevariableschanged-l2-lambda-90393c59d32660745f34e36629dc4206","link":"#clientinstance-onscreensizevariableschanged-l2-lambda-90393c59d32660745f34e36629dc4206","children":[]},{"level":3,"title":"ClientInstance::updateControllerHandling::__l11::<lambda_15b5620979f052f9384ec29576b39029>","slug":"clientinstance-updatecontrollerhandling-l11-lambda-15b5620979f052f9384ec29576b39029","link":"#clientinstance-updatecontrollerhandling-l11-lambda-15b5620979f052f9384ec29576b39029","children":[]},{"level":3,"title":"ClientInstance::tickDestroyBlock::__l11::<lambda_df7287ab01c6507a213cfdfd14b9340d>","slug":"clientinstance-tickdestroyblock-l11-lambda-df7287ab01c6507a213cfdfd14b9340d","link":"#clientinstance-tickdestroyblock-l11-lambda-df7287ab01c6507a213cfdfd14b9340d","children":[]},{"level":3,"title":"ClientInstance::navigateToStoreSeeAllByCreatorScreen::__l2::<lambda_15d8531333f726aeede88a06a28b4fd0>::()::__l22::<lambda_3f6c191c869f81aace7d27ad31821f7d>","slug":"clientinstance-navigatetostoreseeallbycreatorscreen-l2-lambda-15d8531333f726aeede88a06a28b4fd0-l22-lambda-3f6c191c869f81aace7d27ad31821f7d","link":"#clientinstance-navigatetostoreseeallbycreatorscreen-l2-lambda-15d8531333f726aeede88a06a28b4fd0-l22-lambda-3f6c191c869f81aace7d27ad31821f7d","children":[]},{"level":3,"title":"ClientInstance::_initSceneStack::__l2::<lambda_97650e0fd8d8e2d4ab764eb737bc7498>","slug":"clientinstance-initscenestack-l2-lambda-97650e0fd8d8e2d4ab764eb737bc7498","link":"#clientinstance-initscenestack-l2-lambda-97650e0fd8d8e2d4ab764eb737bc7498","children":[]},{"level":3,"title":"ClientInstance::_initSceneStack::__l2::<lambda_582f79c63c5d93588b6a0221f4853e8c>","slug":"clientinstance-initscenestack-l2-lambda-582f79c63c5d93588b6a0221f4853e8c","link":"#clientinstance-initscenestack-l2-lambda-582f79c63c5d93588b6a0221f4853e8c","children":[]},{"level":3,"title":"ClientInstance::_initSceneStack::__l2::<lambda_878ba9a1bc34c18f3fb6c7370a888ee2>","slug":"clientinstance-initscenestack-l2-lambda-878ba9a1bc34c18f3fb6c7370a888ee2","link":"#clientinstance-initscenestack-l2-lambda-878ba9a1bc34c18f3fb6c7370a888ee2","children":[]},{"level":3,"title":"ClientInstance::_initSceneStack::__l2::<lambda_878ba9a1bc34c18f3fb6c7370a888ee2>::()::__l2::<lambda_193b3faf9447328a85dac550e43be45e>","slug":"clientinstance-initscenestack-l2-lambda-878ba9a1bc34c18f3fb6c7370a888ee2-l2-lambda-193b3faf9447328a85dac550e43be45e","link":"#clientinstance-initscenestack-l2-lambda-878ba9a1bc34c18f3fb6c7370a888ee2-l2-lambda-193b3faf9447328a85dac550e43be45e","children":[]},{"level":3,"title":"ClientInstance::_initSceneStack::__l2::<lambda_299ba7fd9fe4ee5b945befbd386be495>","slug":"clientinstance-initscenestack-l2-lambda-299ba7fd9fe4ee5b945befbd386be495","link":"#clientinstance-initscenestack-l2-lambda-299ba7fd9fe4ee5b945befbd386be495","children":[]},{"level":3,"title":"ClientInstance::_createSkinRepositoryClientInterface::__l5::<lambda_1214f5056699946a17be2ec6b86b5a63>","slug":"clientinstance-createskinrepositoryclientinterface-l5-lambda-1214f5056699946a17be2ec6b86b5a63","link":"#clientinstance-createskinrepositoryclientinterface-l5-lambda-1214f5056699946a17be2ec6b86b5a63","children":[]},{"level":3,"title":"ClientInstance::isShowingMenu::__l2::<lambda_cfd341f57ab31a2ca42b1aefca30254a>","slug":"clientinstance-isshowingmenu-l2-lambda-cfd341f57ab31a2ca42b1aefca30254a","link":"#clientinstance-isshowingmenu-l2-lambda-cfd341f57ab31a2ca42b1aefca30254a","children":[]},{"level":3,"title":"ClientInstance::initCommands::__l2::<lambda_bb361151b842928025ac08534ab16337>","slug":"clientinstance-initcommands-l2-lambda-bb361151b842928025ac08534ab16337","link":"#clientinstance-initcommands-l2-lambda-bb361151b842928025ac08534ab16337","children":[]},{"level":3,"title":"ClientInstance::onTick::__l38::<lambda_71b0399f4662fd076d571faae3370350>","slug":"clientinstance-ontick-l38-lambda-71b0399f4662fd076d571faae3370350","link":"#clientinstance-ontick-l38-lambda-71b0399f4662fd076d571faae3370350","children":[]},{"level":3,"title":"ClientInstance::_joinWorldInProgress::__l2::<lambda_02e2605fd0c5e1a6375f3072765e8e5a>","slug":"clientinstance-joinworldinprogress-l2-lambda-02e2605fd0c5e1a6375f3072765e8e5a","link":"#clientinstance-joinworldinprogress-l2-lambda-02e2605fd0c5e1a6375f3072765e8e5a","children":[]},{"level":3,"title":"ClientInstance::_joinWorldInProgress::__l11::<lambda_abecbc1c0e8dcdce57775fbf971d4035>","slug":"clientinstance-joinworldinprogress-l11-lambda-abecbc1c0e8dcdce57775fbf971d4035","link":"#clientinstance-joinworldinprogress-l11-lambda-abecbc1c0e8dcdce57775fbf971d4035","children":[]},{"level":3,"title":"ClientInstance::startSubClientLateJoin::__l13::<lambda_b51ae057fc840348fcf61fa2148e38c6>","slug":"clientinstance-startsubclientlatejoin-l13-lambda-b51ae057fc840348fcf61fa2148e38c6","link":"#clientinstance-startsubclientlatejoin-l13-lambda-b51ae057fc840348fcf61fa2148e38c6","children":[]},{"level":3,"title":"ClientInstance::update::__l42::<lambda_2eadb951cae52f74e068bad3dd7fa7f4>::()::__l14::<lambda_702502096d39b6c5ea025d728e798aee>","slug":"clientinstance-update-l42-lambda-2eadb951cae52f74e068bad3dd7fa7f4-l14-lambda-702502096d39b6c5ea025d728e798aee","link":"#clientinstance-update-l42-lambda-2eadb951cae52f74e068bad3dd7fa7f4-l14-lambda-702502096d39b6c5ea025d728e798aee","children":[]},{"level":3,"title":"ClientInstance::_startLeaveGame::__l2::<lambda_2b74ebf9d9d48a05c165bbb31d30842e>","slug":"clientinstance-startleavegame-l2-lambda-2b74ebf9d9d48a05c165bbb31d30842e","link":"#clientinstance-startleavegame-l2-lambda-2b74ebf9d9d48a05c165bbb31d30842e","children":[]},{"level":3,"title":"ClientInstance::requestLeaveGame::__l2::<lambda_4bc0650f4f0405926a0a487036642fde>","slug":"clientinstance-requestleavegame-l2-lambda-4bc0650f4f0405926a0a487036642fde","link":"#clientinstance-requestleavegame-l2-lambda-4bc0650f4f0405926a0a487036642fde","children":[]},{"level":3,"title":"ClientInstance::init::__l2::<lambda_a36354b83242328e7f1f5c5935e0ecaa>","slug":"clientinstance-init-l2-lambda-a36354b83242328e7f1f5c5935e0ecaa","link":"#clientinstance-init-l2-lambda-a36354b83242328e7f1f5c5935e0ecaa","children":[]},{"level":3,"title":"ClientInstance::init::__l2::<lambda_7d463a3c887b82eef60c5bc398d58571>","slug":"clientinstance-init-l2-lambda-7d463a3c887b82eef60c5bc398d58571","link":"#clientinstance-init-l2-lambda-7d463a3c887b82eef60c5bc398d58571","children":[]},{"level":3,"title":"ClientInstance::init::__l2::<lambda_2dbee955e45009a41bd19a4f5d977b90>","slug":"clientinstance-init-l2-lambda-2dbee955e45009a41bd19a4f5d977b90","link":"#clientinstance-init-l2-lambda-2dbee955e45009a41bd19a4f5d977b90","children":[]},{"level":3,"title":"ClientInputCallbacks::vibrate::__l13::<lambda_abfe2ccf6929051526d977f1e506ac3d>","slug":"clientinputcallbacks-vibrate-l13-lambda-abfe2ccf6929051526d977f1e506ac3d","link":"#clientinputcallbacks-vibrate-l13-lambda-abfe2ccf6929051526d977f1e506ac3d","children":[]},{"level":3,"title":"ClientInputCallbacks::handleCommandEvent::__l2::<lambda_3ca896b064936e0c3219171a0fd62bea>","slug":"clientinputcallbacks-handlecommandevent-l2-lambda-3ca896b064936e0c3219171a0fd62bea","link":"#clientinputcallbacks-handlecommandevent-l2-lambda-3ca896b064936e0c3219171a0fd62bea","children":[]},{"level":3,"title":"ClientInputCallbacks::handleDictationEvent::__l8::<lambda_e6fd729911e6f890df89f1279cd76373>","slug":"clientinputcallbacks-handledictationevent-l8-lambda-e6fd729911e6f890df89f1279cd76373","link":"#clientinputcallbacks-handledictationevent-l8-lambda-e6fd729911e6f890df89f1279cd76373","children":[]},{"level":3,"title":"ClientInputCallbacks::handleVectorInput::__l4::<lambda_0f0def3c3c1a653163fbf9c1bccfcf88>","slug":"clientinputcallbacks-handlevectorinput-l4-lambda-0f0def3c3c1a653163fbf9c1bccfcf88","link":"#clientinputcallbacks-handlevectorinput-l4-lambda-0f0def3c3c1a653163fbf9c1bccfcf88","children":[]},{"level":3,"title":"ClientInputCallbacks::handleHoloInputModeChanged::__l2::<lambda_e79dccabe9c15a9b64dbdfbab7317d1d>","slug":"clientinputcallbacks-handleholoinputmodechanged-l2-lambda-e79dccabe9c15a9b64dbdfbab7317d1d","link":"#clientinputcallbacks-handleholoinputmodechanged-l2-lambda-e79dccabe9c15a9b64dbdfbab7317d1d","children":[]},{"level":3,"title":"ClientInputCallbacks::handleInputModeChanged::__l2::<lambda_86c8143899b89eccea3596158e019ff1>","slug":"clientinputcallbacks-handleinputmodechanged-l2-lambda-86c8143899b89eccea3596158e019ff1","link":"#clientinputcallbacks-handleinputmodechanged-l2-lambda-86c8143899b89eccea3596158e019ff1","children":[]},{"level":3,"title":"ClientInputCallbacks::handleDirection::__l2::<lambda_1ca73074d044029f1123f1b8e204c386>","slug":"clientinputcallbacks-handledirection-l2-lambda-1ca73074d044029f1123f1b8e204c386","link":"#clientinputcallbacks-handledirection-l2-lambda-1ca73074d044029f1123f1b8e204c386","children":[]},{"level":3,"title":"ClientInputCallbacks::handlePointerLocation::__l5::<lambda_585dae7b1422f8853e1863f4bcfab0ab>","slug":"clientinputcallbacks-handlepointerlocation-l5-lambda-585dae7b1422f8853e1863f4bcfab0ab","link":"#clientinputcallbacks-handlepointerlocation-l5-lambda-585dae7b1422f8853e1863f4bcfab0ab","children":[]},{"level":3,"title":"ClientInputCallbacks::handleMenuButtonRelease::__l2::<lambda_d0e4742031c76c6b90374d00cc4059a8>","slug":"clientinputcallbacks-handlemenubuttonrelease-l2-lambda-d0e4742031c76c6b90374d00cc4059a8","link":"#clientinputcallbacks-handlemenubuttonrelease-l2-lambda-d0e4742031c76c6b90374d00cc4059a8","children":[]},{"level":3,"title":"ClientInputCallbacks::handlePointerPressedButtonRelease::__l2::<lambda_39242d26cf3982dde303d99c138d7fea>","slug":"clientinputcallbacks-handlepointerpressedbuttonrelease-l2-lambda-39242d26cf3982dde303d99c138d7fea","link":"#clientinputcallbacks-handlepointerpressedbuttonrelease-l2-lambda-39242d26cf3982dde303d99c138d7fea","children":[]},{"level":3,"title":"ClientInputCallbacks::handleMenuButtonPress::__l2::<lambda_21d7273568769b2a2e8a145779122fe2>","slug":"clientinputcallbacks-handlemenubuttonpress-l2-lambda-21d7273568769b2a2e8a145779122fe2","link":"#clientinputcallbacks-handlemenubuttonpress-l2-lambda-21d7273568769b2a2e8a145779122fe2","children":[]},{"level":3,"title":"ClientInputCallbacks::handleBuildOrAttackButtonPress::__l2::<lambda_da56761cda2d44f41691415c5db47201>","slug":"clientinputcallbacks-handlebuildorattackbuttonpress-l2-lambda-da56761cda2d44f41691415c5db47201","link":"#clientinputcallbacks-handlebuildorattackbuttonpress-l2-lambda-da56761cda2d44f41691415c5db47201","children":[]},{"level":3,"title":"ClientInputCallbacks::handleDestroyOrInteractButtonPress::__l2::<lambda_30eab25553a0289c6a2e647a94663f5c>","slug":"clientinputcallbacks-handledestroyorinteractbuttonpress-l2-lambda-30eab25553a0289c6a2e647a94663f5c","link":"#clientinputcallbacks-handledestroyorinteractbuttonpress-l2-lambda-30eab25553a0289c6a2e647a94663f5c","children":[]},{"level":3,"title":"ClientInputCallbacks::handleBuildOrInteractButtonPress::__l2::<lambda_549184ca211057ee986f55f9691f0b5d>","slug":"clientinputcallbacks-handlebuildorinteractbuttonpress-l2-lambda-549184ca211057ee986f55f9691f0b5d","link":"#clientinputcallbacks-handlebuildorinteractbuttonpress-l2-lambda-549184ca211057ee986f55f9691f0b5d","children":[]},{"level":3,"title":"ClientInputCallbacks::handleBuildOrInteractButtonPress::__l5::<lambda_99d95ad1f219b828a438795fbbae0add>","slug":"clientinputcallbacks-handlebuildorinteractbuttonpress-l5-lambda-99d95ad1f219b828a438795fbbae0add","link":"#clientinputcallbacks-handlebuildorinteractbuttonpress-l5-lambda-99d95ad1f219b828a438795fbbae0add","children":[]},{"level":3,"title":"ClientInputCallbacks::handleDestoryOrAttackButtonPress::__l2::<lambda_a250f32d2aec155df20b3e6b1bd71989>","slug":"clientinputcallbacks-handledestoryorattackbuttonpress-l2-lambda-a250f32d2aec155df20b3e6b1bd71989","link":"#clientinputcallbacks-handledestoryorattackbuttonpress-l2-lambda-a250f32d2aec155df20b3e6b1bd71989","children":[]},{"level":3,"title":"ClientInputCallbacks::handleDestoryOrAttackButtonPress::__l5::<lambda_1768354503fc5fcd1469a64b30f27d5c>","slug":"clientinputcallbacks-handledestoryorattackbuttonpress-l5-lambda-1768354503fc5fcd1469a64b30f27d5c","link":"#clientinputcallbacks-handledestoryorattackbuttonpress-l5-lambda-1768354503fc5fcd1469a64b30f27d5c","children":[]},{"level":3,"title":"ClientInputCallbacks::handleScreenshotPress::__l8::<lambda_e70b5943a0b1cecdb66c029e8c0cbe0e>","slug":"clientinputcallbacks-handlescreenshotpress-l8-lambda-e70b5943a0b1cecdb66c029e8c0cbe0e","link":"#clientinputcallbacks-handlescreenshotpress-l8-lambda-e70b5943a0b1cecdb66c029e8c0cbe0e","children":[]},{"level":3,"title":"ClientInputCallbacks::handleGoToReportCheatButtonPress::__l8::<lambda_82f858da70d941e940912bb30990deca>","slug":"clientinputcallbacks-handlegotoreportcheatbuttonpress-l8-lambda-82f858da70d941e940912bb30990deca","link":"#clientinputcallbacks-handlegotoreportcheatbuttonpress-l8-lambda-82f858da70d941e940912bb30990deca","children":[]},{"level":3,"title":"ClientInputCallbacks::handlePointerPressedButtonPress::__l2::<lambda_ed584832a847dcbeef5b61997314db23>","slug":"clientinputcallbacks-handlepointerpressedbuttonpress-l2-lambda-ed584832a847dcbeef5b61997314db23","link":"#clientinputcallbacks-handlepointerpressedbuttonpress-l2-lambda-ed584832a847dcbeef5b61997314db23","children":[]},{"level":3,"title":"ClientSkinSystem::_updateClientSkin::__l2::<lambda_3edaec2b809ed40c0096426422f09c9f>","slug":"clientskinsystem-updateclientskin-l2-lambda-3edaec2b809ed40c0096426422f09c9f","link":"#clientskinsystem-updateclientskin-l2-lambda-3edaec2b809ed40c0096426422f09c9f","children":[]},{"level":3,"title":"ClientInstance::_startExternalNetworkWorld::__l2::<lambda_2f4e89c11809877f171d784f43a2bb0a>::()::__l25::<lambda_c3b381cfcfb0e0326cf8436579754cbd>","slug":"clientinstance-startexternalnetworkworld-l2-lambda-2f4e89c11809877f171d784f43a2bb0a-l25-lambda-c3b381cfcfb0e0326cf8436579754cbd","link":"#clientinstance-startexternalnetworkworld-l2-lambda-2f4e89c11809877f171d784f43a2bb0a-l25-lambda-c3b381cfcfb0e0326cf8436579754cbd","children":[]},{"level":3,"title":"ClientInstance::linkToAllOffers::__l8::<lambda_8c1c471bd4836df2d4db0c759413a7fe>","slug":"clientinstance-linktoalloffers-l8-lambda-8c1c471bd4836df2d4db0c759413a7fe","link":"#clientinstance-linktoalloffers-l8-lambda-8c1c471bd4836df2d4db0c759413a7fe","children":[]},{"level":3,"title":"ClientInstance::initTTSClient::__l5::<lambda_385529706c5cafdb75cef3e23b3c0d1a>","slug":"clientinstance-initttsclient-l5-lambda-385529706c5cafdb75cef3e23b3c0d1a","link":"#clientinstance-initttsclient-l5-lambda-385529706c5cafdb75cef3e23b3c0d1a","children":[]},{"level":3,"title":"CooldownItemComponent","slug":"cooldownitemcomponent","link":"#cooldownitemcomponent","children":[]},{"level":3,"title":"CooldownItemComponent_vtbl","slug":"cooldownitemcomponent-vtbl","link":"#cooldownitemcomponent-vtbl","children":[]},{"level":3,"title":"ChannelImageParams","slug":"channelimageparams","link":"#channelimageparams","children":[]},{"level":3,"title":"cg::details::DispatchToken<std::shared_ptr<cg::details::WorkToken const >,std::shared_ptr<std::function<void __cdecl(std::nullptr_t &)> > >","slug":"cg-details-dispatchtoken-std-shared-ptr-cg-details-worktoken-const-std-shared-ptr-std-function-void-cdecl-std-nullptr-t","link":"#cg-details-dispatchtoken-std-shared-ptr-cg-details-worktoken-const-std-shared-ptr-std-function-void-cdecl-std-nullptr-t","children":[]},{"level":3,"title":"CommandListFuture","slug":"commandlistfuture","link":"#commandlistfuture","children":[]},{"level":3,"title":"CompletionState","slug":"completionstate","link":"#completionstate","children":[]},{"level":3,"title":"cg::TaskDispatcherSchedulerTraits<cg::TaskScheduler<cg::LambdaExecutor<std::nullptr_t,cg::TaskPoolGroupExecutionPolicy<std::nullptr_t,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> > >","slug":"cg-taskdispatcherschedulertraits-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const","link":"#cg-taskdispatcherschedulertraits-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const","children":[]},{"level":3,"title":"cg::TaskDispatcher<cg::TaskScheduler<cg::LambdaExecutor<std::nullptr_t,cg::TaskPoolGroupExecutionPolicy<std::nullptr_t,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &> > >::TaskDispatcherExecution","slug":"cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution","link":"#cg-taskdispatcher-cg-taskscheduler-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-taskdispatcherexecution","children":[]},{"level":3,"title":"ChangeUserStage","slug":"changeuserstage","link":"#changeuserstage","children":[]},{"level":3,"title":"ChangeUserStage_vtbl","slug":"changeuserstage-vtbl","link":"#changeuserstage-vtbl","children":[]},{"level":3,"title":"Crypto::Random::Random","slug":"crypto-random-random","link":"#crypto-random-random","children":[]},{"level":3,"title":"Core::FileSystemInterfaceImpl","slug":"core-filesysteminterfaceimpl","link":"#core-filesysteminterfaceimpl","children":[]},{"level":3,"title":"Core::FileSystemInterfaceImpl_vtbl","slug":"core-filesysteminterfaceimpl-vtbl","link":"#core-filesysteminterfaceimpl-vtbl","children":[]},{"level":3,"title":"Core::Profile::ProfileSectionCPU","slug":"core-profile-profilesectioncpu","link":"#core-profile-profilesectioncpu","children":[]},{"level":3,"title":"cg::IGraphicsDeviceVendorProvider","slug":"cg-igraphicsdevicevendorprovider","link":"#cg-igraphicsdevicevendorprovider","children":[]},{"level":3,"title":"cg::IGraphicsDeviceVendorProvider_vtbl","slug":"cg-igraphicsdevicevendorprovider-vtbl","link":"#cg-igraphicsdevicevendorprovider-vtbl","children":[]},{"level":3,"title":"Core::Profile::FileCounters","slug":"core-profile-filecounters","link":"#core-profile-filecounters","children":[]},{"level":3,"title":"CollectionComponent","slug":"collectioncomponent","link":"#collectioncomponent","children":[]},{"level":3,"title":"CollectionComponent_vtbl","slug":"collectioncomponent-vtbl","link":"#collectioncomponent-vtbl","children":[]},{"level":3,"title":"CollectionItemComponent","slug":"collectionitemcomponent","link":"#collectionitemcomponent","children":[]},{"level":3,"title":"CollectionItemComponent_vtbl","slug":"collectionitemcomponent-vtbl","link":"#collectionitemcomponent-vtbl","children":[]},{"level":3,"title":"ClipArea","slug":"cliparea","link":"#cliparea","children":[]},{"level":3,"title":"cg::SchedulerExecutionTraits<cg::LambdaExecutor<std::nullptr_t,cg::TaskPoolGroupExecutionPolicy<std::nullptr_t,1>,std::string const &,std::vector<cg::GroupPoolDescription> const &>,cg::details::WorkToken>","slug":"cg-schedulerexecutiontraits-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-cg-details-worktoken","link":"#cg-schedulerexecutiontraits-cg-lambdaexecutor-std-nullptr-t-cg-taskpoolgroupexecutionpolicy-std-nullptr-t-1-std-string-const-std-vector-cg-grouppooldescription-const-cg-details-worktoken","children":[]},{"level":3,"title":"CreditsRenderer::CreditsContent","slug":"creditsrenderer-creditscontent","link":"#creditsrenderer-creditscontent","children":[]},{"level":3,"title":"CreditsRenderer","slug":"creditsrenderer","link":"#creditsrenderer","children":[]},{"level":3,"title":"CreditsRenderer_vtbl","slug":"creditsrenderer-vtbl","link":"#creditsrenderer-vtbl","children":[]},{"level":3,"title":"CallbackProgressHandler","slug":"callbackprogresshandler","link":"#callbackprogresshandler","children":[]},{"level":3,"title":"CallbackProgressHandler_vtbl","slug":"callbackprogresshandler-vtbl","link":"#callbackprogresshandler-vtbl","children":[]},{"level":3,"title":"ContentLogFileDeleteProgressHandler","slug":"contentlogfiledeleteprogresshandler","link":"#contentlogfiledeleteprogresshandler","children":[]},{"level":3,"title":"ContentLogFileDeleteProgressHandler_vtbl","slug":"contentlogfiledeleteprogresshandler-vtbl","link":"#contentlogfiledeleteprogresshandler-vtbl","children":[]},{"level":3,"title":"ContentLogFileDeleteProgressHandler::onStart::__l2::<lambda_4c44ad55a9de036e094d9593064c39b6>","slug":"contentlogfiledeleteprogresshandler-onstart-l2-lambda-4c44ad55a9de036e094d9593064c39b6","link":"#contentlogfiledeleteprogresshandler-onstart-l2-lambda-4c44ad55a9de036e094d9593064c39b6","children":[]},{"level":3,"title":"ContentLogFileDeleteProgressHandler::onStart::__l2::<lambda_df8545a0f7b237ada6fdb7790c17e3e2>","slug":"contentlogfiledeleteprogresshandler-onstart-l2-lambda-df8545a0f7b237ada6fdb7790c17e3e2","link":"#contentlogfiledeleteprogresshandler-onstart-l2-lambda-df8545a0f7b237ada6fdb7790c17e3e2","children":[]},{"level":3,"title":"CheckDoneProgressHandler","slug":"checkdoneprogresshandler","link":"#checkdoneprogresshandler","children":[]},{"level":3,"title":"CheckDoneProgressHandler_vtbl","slug":"checkdoneprogresshandler-vtbl","link":"#checkdoneprogresshandler-vtbl","children":[]},{"level":3,"title":"ContainerInteractionStateMachine","slug":"containerinteractionstatemachine","link":"#containerinteractionstatemachine","children":[]},{"level":3,"title":"CannotUseNetworkFeaturesScreenController","slug":"cannotusenetworkfeaturesscreencontroller","link":"#cannotusenetworkfeaturesscreencontroller","children":[]},{"level":3,"title":"CannotUseNetworkFeaturesScreenController_vtbl","slug":"cannotusenetworkfeaturesscreencontroller-vtbl","link":"#cannotusenetworkfeaturesscreencontroller-vtbl","children":[]},{"level":3,"title":"CellularDataWarningScreenController","slug":"cellulardatawarningscreencontroller","link":"#cellulardatawarningscreencontroller","children":[]},{"level":3,"title":"CellularDataWarningScreenController_vtbl","slug":"cellulardatawarningscreencontroller-vtbl","link":"#cellulardatawarningscreencontroller-vtbl","children":[]},{"level":3,"title":"ChalkboardScreenController","slug":"chalkboardscreencontroller","link":"#chalkboardscreencontroller","children":[]},{"level":3,"title":"ChalkboardScreenController_vtbl","slug":"chalkboardscreencontroller-vtbl","link":"#chalkboardscreencontroller-vtbl","children":[]},{"level":3,"title":"ChalkboardScreenController::_registerBindings::__l2::<lambda_c19ad1e94829ad65b348c00d4b053945>","slug":"chalkboardscreencontroller-registerbindings-l2-lambda-c19ad1e94829ad65b348c00d4b053945","link":"#chalkboardscreencontroller-registerbindings-l2-lambda-c19ad1e94829ad65b348c00d4b053945","children":[]},{"level":3,"title":"ChalkboardScreenController::_registerBindings::__l2::<lambda_e6cf651c2b9c075e876ca69014ef3811>","slug":"chalkboardscreencontroller-registerbindings-l2-lambda-e6cf651c2b9c075e876ca69014ef3811","link":"#chalkboardscreencontroller-registerbindings-l2-lambda-e6cf651c2b9c075e876ca69014ef3811","children":[]},{"level":3,"title":"ChalkboardScreenController::_registerBindings::__l2::<lambda_af391edb9ee7620a22893f79e25173cc>","slug":"chalkboardscreencontroller-registerbindings-l2-lambda-af391edb9ee7620a22893f79e25173cc","link":"#chalkboardscreencontroller-registerbindings-l2-lambda-af391edb9ee7620a22893f79e25173cc","children":[]},{"level":3,"title":"ChalkboardScreenController::_registerBindings::__l2::<lambda_8c03d1cb961bf5361ba907cd86efe50f>","slug":"chalkboardscreencontroller-registerbindings-l2-lambda-8c03d1cb961bf5361ba907cd86efe50f","link":"#chalkboardscreencontroller-registerbindings-l2-lambda-8c03d1cb961bf5361ba907cd86efe50f","children":[]},{"level":3,"title":"ChalkboardScreenController::_registerEventHandlers::__l2::<lambda_fa542fb72eb60c5ac5c4fac0c505fbf8>","slug":"chalkboardscreencontroller-registereventhandlers-l2-lambda-fa542fb72eb60c5ac5c4fac0c505fbf8","link":"#chalkboardscreencontroller-registereventhandlers-l2-lambda-fa542fb72eb60c5ac5c4fac0c505fbf8","children":[]},{"level":3,"title":"ChalkboardScreenController::_registerEventHandlers::__l2::<lambda_b42cf05c41a2e21b640eb802e5774fa5>","slug":"chalkboardscreencontroller-registereventhandlers-l2-lambda-b42cf05c41a2e21b640eb802e5774fa5","link":"#chalkboardscreencontroller-registereventhandlers-l2-lambda-b42cf05c41a2e21b640eb802e5774fa5","children":[]},{"level":3,"title":"ChalkboardScreenController::{ctor}::__l2::<lambda_fff40c3734e5a3c973fe8967245ac69b>","slug":"chalkboardscreencontroller-ctor-l2-lambda-fff40c3734e5a3c973fe8967245ac69b","link":"#chalkboardscreencontroller-ctor-l2-lambda-fff40c3734e5a3c973fe8967245ac69b","children":[]},{"level":3,"title":"CellularDataWarningScreenController::onOpen::__l2::<lambda_6d10d2c4851a646b8d330e59b5f34f14>","slug":"cellulardatawarningscreencontroller-onopen-l2-lambda-6d10d2c4851a646b8d330e59b5f34f14","link":"#cellulardatawarningscreencontroller-onopen-l2-lambda-6d10d2c4851a646b8d330e59b5f34f14","children":[]},{"level":3,"title":"CannotUseNetworkFeaturesScreenController::onOpen::__l2::<lambda_b48d9a7038debf97dda08a06e326b111>","slug":"cannotusenetworkfeaturesscreencontroller-onopen-l2-lambda-b48d9a7038debf97dda08a06e326b111","link":"#cannotusenetworkfeaturesscreencontroller-onopen-l2-lambda-b48d9a7038debf97dda08a06e326b111","children":[]},{"level":3,"title":"ChatSettingsScreenController::ChatSettings","slug":"chatsettingsscreencontroller-chatsettings","link":"#chatsettingsscreencontroller-chatsettings","children":[]},{"level":3,"title":"ChatSettingsScreenController","slug":"chatsettingsscreencontroller","link":"#chatsettingsscreencontroller","children":[]},{"level":3,"title":"ChatSettingsScreenController_vtbl","slug":"chatsettingsscreencontroller-vtbl","link":"#chatsettingsscreencontroller-vtbl","children":[]},{"level":3,"title":"ChatScreenController","slug":"chatscreencontroller","link":"#chatscreencontroller","children":[]},{"level":3,"title":"ChatScreenController_vtbl","slug":"chatscreencontroller-vtbl","link":"#chatscreencontroller-vtbl","children":[]},{"level":3,"title":"ChooseRealmScreenController::RealmsWorld","slug":"chooserealmscreencontroller-realmsworld","link":"#chooserealmscreencontroller-realmsworld","children":[]},{"level":3,"title":"ChooseRealmScreenController","slug":"chooserealmscreencontroller","link":"#chooserealmscreencontroller","children":[]},{"level":3,"title":"ChooseRealmScreenController_vtbl","slug":"chooserealmscreencontroller-vtbl","link":"#chooserealmscreencontroller-vtbl","children":[]},{"level":3,"title":"CodeScreenControllerProxy","slug":"codescreencontrollerproxy","link":"#codescreencontrollerproxy","children":[]},{"level":3,"title":"CodeScreenControllerProxy_vtbl","slug":"codescreencontrollerproxy-vtbl","link":"#codescreencontrollerproxy-vtbl","children":[]},{"level":3,"title":"CodeScreenEditorButton","slug":"codescreeneditorbutton","link":"#codescreeneditorbutton","children":[]},{"level":3,"title":"CodeScreenController","slug":"codescreencontroller","link":"#codescreencontroller","children":[]},{"level":3,"title":"CodeScreenController_vtbl","slug":"codescreencontroller-vtbl","link":"#codescreencontroller-vtbl","children":[]},{"level":3,"title":"CodeScreenController::_registerBindings::__l2::<lambda_16de65ca34e12ac497d252dfd6d10cf9>","slug":"codescreencontroller-registerbindings-l2-lambda-16de65ca34e12ac497d252dfd6d10cf9","link":"#codescreencontroller-registerbindings-l2-lambda-16de65ca34e12ac497d252dfd6d10cf9","children":[]},{"level":3,"title":"CommonDialogInfoScreenController","slug":"commondialoginfoscreencontroller","link":"#commondialoginfoscreencontroller","children":[]},{"level":3,"title":"CommonDialogInfoScreenController_vtbl","slug":"commondialoginfoscreencontroller-vtbl","link":"#commondialoginfoscreencontroller-vtbl","children":[]},{"level":3,"title":"ConnectGamepadScreenController","slug":"connectgamepadscreencontroller","link":"#connectgamepadscreencontroller","children":[]},{"level":3,"title":"ConnectGamepadScreenController_vtbl","slug":"connectgamepadscreencontroller-vtbl","link":"#connectgamepadscreencontroller-vtbl","children":[]},{"level":3,"title":"ContainerScreenController","slug":"containerscreencontroller","link":"#containerscreencontroller","children":[]},{"level":3,"title":"ContainerScreenController_vtbl","slug":"containerscreencontroller-vtbl","link":"#containerscreencontroller-vtbl","children":[]},{"level":3,"title":"ContainerFactory","slug":"containerfactory","link":"#containerfactory","children":[]},{"level":3,"title":"ContainerScreenControllerProxyCallbacks","slug":"containerscreencontrollerproxycallbacks","link":"#containerscreencontrollerproxycallbacks","children":[]},{"level":3,"title":"ContainerScreenControllerProxy","slug":"containerscreencontrollerproxy","link":"#containerscreencontrollerproxy","children":[]},{"level":3,"title":"ContainerScreenControllerProxy_vtbl","slug":"containerscreencontrollerproxy-vtbl","link":"#containerscreencontrollerproxy-vtbl","children":[]},{"level":3,"title":"ContentLogScreenController","slug":"contentlogscreencontroller","link":"#contentlogscreencontroller","children":[]},{"level":3,"title":"ContentLogScreenController_vtbl","slug":"contentlogscreencontroller-vtbl","link":"#contentlogscreencontroller-vtbl","children":[]},{"level":3,"title":"ContentLogHistoryScreenController","slug":"contentloghistoryscreencontroller","link":"#contentloghistoryscreencontroller","children":[]},{"level":3,"title":"ContentLogHistoryScreenController_vtbl","slug":"contentloghistoryscreencontroller-vtbl","link":"#contentloghistoryscreencontroller-vtbl","children":[]},{"level":3,"title":"ControlsSettingsScreenController","slug":"controlssettingsscreencontroller","link":"#controlssettingsscreencontroller","children":[]},{"level":3,"title":"ControlsSettingsScreenController::BindingInfo","slug":"controlssettingsscreencontroller-bindinginfo","link":"#controlssettingsscreencontroller-bindinginfo","children":[]},{"level":3,"title":"ControlsSettingsScreenController_vtbl","slug":"controlssettingsscreencontroller-vtbl","link":"#controlssettingsscreencontroller-vtbl","children":[]},{"level":3,"title":"ConvertPurchasesToXBLScreenController","slug":"convertpurchasestoxblscreencontroller","link":"#convertpurchasestoxblscreencontroller","children":[]},{"level":3,"title":"ConvertPurchasesToXBLScreenController_vtbl","slug":"convertpurchasestoxblscreencontroller-vtbl","link":"#convertpurchasestoxblscreencontroller-vtbl","children":[]},{"level":3,"title":"CourseScreenController","slug":"coursescreencontroller","link":"#coursescreencontroller","children":[]}],"git":{"updatedTime":1722099801000,"contributors":[{"name":"RedbeanW","email":"redbeana44945@gmail.com","commits":1},{"name":"VinkyV","email":"75137786+VinkyV@users.noreply.github.com","commits":1}]},"filePathRelative":"1.16.201/structure/C.md"}');export{p as comp,u as data};
